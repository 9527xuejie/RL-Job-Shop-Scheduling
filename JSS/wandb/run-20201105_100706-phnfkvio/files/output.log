2020-11-05 10:07:09,883	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.8/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab943_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=37688)[0m 2020-11-05 10:07:12,633	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=37672)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37672)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37672)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37634)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37634)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37634)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37616)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37645)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37645)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37645)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37629)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37629)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37629)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37628)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37628)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37628)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37635)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37635)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37635)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37660)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37660)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37660)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37653)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37653)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37653)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37671)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37671)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37671)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37640)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37640)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37640)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37636)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37636)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37636)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37610)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37549)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37549)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37582)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37582)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37582)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37650)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37650)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37650)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37574)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37574)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37574)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37571)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37571)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37571)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37642)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37642)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37642)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37642)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37642)[0m *** SIGSEGV (@0x0) received by PID 37642 (TID 0x7feed7989700) from PID 0; stack trace: ***
[2m[36m(pid=37556)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37556)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37556)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37631)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37631)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37631)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37575)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37575)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37575)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37675)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37675)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37675)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37564)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37564)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37564)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37564)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37564)[0m *** SIGSEGV (@0x0) received by PID 37564 (TID 0x7f7d830ee700) from PID 0; stack trace: ***
[2m[36m(pid=37564)[0m     @     0x7f7d82cc7390 (unknown)
[2m[36m(pid=37564)[0m     @     0x7f4e82c51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37564)[0m     @     0x7f4e8237c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37638)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37638)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37638)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37638)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37638)[0m *** SIGSEGV (@0x0) received by PID 37638 (TID 0x7fea77d00700) from PID 0; stack trace: ***
[2m[36m(pid=37638)[0m     @     0x7fea778d9390 (unknown)
[2m[36m(pid=37638)[0m     @     0x7fbb77871f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37641)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37641)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37641)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37641)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37641)[0m *** SIGSEGV (@0x0) received by PID 37641 (TID 0x7f07510eb700) from PID 0; stack trace: ***
[2m[36m(pid=37557)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37557)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37557)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37557)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37557)[0m *** SIGSEGV (@0x0) received by PID 37557 (TID 0x7fb495d36700) from PID 0; stack trace: ***
[2m[36m(pid=37557)[0m     @     0x7fb49590f390 (unknown)
[2m[36m(pid=37557)[0m     @     0x7f85957f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37557)[0m     @     0x7f8594f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37560)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37560)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37560)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37560)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37560)[0m *** SIGSEGV (@0x0) received by PID 37560 (TID 0x7f57a5fb0700) from PID 0; stack trace: ***
[2m[36m(pid=37560)[0m     @     0x7f57a5b89390 (unknown)
[2m[36m(pid=37676)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37676)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37676)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37676)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37676)[0m *** SIGSEGV (@0x0) received by PID 37676 (TID 0x7f71f1ba5700) from PID 0; stack trace: ***
[2m[36m(pid=37676)[0m     @     0x7f71f177e390 (unknown)
[2m[36m(pid=37676)[0m     @     0x7f42f16f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37676)[0m     @     0x7f42f0e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37568)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37568)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37568)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37568)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37568)[0m *** SIGSEGV (@0x0) received by PID 37568 (TID 0x7f6c424e2700) from PID 0; stack trace: ***
[2m[36m(pid=37568)[0m     @     0x7f6c420bb390 (unknown)
[2m[36m(pid=37568)[0m     @     0x7f3d4204df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37562)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37562)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37562)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37562)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37562)[0m *** SIGSEGV (@0x0) received by PID 37562 (TID 0x7f61d988b700) from PID 0; stack trace: ***
[2m[36m(pid=37562)[0m     @     0x7f61d9464390 (unknown)
[2m[36m(pid=37623)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37623)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37623)[0m *** Aborted at 1604570837 (unix time) try "date -d @1604570837" if you are using GNU date ***
[2m[36m(pid=37623)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37623)[0m *** SIGSEGV (@0x0) received by PID 37623 (TID 0x7f234d289700) from PID 0; stack trace: ***
[2m[36m(pid=37623)[0m     @     0x7f234ce62390 (unknown)
[2m[36m(pid=37623)[0m     @     0x7ef44cdd2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37623)[0m     @     0x7ef44c4fd7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37583)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37583)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37583)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37583)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37583)[0m *** SIGSEGV (@0x0) received by PID 37583 (TID 0x7f1ba83a6700) from PID 0; stack trace: ***
[2m[36m(pid=37583)[0m     @     0x7f1ba7f7f390 (unknown)
[2m[36m(pid=37652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37652)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37652)[0m *** SIGSEGV (@0x0) received by PID 37652 (TID 0x7f018b8e2700) from PID 0; stack trace: ***
[2m[36m(pid=37652)[0m     @     0x7f018b4bb390 (unknown)
[2m[36m(pid=37652)[0m     @     0x7ed28ac15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37652)[0m     @     0x7ed28a3407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37684)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37684)[0m *** SIGSEGV (@0x0) received by PID 37684 (TID 0x7f9abce6b700) from PID 0; stack trace: ***
[2m[36m(pid=37684)[0m     @     0x7f9abca44390 (unknown)
[2m[36m(pid=37684)[0m     @     0x7f6bbc825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37684)[0m     @     0x7f6bbbf507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37572)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37572)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37572)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37572)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37572)[0m *** SIGSEGV (@0x0) received by PID 37572 (TID 0x7f935dd1a700) from PID 0; stack trace: ***
[2m[36m(pid=37572)[0m     @     0x7f935d8f3390 (unknown)
[2m[36m(pid=37572)[0m     @     0x7f645d7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37572)[0m     @     0x7f645cf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37580)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37580)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37580)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37580)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37580)[0m *** SIGSEGV (@0x0) received by PID 37580 (TID 0x7f4c3970b700) from PID 0; stack trace: ***
[2m[36m(pid=37580)[0m     @     0x7f4c392e4390 (unknown)
[2m[36m(pid=37580)[0m     @     0x7f1d3924af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37580)[0m     @     0x7f1d389757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37580)[0m     @     0x7f1d389788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37672)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37672)[0m *** SIGSEGV (@0x0) received by PID 37672 (TID 0x7f4abe3cf700) from PID 0; stack trace: ***
[2m[36m(pid=37672)[0m     @     0x7f4abdfa8390 (unknown)
[2m[36m(pid=37672)[0m     @     0x7f1bbde24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37672)[0m     @     0x7f1bbd54f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37672)[0m     @     0x7f1bbd5528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37672)[0m     @     0x7f1bbd552ad3 at::TensorIterator::for_each()
[2m[36m(pid=37672)[0m     @     0x7f1bbd552d91 at::TensorIterator::for_each()
[2m[36m(pid=37672)[0m     @     0x7f1bbde35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37634)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37634)[0m *** SIGSEGV (@0x0) received by PID 37634 (TID 0x7fbe9f8fd700) from PID 0; stack trace: ***
[2m[36m(pid=37634)[0m     @     0x7fbe9f4d6390 (unknown)
[2m[36m(pid=37634)[0m     @     0x7f8f9f46af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37634)[0m     @     0x7f8f9eb957db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37634)[0m     @     0x7f8f9eb988f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37634)[0m     @     0x7f8f9eb98ad3 at::TensorIterator::for_each()
[2m[36m(pid=37616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37616)[0m *** SIGSEGV (@0x0) received by PID 37616 (TID 0x7fb8480ca700) from PID 0; stack trace: ***
[2m[36m(pid=37616)[0m     @     0x7fb847ca3390 (unknown)
[2m[36m(pid=37616)[0m     @     0x7f89479c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37616)[0m     @     0x7f89470f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37616)[0m     @     0x7f89470f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37645)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37645)[0m *** SIGSEGV (@0x0) received by PID 37645 (TID 0x7fda370bf700) from PID 0; stack trace: ***
[2m[36m(pid=37645)[0m     @     0x7fda36c98390 (unknown)
[2m[36m(pid=37645)[0m     @     0x7fab36a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37645)[0m     @     0x7fab3614c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37645)[0m     @     0x7fab3614f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37629)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37629)[0m *** SIGSEGV (@0x0) received by PID 37629 (TID 0x7fcc0a412700) from PID 0; stack trace: ***
[2m[36m(pid=37629)[0m     @     0x7fcc09feb390 (unknown)
[2m[36m(pid=37629)[0m     @     0x7f9d09e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37629)[0m     @     0x7f9d0954f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37629)[0m     @     0x7f9d095528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37628)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37628)[0m *** SIGSEGV (@0x0) received by PID 37628 (TID 0x7f9af446f700) from PID 0; stack trace: ***
[2m[36m(pid=37628)[0m     @     0x7f9af4048390 (unknown)
[2m[36m(pid=37628)[0m     @     0x7f6bf3ed8f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37628)[0m     @     0x7f6bf36037db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37628)[0m     @     0x7f6bf36068f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37628)[0m     @     0x7f6bf3606ad3 at::TensorIterator::for_each()
[2m[36m(pid=37628)[0m     @     0x7f6bf3606d91 at::TensorIterator::for_each()
[2m[36m(pid=37635)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37635)[0m *** SIGSEGV (@0x0) received by PID 37635 (TID 0x7f654eba6700) from PID 0; stack trace: ***
[2m[36m(pid=37635)[0m     @     0x7f654e77f390 (unknown)
[2m[36m(pid=37635)[0m     @     0x7f364e4f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37635)[0m     @     0x7f364dc247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37635)[0m     @     0x7f364dc278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37635)[0m     @     0x7f364dc27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37660)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37660)[0m *** SIGSEGV (@0x0) received by PID 37660 (TID 0x7fbf0ed35700) from PID 0; stack trace: ***
[2m[36m(pid=37660)[0m     @     0x7fbf0e90e390 (unknown)
[2m[36m(pid=37660)[0m     @     0x7f900e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37660)[0m     @     0x7f900de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37660)[0m     @     0x7f900de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37660)[0m     @     0x7f900de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=37653)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37653)[0m *** SIGSEGV (@0x0) received by PID 37653 (TID 0x7fe1dc294700) from PID 0; stack trace: ***
[2m[36m(pid=37653)[0m     @     0x7fe1dbe6d390 (unknown)
[2m[36m(pid=37653)[0m     @     0x7fb2dbbf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37653)[0m     @     0x7fb2db3227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37653)[0m     @     0x7fb2db3258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37671)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37671)[0m *** SIGSEGV (@0x0) received by PID 37671 (TID 0x7f4270bc2700) from PID 0; stack trace: ***
[2m[36m(pid=37671)[0m     @     0x7f427079b390 (unknown)
[2m[36m(pid=37671)[0m     @     0x7f1370563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37671)[0m     @     0x7f136fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37671)[0m     @     0x7f136fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37640)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37640)[0m *** SIGSEGV (@0x0) received by PID 37640 (TID 0x7f603e261700) from PID 0; stack trace: ***
[2m[36m(pid=37640)[0m     @     0x7f603de3a390 (unknown)
[2m[36m(pid=37640)[0m     @     0x7f313dde4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37640)[0m     @     0x7f313d50f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37640)[0m     @     0x7f313d5128f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37640)[0m     @     0x7f313d512ad3 at::TensorIterator::for_each()
[2m[36m(pid=37636)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37636)[0m *** SIGSEGV (@0x0) received by PID 37636 (TID 0x7fb39c8a3700) from PID 0; stack trace: ***
[2m[36m(pid=37636)[0m     @     0x7fb39c47c390 (unknown)
[2m[36m(pid=37636)[0m     @     0x7f849c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37636)[0m     @     0x7f849ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37636)[0m     @     0x7f849ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37636)[0m     @     0x7f849ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=37553)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37553)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37610)[0m *** SIGSEGV (@0x0) received by PID 37610 (TID 0x7ff198298700) from PID 0; stack trace: ***
[2m[36m(pid=37610)[0m     @     0x7ff197e71390 (unknown)
[2m[36m(pid=37610)[0m     @     0x7fc297ddef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37610)[0m     @     0x7fc2975097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37610)[0m     @     0x7fc29750c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37549)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37549)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37549)[0m *** SIGSEGV (@0x0) received by PID 37549 (TID 0x7efde5126700) from PID 0; stack trace: ***
[2m[36m(pid=37549)[0m     @     0x7efde4cff390 (unknown)
[2m[36m(pid=37549)[0m     @     0x7ecee4c87f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37549)[0m     @     0x7ecee43b27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37549)[0m     @     0x7ecee43b58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37582)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37582)[0m *** SIGSEGV (@0x0) received by PID 37582 (TID 0x7fef05648700) from PID 0; stack trace: ***
[2m[36m(pid=37582)[0m     @     0x7fef05221390 (unknown)
[2m[36m(pid=37582)[0m     @     0x7fc0050b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37582)[0m     @     0x7fc0047e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37582)[0m     @     0x7fc0047e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37582)[0m     @     0x7fc0047e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=37677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37677)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37677)[0m *** SIGSEGV (@0x0) received by PID 37677 (TID 0x7f95009a9700) from PID 0; stack trace: ***
[2m[36m(pid=37677)[0m     @     0x7f9500582390 (unknown)
[2m[36m(pid=37677)[0m     @     0x7f66003e3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37677)[0m     @     0x7f65ffb0e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37650)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37650)[0m *** SIGSEGV (@0x0) received by PID 37650 (TID 0x7feafbe6a700) from PID 0; stack trace: ***
[2m[36m(pid=37650)[0m     @     0x7feafba43390 (unknown)
[2m[36m(pid=37650)[0m     @     0x7fbbfb751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37650)[0m     @     0x7fbbfae7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37650)[0m     @     0x7fbbfae7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37570)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37570)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37570)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37678)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37574)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37574)[0m *** SIGSEGV (@0x0) received by PID 37574 (TID 0x7fa99d8b3700) from PID 0; stack trace: ***
[2m[36m(pid=37574)[0m     @     0x7fa99d48c390 (unknown)
[2m[36m(pid=37574)[0m     @     0x7f7a9d3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37574)[0m     @     0x7f7a9caf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37574)[0m     @     0x7f7a9cafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37571)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37571)[0m *** SIGSEGV (@0x0) received by PID 37571 (TID 0x7f215beb2700) from PID 0; stack trace: ***
[2m[36m(pid=37571)[0m     @     0x7f215ba8b390 (unknown)
[2m[36m(pid=37571)[0m     @     0x7ef25ba23f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37571)[0m     @     0x7ef25b14e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37642)[0m     @     0x7feed7562390 (unknown)
[2m[36m(pid=37642)[0m     @     0x7fbfd6c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37642)[0m     @     0x7fbfd63407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37642)[0m     @     0x7fbfd63438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37642)[0m     @     0x7fbfd6343ad3 at::TensorIterator::for_each()
[2m[36m(pid=37556)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37556)[0m *** SIGSEGV (@0x0) received by PID 37556 (TID 0x7f8a5c331700) from PID 0; stack trace: ***
[2m[36m(pid=37556)[0m     @     0x7f8a5bf0a390 (unknown)
[2m[36m(pid=37556)[0m     @     0x7f5b5beb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37556)[0m     @     0x7f5b5b5e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37556)[0m     @     0x7f5b5b5e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37631)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37631)[0m *** SIGSEGV (@0x0) received by PID 37631 (TID 0x7f4d16b1c700) from PID 0; stack trace: ***
[2m[36m(pid=37631)[0m     @     0x7f4d166f5390 (unknown)
[2m[36m(pid=37631)[0m     @     0x7f1e164f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37631)[0m     @     0x7f1e15c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37631)[0m     @     0x7f1e15c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37631)[0m     @     0x7f1e15c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37575)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37575)[0m *** SIGSEGV (@0x0) received by PID 37575 (TID 0x7ffb90746700) from PID 0; stack trace: ***
[2m[36m(pid=37575)[0m     @     0x7ffb9031f390 (unknown)
[2m[36m(pid=37575)[0m     @     0x7fcc90290f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37575)[0m     @     0x7fcc8f9bb7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37575)[0m     @     0x7fcc8f9be8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37675)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37675)[0m *** SIGSEGV (@0x0) received by PID 37675 (TID 0x7f920a8cf700) from PID 0; stack trace: ***
[2m[36m(pid=37675)[0m     @     0x7f920a4a8390 (unknown)
[2m[36m(pid=37675)[0m     @     0x7f630a34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37675)[0m     @     0x7f6309a767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37675)[0m     @     0x7f6309a798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37675)[0m     @     0x7f6309a79ad3 at::TensorIterator::for_each()
[2m[36m(pid=37564)[0m     @     0x7f4e8237f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37564)[0m     @     0x7f4e8237fad3 at::TensorIterator::for_each()
[2m[36m(pid=37564)[0m     @     0x7f4e8237fd91 at::TensorIterator::for_each()
[2m[36m(pid=37567)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37567)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37567)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37550)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37550)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37550)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37638)[0m     @     0x7fbb76f9c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37638)[0m     @     0x7fbb76f9f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37641)[0m     @     0x7f0750cc4390 (unknown)
[2m[36m(pid=37641)[0m     @     0x7ed850bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37641)[0m     @     0x7ed8502fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37641)[0m     @     0x7ed8502ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37626)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37552)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37552)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37552)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37557)[0m     @     0x7f8594f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37557)[0m     @     0x7f8594f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37674)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37674)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37674)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37560)[0m     @     0x7f28a5a0af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37560)[0m     @     0x7f28a51357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37560)[0m     @     0x7f28a51388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37554)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37554)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37554)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37676)[0m     @     0x7f42f0e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37676)[0m     @     0x7f42f0e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=37568)[0m     @     0x7f3d417787db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37568)[0m     @     0x7f3d4177b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37562)[0m     @     0x7f32d940ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37562)[0m     @     0x7f32d8b3a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37562)[0m     @     0x7f32d8b3d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37623)[0m     @     0x7ef44c5008f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37623)[0m     @     0x7ef44c500ad3 at::TensorIterator::for_each()
[2m[36m(pid=37623)[0m     @     0x7ef44c500d91 at::TensorIterator::for_each()
[2m[36m(pid=37623)[0m     @     0x7ef44cde3b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37583)[0m     @     0x7eeca7eb6f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37583)[0m     @     0x7eeca75e17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37583)[0m     @     0x7eeca75e48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37652)[0m     @     0x7ed28a3438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37652)[0m     @     0x7ed28a343ad3 at::TensorIterator::for_each()
[2m[36m(pid=37684)[0m     @     0x7f6bbbf538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37684)[0m     @     0x7f6bbbf53ad3 at::TensorIterator::for_each()
[2m[36m(pid=37565)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37565)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37613)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37618)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37618)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37618)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37619)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37617)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37617)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37662)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37662)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37665)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37572)[0m     @     0x7f645cf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37572)[0m     @     0x7f645cf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37625)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37680)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37693)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37693)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37693)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37693)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37693)[0m *** SIGSEGV (@0x0) received by PID 37693 (TID 0x7f6c210f2700) from PID 0; stack trace: ***
[2m[36m(pid=37693)[0m     @     0x7f6c20ccb390 (unknown)
[2m[36m(pid=37693)[0m     @     0x7f3d20bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37586)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37586)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37586)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37586)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37586)[0m *** SIGSEGV (@0x0) received by PID 37586 (TID 0x7f1043978700) from PID 0; stack trace: ***
[2m[36m(pid=37559)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37559)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37559)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37559)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37559)[0m *** SIGSEGV (@0x0) received by PID 37559 (TID 0x7f31e881f700) from PID 0; stack trace: ***
[2m[36m(pid=37566)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37566)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37566)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37566)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37566)[0m *** SIGSEGV (@0x0) received by PID 37566 (TID 0x7f7d2d06b700) from PID 0; stack trace: ***
[2m[36m(pid=37561)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37561)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37561)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37637)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37637)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37637)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37637)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37637)[0m *** SIGSEGV (@0x0) received by PID 37637 (TID 0x7fb4295ee700) from PID 0; stack trace: ***
[2m[36m(pid=37588)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37588)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37588)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37588)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37588)[0m *** SIGSEGV (@0x0) received by PID 37588 (TID 0x7feb77c60700) from PID 0; stack trace: ***
[2m[36m(pid=37588)[0m     @     0x7feb77839390 (unknown)
[2m[36m(pid=37573)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37573)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37573)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37573)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37580)[0m     @     0x7f1d38978ad3 at::TensorIterator::for_each()
[2m[36m(pid=37580)[0m     @     0x7f1d38978d91 at::TensorIterator::for_each()
[2m[36m(pid=37580)[0m     @     0x7f1d3925bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37580)[0m     @     0x7f1d3927ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37672)[0m     @     0x7f1bbde58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37672)[0m     @     0x7f1bbd2faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37672)[0m     @     0x7f1bbd2f8388 at::native::copy_impl()
[2m[36m(pid=37672)[0m     @     0x7f1bbd2fa5a4 at::native::copy_()
[2m[36m(pid=37634)[0m     @     0x7f8f9eb98d91 at::TensorIterator::for_each()
[2m[36m(pid=37634)[0m     @     0x7f8f9f47bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37634)[0m     @     0x7f8f9f49ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37634)[0m     @     0x7f8f9e940a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37634)[0m     @     0x7f8f9e93e388 at::native::copy_impl()
[2m[36m(pid=37616)[0m     @     0x7f89470f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=37616)[0m     @     0x7f89470f3d91 at::TensorIterator::for_each()
[2m[36m(pid=37616)[0m     @     0x7f89479d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37616)[0m     @     0x7f89479f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37645)[0m     @     0x7fab3614fad3 at::TensorIterator::for_each()
[2m[36m(pid=37645)[0m     @     0x7fab3614fd91 at::TensorIterator::for_each()
[2m[36m(pid=37645)[0m     @     0x7fab36a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37645)[0m     @     0x7fab36a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37629)[0m     @     0x7f9d09552ad3 at::TensorIterator::for_each()
[2m[36m(pid=37629)[0m     @     0x7f9d09552d91 at::TensorIterator::for_each()
[2m[36m(pid=37629)[0m     @     0x7f9d09e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37628)[0m     @     0x7f6bf3ee9b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37628)[0m     @     0x7f6bf3f0cc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37628)[0m     @     0x7f6bf33aea93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37628)[0m     @     0x7f6bf33ac388 at::native::copy_impl()
[2m[36m(pid=37622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37622)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37635)[0m     @     0x7f364dc27d91 at::TensorIterator::for_each()
[2m[36m(pid=37635)[0m     @     0x7f364e50ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37635)[0m     @     0x7f364e52dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37635)[0m     @     0x7f364d9cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37635)[0m     @     0x7f364d9cd388 at::native::copy_impl()
[2m[36m(pid=37660)[0m     @     0x7f900de38d91 at::TensorIterator::for_each()
[2m[36m(pid=37660)[0m     @     0x7f900e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37660)[0m     @     0x7f900e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37660)[0m     @     0x7f900dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37660)[0m     @     0x7f900dbde388 at::native::copy_impl()
[2m[36m(pid=37653)[0m     @     0x7fb2db325ad3 at::TensorIterator::for_each()
[2m[36m(pid=37653)[0m     @     0x7fb2db325d91 at::TensorIterator::for_each()
[2m[36m(pid=37671)[0m     @     0x7f136fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=37671)[0m     @     0x7f136fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=37671)[0m     @     0x7f1370574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37671)[0m     @     0x7f1370597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37640)[0m     @     0x7f313d512d91 at::TensorIterator::for_each()
[2m[36m(pid=37640)[0m     @     0x7f313ddf5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37640)[0m     @     0x7f313de18c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37640)[0m     @     0x7f313d2baa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37640)[0m     @     0x7f313d2b8388 at::native::copy_impl()
[2m[36m(pid=37636)[0m     @     0x7f849ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=37636)[0m     @     0x7f849c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37636)[0m     @     0x7f849c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37636)[0m     @     0x7f849b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37636)[0m     @     0x7f849b807388 at::native::copy_impl()
[2m[36m(pid=37553)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37553)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37553)[0m *** SIGSEGV (@0x0) received by PID 37553 (TID 0x7f586c778700) from PID 0; stack trace: ***
[2m[36m(pid=37553)[0m     @     0x7f586c351390 (unknown)
[2m[36m(pid=37553)[0m     @     0x7f296c2f3f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37553)[0m     @     0x7f296ba1e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37553)[0m     @     0x7f296ba218f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37610)[0m     @     0x7fc29750cad3 at::TensorIterator::for_each()
[2m[36m(pid=37610)[0m     @     0x7fc29750cd91 at::TensorIterator::for_each()
[2m[36m(pid=37610)[0m     @     0x7fc297defb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37610)[0m     @     0x7fc297e12c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37610)[0m     @     0x7fc2972b4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37549)[0m     @     0x7ecee43b5ad3 at::TensorIterator::for_each()
[2m[36m(pid=37549)[0m     @     0x7ecee43b5d91 at::TensorIterator::for_each()
[2m[36m(pid=37549)[0m     @     0x7ecee4c98b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37549)[0m     @     0x7ecee4cbbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37582)[0m     @     0x7fc0047e3d91 at::TensorIterator::for_each()
[2m[36m(pid=37582)[0m     @     0x7fc0050c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37582)[0m     @     0x7fc0050e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37582)[0m     @     0x7fc00458ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37582)[0m     @     0x7fc004589388 at::native::copy_impl()
[2m[36m(pid=37677)[0m     @     0x7f65ffb118f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37677)[0m     @     0x7f65ffb11ad3 at::TensorIterator::for_each()
[2m[36m(pid=37677)[0m     @     0x7f65ffb11d91 at::TensorIterator::for_each()
[2m[36m(pid=37677)[0m     @     0x7f66003f4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37677)[0m     @     0x7f6600417c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37677)[0m     @     0x7f65ff8b9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37650)[0m     @     0x7fbbfae7fad3 at::TensorIterator::for_each()
[2m[36m(pid=37650)[0m     @     0x7fbbfae7fd91 at::TensorIterator::for_each()
[2m[36m(pid=37650)[0m     @     0x7fbbfb762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37650)[0m     @     0x7fbbfb785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37650)[0m     @     0x7fbbfac27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37650)[0m     @     0x7fbbfac25388 at::native::copy_impl()
[2m[36m(pid=37569)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37569)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37569)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37569)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37569)[0m *** SIGSEGV (@0x0) received by PID 37569 (TID 0x7f4833685700) from PID 0; stack trace: ***
[2m[36m(pid=37569)[0m     @     0x7f483325e390 (unknown)
[2m[36m(pid=37569)[0m     @     0x7f1933124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37569)[0m     @     0x7f193284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37570)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37570)[0m *** SIGSEGV (@0x0) received by PID 37570 (TID 0x7f0ba8669700) from PID 0; stack trace: ***
[2m[36m(pid=37570)[0m     @     0x7f0ba8242390 (unknown)
[2m[36m(pid=37570)[0m     @     0x7edca801cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37570)[0m     @     0x7edca77477db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37570)[0m     @     0x7edca774a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37570)[0m     @     0x7edca774aad3 at::TensorIterator::for_each()
[2m[36m(pid=37678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37678)[0m *** SIGSEGV (@0x0) received by PID 37678 (TID 0x7f24f6bb3700) from PID 0; stack trace: ***
[2m[36m(pid=37678)[0m     @     0x7f24f678c390 (unknown)
[2m[36m(pid=37678)[0m     @     0x7ef5f64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37678)[0m     @     0x7ef5f5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37678)[0m     @     0x7ef5f5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37574)[0m     @     0x7f7a9cafaad3 at::TensorIterator::for_each()
[2m[36m(pid=37574)[0m     @     0x7f7a9cafad91 at::TensorIterator::for_each()
[2m[36m(pid=37574)[0m     @     0x7f7a9d3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37574)[0m     @     0x7f7a9d400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37574)[0m     @     0x7f7a9c8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37574)[0m     @     0x7f7a9c8a0388 at::native::copy_impl()
[2m[36m(pid=37571)[0m     @     0x7ef25b1518f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37571)[0m     @     0x7ef25b151ad3 at::TensorIterator::for_each()
[2m[36m(pid=37571)[0m     @     0x7ef25b151d91 at::TensorIterator::for_each()
[2m[36m(pid=37571)[0m     @     0x7ef25ba34b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37571)[0m     @     0x7ef25ba57c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37633)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37633)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37633)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37642)[0m     @     0x7fbfd6343d91 at::TensorIterator::for_each()
[2m[36m(pid=37642)[0m     @     0x7fbfd6c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37642)[0m     @     0x7fbfd6c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37642)[0m     @     0x7fbfd60eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37642)[0m     @     0x7fbfd60e9388 at::native::copy_impl()
[2m[36m(pid=37556)[0m     @     0x7f5b5b5e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=37556)[0m     @     0x7f5b5b5e4d91 at::TensorIterator::for_each()
[2m[36m(pid=37556)[0m     @     0x7f5b5bec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37556)[0m     @     0x7f5b5beeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37556)[0m     @     0x7f5b5b38ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37556)[0m     @     0x7f5b5b38a388 at::native::copy_impl()
[2m[36m(pid=37631)[0m     @     0x7f1e15c27d91 at::TensorIterator::for_each()
[2m[36m(pid=37631)[0m     @     0x7f1e1650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37631)[0m     @     0x7f1e1652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37631)[0m     @     0x7f1e159cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37631)[0m     @     0x7f1e159cd388 at::native::copy_impl()
[2m[36m(pid=37631)[0m     @     0x7f1e159cf5a4 at::native::copy_()
[2m[36m(pid=37631)[0m     @     0x7f1e160ba4f5 at::Tensor::copy_()
[2m[36m(pid=37575)[0m     @     0x7fcc8f9bead3 at::TensorIterator::for_each()
[2m[36m(pid=37575)[0m     @     0x7fcc8f9bed91 at::TensorIterator::for_each()
[2m[36m(pid=37575)[0m     @     0x7fcc902a1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37575)[0m     @     0x7fcc902c4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37575)[0m     @     0x7fcc8f766a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37575)[0m     @     0x7fcc8f764388 at::native::copy_impl()
[2m[36m(pid=37675)[0m     @     0x7f6309a79d91 at::TensorIterator::for_each()
[2m[36m(pid=37675)[0m     @     0x7f630a35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37675)[0m     @     0x7f630a37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37675)[0m     @     0x7f6309821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37675)[0m     @     0x7f630981f388 at::native::copy_impl()
[2m[36m(pid=37675)[0m     @     0x7f63098215a4 at::native::copy_()
[2m[36m(pid=37564)[0m     @     0x7f4e82c62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37564)[0m     @     0x7f4e82c85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37564)[0m     @     0x7f4e82127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37564)[0m     @     0x7f4e82125388 at::native::copy_impl()
[2m[36m(pid=37564)[0m     @     0x7f4e821275a4 at::native::copy_()
[2m[36m(pid=37564)[0m     @     0x7f4e828124f5 at::Tensor::copy_()
[2m[36m(pid=37567)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37567)[0m *** SIGSEGV (@0x0) received by PID 37567 (TID 0x7f6690ad0700) from PID 0; stack trace: ***
[2m[36m(pid=37567)[0m     @     0x7f66906a9390 (unknown)
[2m[36m(pid=37567)[0m     @     0x7f379065ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37567)[0m     @     0x7f378fd8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37567)[0m     @     0x7f378fd8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37550)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37550)[0m *** SIGSEGV (@0x0) received by PID 37550 (TID 0x7f7370b55700) from PID 0; stack trace: ***
[2m[36m(pid=37550)[0m     @     0x7f737072e390 (unknown)
[2m[36m(pid=37550)[0m     @     0x7f44706dff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37550)[0m     @     0x7f446fe0a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37638)[0m     @     0x7fbb76f9fad3 at::TensorIterator::for_each()
[2m[36m(pid=37638)[0m     @     0x7fbb76f9fd91 at::TensorIterator::for_each()
[2m[36m(pid=37638)[0m     @     0x7fbb77882b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37638)[0m     @     0x7fbb778a5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37638)[0m     @     0x7fbb76d47a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37638)[0m     @     0x7fbb76d45388 at::native::copy_impl()
[2m[36m(pid=37641)[0m     @     0x7ed8502ffad3 at::TensorIterator::for_each()
[2m[36m(pid=37641)[0m     @     0x7ed8502ffd91 at::TensorIterator::for_each()
[2m[36m(pid=37641)[0m     @     0x7ed850be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37641)[0m     @     0x7ed850c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37626)[0m *** SIGSEGV (@0x0) received by PID 37626 (TID 0x7fb87913b700) from PID 0; stack trace: ***
[2m[36m(pid=37626)[0m     @     0x7fb878d14390 (unknown)
[2m[36m(pid=37626)[0m     @     0x7f8978c1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37626)[0m     @     0x7f897834a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37626)[0m     @     0x7f897834d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37552)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37552)[0m *** SIGSEGV (@0x0) received by PID 37552 (TID 0x7f9de9125700) from PID 0; stack trace: ***
[2m[36m(pid=37552)[0m     @     0x7f9de8cfe390 (unknown)
[2m[36m(pid=37552)[0m     @     0x7f6ee8940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37552)[0m     @     0x7f6ee806b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37552)[0m     @     0x7f6ee806e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37557)[0m     @     0x7f8594f27d91 at::TensorIterator::for_each()
[2m[36m(pid=37557)[0m     @     0x7f859580ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37557)[0m     @     0x7f859582dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37557)[0m     @     0x7f8594ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37557)[0m     @     0x7f8594ccd388 at::native::copy_impl()
[2m[36m(pid=37647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37647)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37647)[0m *** SIGSEGV (@0x0) received by PID 37647 (TID 0x7fdc08194700) from PID 0; stack trace: ***
[2m[36m(pid=37647)[0m     @     0x7fdc07d6d390 (unknown)
[2m[36m(pid=37647)[0m     @     0x7fad07cf9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37647)[0m     @     0x7fad074247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37674)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37674)[0m *** SIGSEGV (@0x0) received by PID 37674 (TID 0x7fc26333f700) from PID 0; stack trace: ***
[2m[36m(pid=37674)[0m     @     0x7fc262f18390 (unknown)
[2m[36m(pid=37674)[0m     @     0x7f9362e93f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37674)[0m     @     0x7f93625be7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37674)[0m     @     0x7f93625c18f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37674)[0m     @     0x7f93625c1ad3 at::TensorIterator::for_each()
[2m[36m(pid=37560)[0m     @     0x7f28a5138ad3 at::TensorIterator::for_each()
[2m[36m(pid=37560)[0m     @     0x7f28a5138d91 at::TensorIterator::for_each()
[2m[36m(pid=37560)[0m     @     0x7f28a5a1bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37560)[0m     @     0x7f28a5a3ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37560)[0m     @     0x7f28a4ee0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37560)[0m     @     0x7f28a4ede388 at::native::copy_impl()
[2m[36m(pid=37551)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37551)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37551)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37551)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37551)[0m *** SIGSEGV (@0x0) received by PID 37551 (TID 0x7f6ce64c5700) from PID 0; stack trace: ***
[2m[36m(pid=37554)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37554)[0m *** SIGSEGV (@0x0) received by PID 37554 (TID 0x7f850359e700) from PID 0; stack trace: ***
[2m[36m(pid=37554)[0m     @     0x7f8503177390 (unknown)
[2m[36m(pid=37554)[0m     @     0x7f5603124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37554)[0m     @     0x7f560284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37554)[0m     @     0x7f56028528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37676)[0m     @     0x7f42f0e22d91 at::TensorIterator::for_each()
[2m[36m(pid=37676)[0m     @     0x7f42f1705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37676)[0m     @     0x7f42f1728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37676)[0m     @     0x7f42f0bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37676)[0m     @     0x7f42f0bc8388 at::native::copy_impl()
[2m[36m(pid=37676)[0m     @     0x7f42f0bca5a4 at::native::copy_()
[2m[36m(pid=37568)[0m     @     0x7f3d4177bad3 at::TensorIterator::for_each()
[2m[36m(pid=37568)[0m     @     0x7f3d4177bd91 at::TensorIterator::for_each()
[2m[36m(pid=37568)[0m     @     0x7f3d4205eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37568)[0m     @     0x7f3d42081c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37568)[0m     @     0x7f3d41523a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37568)[0m     @     0x7f3d41521388 at::native::copy_impl()
[2m[36m(pid=37562)[0m     @     0x7f32d8b3dad3 at::TensorIterator::for_each()
[2m[36m(pid=37562)[0m     @     0x7f32d8b3dd91 at::TensorIterator::for_each()
[2m[36m(pid=37562)[0m     @     0x7f32d9420b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37562)[0m     @     0x7f32d9443c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37562)[0m     @     0x7f32d88e5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37562)[0m     @     0x7f32d88e3388 at::native::copy_impl()
[2m[36m(pid=37623)[0m     @     0x7ef44ce06c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37623)[0m     @     0x7ef44c2a8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37623)[0m     @     0x7ef44c2a6388 at::native::copy_impl()
[2m[36m(pid=37623)[0m     @     0x7ef44c2a85a4 at::native::copy_()
[2m[36m(pid=37623)[0m     @     0x7ef44c9934f5 at::Tensor::copy_()
[2m[36m(pid=37623)[0m     @     0x7ef44ee668de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37583)[0m     @     0x7eeca75e4ad3 at::TensorIterator::for_each()
[2m[36m(pid=37583)[0m     @     0x7eeca75e4d91 at::TensorIterator::for_each()
[2m[36m(pid=37583)[0m     @     0x7eeca7ec7b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37583)[0m     @     0x7eeca7eeac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37583)[0m     @     0x7eeca738ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37583)[0m     @     0x7eeca738a388 at::native::copy_impl()
[2m[36m(pid=37652)[0m     @     0x7ed28a343d91 at::TensorIterator::for_each()
[2m[36m(pid=37652)[0m     @     0x7ed28ac26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37652)[0m     @     0x7ed28ac49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37652)[0m     @     0x7ed28a0eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37652)[0m     @     0x7ed28a0e9388 at::native::copy_impl()
[2m[36m(pid=37652)[0m     @     0x7ed28a0eb5a4 at::native::copy_()
[2m[36m(pid=37684)[0m     @     0x7f6bbbf53d91 at::TensorIterator::for_each()
[2m[36m(pid=37684)[0m     @     0x7f6bbc836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37684)[0m     @     0x7f6bbc859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37684)[0m     @     0x7f6bbbcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37684)[0m     @     0x7f6bbbcf9388 at::native::copy_impl()
[2m[36m(pid=37684)[0m     @     0x7f6bbbcfb5a4 at::native::copy_()
[2m[36m(pid=37632)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37632)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37632)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37632)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37632)[0m *** SIGSEGV (@0x0) received by PID 37632 (TID 0x7f3b4a62f700) from PID 0; stack trace: ***
[2m[36m(pid=37632)[0m     @     0x7f3b4a208390 (unknown)
[2m[36m(pid=37632)[0m     @     0x7f0c4a13af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37632)[0m     @     0x7f0c498657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37632)[0m     @     0x7f0c498688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37639)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37639)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37639)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37639)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37639)[0m *** SIGSEGV (@0x0) received by PID 37639 (TID 0x7fd98817b700) from PID 0; stack trace: ***
[2m[36m(pid=37630)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37630)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37630)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37630)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37630)[0m *** SIGSEGV (@0x0) received by PID 37630 (TID 0x7ff1f7f9a700) from PID 0; stack trace: ***
[2m[36m(pid=37630)[0m     @     0x7ff1f7b73390 (unknown)
[2m[36m(pid=37630)[0m     @     0x7fc2f79c5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37630)[0m     @     0x7fc2f70f07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37621)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37621)[0m *** SIGSEGV (@0x0) received by PID 37621 (TID 0x7f0ee6b37700) from PID 0; stack trace: ***
[2m[36m(pid=37565)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37565)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37565)[0m *** SIGSEGV (@0x0) received by PID 37565 (TID 0x7f9c04103700) from PID 0; stack trace: ***
[2m[36m(pid=37565)[0m     @     0x7f9c03cdc390 (unknown)
[2m[36m(pid=37565)[0m     @     0x7f6d03bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37565)[0m     @     0x7f6d032f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37565)[0m     @     0x7f6d032f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37624)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37624)[0m *** SIGSEGV (@0x0) received by PID 37624 (TID 0x7f142bac7700) from PID 0; stack trace: ***
[2m[36m(pid=37624)[0m     @     0x7f142b6a0390 (unknown)
[2m[36m(pid=37624)[0m     @     0x7ee52b61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37624)[0m     @     0x7ee52ad4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37624)[0m     @     0x7ee52ad4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37555)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37555)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37555)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37555)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37555)[0m *** SIGSEGV (@0x0) received by PID 37555 (TID 0x7fcfb4f55700) from PID 0; stack trace: ***
[2m[36m(pid=37555)[0m     @     0x7fcfb4b2e390 (unknown)
[2m[36m(pid=37555)[0m     @     0x7fa0b4acdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37555)[0m     @     0x7fa0b41f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37555)[0m     @     0x7fa0b41fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37613)[0m *** SIGSEGV (@0x0) received by PID 37613 (TID 0x7ff99cc41700) from PID 0; stack trace: ***
[2m[36m(pid=37613)[0m     @     0x7ff99c81a390 (unknown)
[2m[36m(pid=37613)[0m     @     0x7fca9c73ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37613)[0m     @     0x7fca9be697db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37613)[0m     @     0x7fca9be6c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37618)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37618)[0m *** SIGSEGV (@0x0) received by PID 37618 (TID 0x7f5432920700) from PID 0; stack trace: ***
[2m[36m(pid=37618)[0m     @     0x7f54324f9390 (unknown)
[2m[36m(pid=37618)[0m     @     0x7f2532467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37618)[0m     @     0x7f2531b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37618)[0m     @     0x7f2531b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37619)[0m *** SIGSEGV (@0x0) received by PID 37619 (TID 0x7f8aadd90700) from PID 0; stack trace: ***
[2m[36m(pid=37619)[0m     @     0x7f8aad969390 (unknown)
[2m[36m(pid=37619)[0m     @     0x7f5bad7f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37619)[0m     @     0x7f5bacf247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37619)[0m     @     0x7f5bacf278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37617)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37617)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37617)[0m *** SIGSEGV (@0x0) received by PID 37617 (TID 0x7f882cb8f700) from PID 0; stack trace: ***
[2m[36m(pid=37617)[0m     @     0x7f882c768390 (unknown)
[2m[36m(pid=37617)[0m     @     0x7f592c563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37617)[0m     @     0x7f592bc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37617)[0m     @     0x7f592bc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37620)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37620)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37620)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37620)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37620)[0m *** SIGSEGV (@0x0) received by PID 37620 (TID 0x7fb43a91f700) from PID 0; stack trace: ***
[2m[36m(pid=37620)[0m     @     0x7fb43a4f8390 (unknown)
[2m[36m(pid=37620)[0m     @     0x7f853a467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37620)[0m     @     0x7f8539b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37667)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37667)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37667)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37667)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37667)[0m *** SIGSEGV (@0x0) received by PID 37667 (TID 0x7fc1bef0b700) from PID 0; stack trace: ***
[2m[36m(pid=37667)[0m     @     0x7fc1beae4390 (unknown)
[2m[36m(pid=37667)[0m     @     0x7f92bea21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37667)[0m     @     0x7f92be14c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37662)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37662)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37662)[0m *** SIGSEGV (@0x0) received by PID 37662 (TID 0x7f947c8a5700) from PID 0; stack trace: ***
[2m[36m(pid=37662)[0m     @     0x7f947c47e390 (unknown)
[2m[36m(pid=37662)[0m     @     0x7f657c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37662)[0m     @     0x7f657ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37662)[0m     @     0x7f657ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37662)[0m     @     0x7f657ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=37665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37665)[0m *** SIGSEGV (@0x0) received by PID 37665 (TID 0x7fcb11145700) from PID 0; stack trace: ***
[2m[36m(pid=37665)[0m     @     0x7fcb10d1e390 (unknown)
[2m[36m(pid=37665)[0m     @     0x7f9c10bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37665)[0m     @     0x7f9c102fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37665)[0m     @     0x7f9c102ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37665)[0m     @     0x7f9c102ffad3 at::TensorIterator::for_each()
[2m[36m(pid=37572)[0m     @     0x7f645cf27d91 at::TensorIterator::for_each()
[2m[36m(pid=37572)[0m     @     0x7f645d80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37572)[0m     @     0x7f645d82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37572)[0m     @     0x7f645cccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37572)[0m     @     0x7f645cccd388 at::native::copy_impl()
[2m[36m(pid=37572)[0m     @     0x7f645cccf5a4 at::native::copy_()
[2m[36m(pid=37572)[0m     @     0x7f645d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=37611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37611)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37611)[0m *** SIGSEGV (@0x0) received by PID 37611 (TID 0x7feb58441700) from PID 0; stack trace: ***
[2m[36m(pid=37611)[0m     @     0x7feb5801a390 (unknown)
[2m[36m(pid=37611)[0m     @     0x7fbc57e0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37611)[0m     @     0x7fbc575367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37611)[0m     @     0x7fbc575398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37625)[0m *** SIGSEGV (@0x0) received by PID 37625 (TID 0x7f6850d30700) from PID 0; stack trace: ***
[2m[36m(pid=37625)[0m     @     0x7f6850909390 (unknown)
[2m[36m(pid=37625)[0m     @     0x7f3950825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37625)[0m     @     0x7f394ff507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37625)[0m     @     0x7f394ff538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37680)[0m *** SIGSEGV (@0x0) received by PID 37680 (TID 0x7f0471da2700) from PID 0; stack trace: ***
[2m[36m(pid=37680)[0m     @     0x7f047197b390 (unknown)
[2m[36m(pid=37680)[0m     @     0x7ed5717f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37680)[0m     @     0x7ed570f247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37680)[0m     @     0x7ed570f278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37693)[0m     @     0x7f3d202fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37693)[0m     @     0x7f3d202ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37693)[0m     @     0x7f3d202ffad3 at::TensorIterator::for_each()
[2m[36m(pid=37693)[0m     @     0x7f3d202ffd91 at::TensorIterator::for_each()
[2m[36m(pid=37693)[0m     @     0x7f3d20be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37586)[0m     @     0x7f1043551390 (unknown)
[2m[36m(pid=37586)[0m     @     0x7ee1434eaf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37586)[0m     @     0x7ee142c157db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37586)[0m     @     0x7ee142c188f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37586)[0m     @     0x7ee142c18ad3 at::TensorIterator::for_each()
[2m[36m(pid=37586)[0m     @     0x7ee142c18d91 at::TensorIterator::for_each()
[2m[36m(pid=37586)[0m     @     0x7ee1434fbb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37559)[0m     @     0x7f31e83f8390 (unknown)
[2m[36m(pid=37559)[0m     @     0x7f02e8333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37559)[0m     @     0x7f02e7a5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37559)[0m     @     0x7f02e7a618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37559)[0m     @     0x7f02e7a61ad3 at::TensorIterator::for_each()
[2m[36m(pid=37566)[0m     @     0x7f7d2cc44390 (unknown)
[2m[36m(pid=37566)[0m     @     0x7f4e2cbd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37566)[0m     @     0x7f4e2c2fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37566)[0m     @     0x7f4e2c2ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37566)[0m     @     0x7f4e2c2ffad3 at::TensorIterator::for_each()
[2m[36m(pid=37566)[0m     @     0x7f4e2c2ffd91 at::TensorIterator::for_each()
[2m[36m(pid=37566)[0m     @     0x7f4e2cbe2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37566)[0m     @     0x7f4e2cc05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37561)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37561)[0m *** SIGSEGV (@0x0) received by PID 37561 (TID 0x7f0dcfbde700) from PID 0; stack trace: ***
[2m[36m(pid=37561)[0m     @     0x7f0dcf7b7390 (unknown)
[2m[36m(pid=37561)[0m     @     0x7edecf61ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37561)[0m     @     0x7edeced4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37561)[0m     @     0x7edeced4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37561)[0m     @     0x7edeced4dad3 at::TensorIterator::for_each()
[2m[36m(pid=37637)[0m     @     0x7fb4291c7390 (unknown)
[2m[36m(pid=37637)[0m     @     0x7f85290b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37637)[0m     @     0x7f85287e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37637)[0m     @     0x7f85287e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37637)[0m     @     0x7f85287e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=37637)[0m     @     0x7f85287e3d91 at::TensorIterator::for_each()
[2m[36m(pid=37588)[0m     @     0x7fbc777cef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37588)[0m     @     0x7fbc76ef97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37588)[0m     @     0x7fbc76efc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37588)[0m     @     0x7fbc76efcad3 at::TensorIterator::for_each()
[2m[36m(pid=37588)[0m     @     0x7fbc76efcd91 at::TensorIterator::for_each()
[2m[36m(pid=37588)[0m     @     0x7fbc777dfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37573)[0m *** SIGSEGV (@0x0) received by PID 37573 (TID 0x7fe5a6335700) from PID 0; stack trace: ***
[2m[36m(pid=37573)[0m     @     0x7fe5a5f0e390 (unknown)
[2m[36m(pid=37573)[0m     @     0x7fb6a5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37573)[0m     @     0x7fb6a554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37573)[0m     @     0x7fb6a55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37573)[0m     @     0x7fb6a5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=37580)[0m     @     0x7f1d38720a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37580)[0m     @     0x7f1d3871e388 at::native::copy_impl()
[2m[36m(pid=37580)[0m     @     0x7f1d387205a4 at::native::copy_()
[2m[36m(pid=37580)[0m     @     0x7f1d38e0b4f5 at::Tensor::copy_()
[2m[36m(pid=37580)[0m     @     0x7f1d3b2de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37627)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=37627)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=37627)[0m *** Aborted at 1604570838 (unix time) try "date -d @1604570838" if you are using GNU date ***
[2m[36m(pid=37627)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37627)[0m *** SIGSEGV (@0x0) received by PID 37627 (TID 0x7fb3cba54700) from PID 0; stack trace: ***
[2m[36m(pid=37627)[0m     @     0x7fb3cb62d390 (unknown)
[2m[36m(pid=37627)[0m     @     0x7f84cb5f2f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37627)[0m     @     0x7f84cad1d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37672)[0m     @     0x7f1bbd9e54f5 at::Tensor::copy_()
[2m[36m(pid=37672)[0m     @     0x7f1bbfeb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37672)[0m     @     0x7f1bbd9e54f5 at::Tensor::copy_()
[2m[36m(pid=37672)[0m     @     0x7f1bc3a9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37672)[0m     @     0x55e8c911ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37672)[0m     @     0x55e8c907ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37672)[0m     @     0x55e8c9105baf _PyEval_EvalCodeWithName
[2m[36m(pid=37672)[0m     @     0x55e8c9106a20 method_vectorcall
[2m[36m(pid=37672)[0m     @     0x55e8c907abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37672)[0m     @     0x55e8c9105baf _PyEval_EvalCodeWithName
[2m[36m(pid=37672)[0m     @     0x55e8c9106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37672)[0m     @     0x55e8c907b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37672)[0m     @     0x55e8c9105baf _PyEval_EvalCodeWithName
[2m[36m(pid=37672)[0m     @     0x55e8c9106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37672)[0m     @     0x55e8c907b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37672)[0m     @     0x55e8c9105baf _PyEval_EvalCodeWithName
[2m[36m(pid=37672)[0m     @     0x55e8c9106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37672)[0m     @     0x55e8c907b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37672)[0m     @     0x55e8c9105baf _PyEval_EvalCodeWithName
[2m[36m(pid=37672)[0m     @     0x55e8c9106643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37672)[0m     @     0x55e8c907b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x7f8f9e9405a4 at::native::copy_()
[2m[36m(pid=37634)[0m     @     0x7f8f9f02b4f5 at::Tensor::copy_()
[2m[36m(pid=37634)[0m     @     0x7f8fa14fe8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37634)[0m     @     0x7f8f9f02b4f5 at::Tensor::copy_()
[2m[36m(pid=37634)[0m     @     0x7f8fa50d679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37634)[0m     @     0x561d408affd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37634)[0m     @     0x561d4080ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x561d40895baf _PyEval_EvalCodeWithName
[2m[36m(pid=37634)[0m     @     0x561d40896a20 method_vectorcall
[2m[36m(pid=37634)[0m     @     0x561d4080abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x561d40895baf _PyEval_EvalCodeWithName
[2m[36m(pid=37634)[0m     @     0x561d40896643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37634)[0m     @     0x561d4080b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x561d40895baf _PyEval_EvalCodeWithName
[2m[36m(pid=37634)[0m     @     0x561d40896643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37634)[0m     @     0x561d4080b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x561d40895baf _PyEval_EvalCodeWithName
[2m[36m(pid=37634)[0m     @     0x561d40896643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37634)[0m     @     0x561d4080b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37634)[0m     @     0x561d40895baf _PyEval_EvalCodeWithName
[2m[36m(pid=37634)[0m     @     0x561d40896643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37634)[0m     @     0x561d4080b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x7f8946e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37616)[0m     @     0x7f8946e99388 at::native::copy_impl()
[2m[36m(pid=37616)[0m     @     0x7f8946e9b5a4 at::native::copy_()
[2m[36m(pid=37616)[0m     @     0x7f89475864f5 at::Tensor::copy_()
[2m[36m(pid=37616)[0m     @     0x7f8949a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37645)[0m     @     0x7fab35ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37645)[0m     @     0x7fab35ef5388 at::native::copy_impl()
[2m[36m(pid=37645)[0m     @     0x7fab35ef75a4 at::native::copy_()
[2m[36m(pid=37645)[0m     @     0x7fab365e24f5 at::Tensor::copy_()
[2m[36m(pid=37645)[0m     @     0x7fab38ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37629)[0m     @     0x7f9d09e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37629)[0m     @     0x7f9d092faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37629)[0m     @     0x7f9d092f8388 at::native::copy_impl()
[2m[36m(pid=37629)[0m     @     0x7f9d092fa5a4 at::native::copy_()
[2m[36m(pid=37629)[0m     @     0x7f9d099e54f5 at::Tensor::copy_()
[2m[36m(pid=37629)[0m     @     0x7f9d0beb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37628)[0m     @     0x7f6bf33ae5a4 at::native::copy_()
[2m[36m(pid=37628)[0m     @     0x7f6bf3a994f5 at::Tensor::copy_()
[2m[36m(pid=37628)[0m     @     0x7f6bf5f6c8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37628)[0m     @     0x7f6bf3a994f5 at::Tensor::copy_()
[2m[36m(pid=37628)[0m     @     0x7f6bf9b4479f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37628)[0m     @     0x55e4e3883fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37628)[0m     @     0x55e4e37deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37628)[0m     @     0x55e4e3869baf _PyEval_EvalCodeWithName
[2m[36m(pid=37628)[0m     @     0x55e4e386aa20 method_vectorcall
[2m[36m(pid=37628)[0m     @     0x55e4e37debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37628)[0m     @     0x55e4e3869baf _PyEval_EvalCodeWithName
[2m[36m(pid=37628)[0m     @     0x55e4e386a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37628)[0m     @     0x55e4e37df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37628)[0m     @     0x55e4e3869baf _PyEval_EvalCodeWithName
[2m[36m(pid=37628)[0m     @     0x55e4e386a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37628)[0m     @     0x55e4e37df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37628)[0m     @     0x55e4e3869baf _PyEval_EvalCodeWithName
[2m[36m(pid=37628)[0m     @     0x55e4e386a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37628)[0m     @     0x55e4e37df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37628)[0m     @     0x55e4e3869baf _PyEval_EvalCodeWithName
[2m[36m(pid=37628)[0m     @     0x55e4e386a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37628)[0m     @     0x55e4e37df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37622)[0m *** SIGSEGV (@0x0) received by PID 37622 (TID 0x7f4d84f3d700) from PID 0; stack trace: ***
[2m[36m(pid=37622)[0m     @     0x7f4d84b16390 (unknown)
[2m[36m(pid=37622)[0m     @     0x7f1e84825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37622)[0m     @     0x7f1e83f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37622)[0m     @     0x7f1e83f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37622)[0m     @     0x7f1e83f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=37635)[0m     @     0x7f364d9cf5a4 at::native::copy_()
[2m[36m(pid=37635)[0m     @     0x7f364e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=37635)[0m     @     0x7f365058d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37635)[0m     @     0x7f364e0ba4f5 at::Tensor::copy_()
[2m[36m(pid=37635)[0m     @     0x7f365416579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37635)[0m     @     0x564ae7338fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37635)[0m     @     0x564ae7293b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37635)[0m     @     0x564ae731ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37635)[0m     @     0x564ae731fa20 method_vectorcall
[2m[36m(pid=37635)[0m     @     0x564ae7293bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37635)[0m     @     0x564ae731ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37635)[0m     @     0x564ae731f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37635)[0m     @     0x564ae7294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37635)[0m     @     0x564ae731ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37635)[0m     @     0x564ae731f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37635)[0m     @     0x564ae7294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37635)[0m     @     0x564ae731ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37635)[0m     @     0x564ae731f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37635)[0m     @     0x564ae7294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x7f900dbe05a4 at::native::copy_()
[2m[36m(pid=37660)[0m     @     0x7f900e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=37660)[0m     @     0x7f901079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37660)[0m     @     0x7f900e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=37660)[0m     @     0x7f901437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37660)[0m     @     0x55a892065fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37660)[0m     @     0x55a891fc0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x55a89204bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37660)[0m     @     0x55a89204ca20 method_vectorcall
[2m[36m(pid=37660)[0m     @     0x55a891fc0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x55a89204bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37660)[0m     @     0x55a89204c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37660)[0m     @     0x55a891fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x55a89204bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37660)[0m     @     0x55a89204c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37660)[0m     @     0x55a891fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x55a89204bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37660)[0m     @     0x55a89204c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37660)[0m     @     0x55a891fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37660)[0m     @     0x55a89204bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37660)[0m     @     0x55a89204c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37660)[0m     @     0x55a891fc1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x7fb2dbc08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37653)[0m     @     0x7fb2dbc2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37653)[0m     @     0x7fb2db0cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37653)[0m     @     0x7fb2db0cb388 at::native::copy_impl()
[2m[36m(pid=37653)[0m     @     0x7fb2db0cd5a4 at::native::copy_()
[2m[36m(pid=37653)[0m     @     0x7fb2db7b84f5 at::Tensor::copy_()
[2m[36m(pid=37653)[0m     @     0x7fb2ddc8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37671)[0m     @     0x7f136fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37671)[0m     @     0x7f136fa37388 at::native::copy_impl()
[2m[36m(pid=37671)[0m     @     0x7f136fa395a4 at::native::copy_()
[2m[36m(pid=37671)[0m     @     0x7f13701244f5 at::Tensor::copy_()
[2m[36m(pid=37671)[0m     @     0x7f13725f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37640)[0m     @     0x7f313d2ba5a4 at::native::copy_()
[2m[36m(pid=37640)[0m     @     0x7f313d9a54f5 at::Tensor::copy_()
[2m[36m(pid=37640)[0m     @     0x7f313fe788de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37640)[0m     @     0x7f313d9a54f5 at::Tensor::copy_()
[2m[36m(pid=37640)[0m     @     0x7f3143a5079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37640)[0m     @     0x560e2e939fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37640)[0m     @     0x560e2e894b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37640)[0m     @     0x560e2e91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37640)[0m     @     0x560e2e920a20 method_vectorcall
[2m[36m(pid=37640)[0m     @     0x560e2e894bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37640)[0m     @     0x560e2e91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37640)[0m     @     0x560e2e920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37640)[0m     @     0x560e2e895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37640)[0m     @     0x560e2e91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37640)[0m     @     0x560e2e920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37640)[0m     @     0x560e2e895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x7f849b8095a4 at::native::copy_()
[2m[36m(pid=37636)[0m     @     0x7f849bef44f5 at::Tensor::copy_()
[2m[36m(pid=37636)[0m     @     0x7f849e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37553)[0m     @     0x7f296ba21ad3 at::TensorIterator::for_each()
[2m[36m(pid=37553)[0m     @     0x7f296ba21d91 at::TensorIterator::for_each()
[2m[36m(pid=37553)[0m     @     0x7f296c304b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37553)[0m     @     0x7f296c327c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37610)[0m     @     0x7fc2972b2388 at::native::copy_impl()
[2m[36m(pid=37610)[0m     @     0x7fc2972b45a4 at::native::copy_()
[2m[36m(pid=37610)[0m     @     0x7fc29799f4f5 at::Tensor::copy_()
[2m[36m(pid=37610)[0m     @     0x7fc299e728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37549)[0m     @     0x7ecee415da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37549)[0m     @     0x7ecee415b388 at::native::copy_impl()
[2m[36m(pid=37549)[0m     @     0x7ecee415d5a4 at::native::copy_()
[2m[36m(pid=37549)[0m     @     0x7ecee48484f5 at::Tensor::copy_()
[2m[36m(pid=37549)[0m     @     0x7ecee6d1b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37582)[0m     @     0x7fc00458b5a4 at::native::copy_()
[2m[36m(pid=37582)[0m     @     0x7fc004c764f5 at::Tensor::copy_()
[2m[36m(pid=37582)[0m     @     0x7fc0071498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37677)[0m     @     0x7f65ff8b7388 at::native::copy_impl()
[2m[36m(pid=37677)[0m     @     0x7f65ff8b95a4 at::native::copy_()
[2m[36m(pid=37677)[0m     @     0x7f65fffa44f5 at::Tensor::copy_()
[2m[36m(pid=37677)[0m     @     0x7f66024778de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37650)[0m     @     0x7fbbfac275a4 at::native::copy_()
[2m[36m(pid=37650)[0m     @     0x7fbbfb3124f5 at::Tensor::copy_()
[2m[36m(pid=37650)[0m     @     0x7fbbfd7e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37569)[0m     @     0x7f19328528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37569)[0m     @     0x7f1932852ad3 at::TensorIterator::for_each()
[2m[36m(pid=37570)[0m     @     0x7edca774ad91 at::TensorIterator::for_each()
[2m[36m(pid=37570)[0m     @     0x7edca802db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37570)[0m     @     0x7edca8050c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37570)[0m     @     0x7edca74f2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37678)[0m     @     0x7ef5f5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37678)[0m     @     0x7ef5f5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=37678)[0m     @     0x7ef5f650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37678)[0m     @     0x7ef5f652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37574)[0m     @     0x7f7a9c8a25a4 at::native::copy_()
[2m[36m(pid=37574)[0m     @     0x7f7a9cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=37574)[0m     @     0x7f7a9f4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37571)[0m     @     0x7ef25aef9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37571)[0m     @     0x7ef25aef7388 at::native::copy_impl()
[2m[36m(pid=37571)[0m     @     0x7ef25aef95a4 at::native::copy_()
[2m[36m(pid=37571)[0m     @     0x7ef25b5e44f5 at::Tensor::copy_()
[2m[36m(pid=37633)[0m PC: @                0x0 (unknown)
[2m[36m(pid=37633)[0m *** SIGSEGV (@0x0) received by PID 37633 (TID 0x7f5f6bbef700) from PID 0; stack trace: ***
[2m[36m(pid=37633)[0m     @     0x7f5f6b7c8390 (unknown)
[2m[36m(pid=37633)[0m     @     0x7f306b6aef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37633)[0m     @     0x7f306add97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37642)[0m     @     0x7fbfd60eb5a4 at::native::copy_()
[2m[36m(pid=37642)[0m     @     0x7fbfd67d64f5 at::Tensor::copy_()
[2m[36m(pid=37642)[0m     @     0x7fbfd8ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37556)[0m     @     0x7f5b5b38c5a4 at::native::copy_()
[2m[36m(pid=37556)[0m     @     0x7f5b5ba774f5 at::Tensor::copy_()
[2m[36m(pid=37556)[0m     @     0x7f5b5df4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37631)[0m     @     0x7f1e1858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37631)[0m     @     0x7f1e160ba4f5 at::Tensor::copy_()
[2m[36m(pid=37631)[0m     @     0x7f1e1c16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37631)[0m     @     0x564371ecffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37631)[0m     @     0x564371e2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37631)[0m     @     0x564371eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37631)[0m     @     0x564371eb6a20 method_vectorcall
[2m[36m(pid=37631)[0m     @     0x564371e2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37631)[0m     @     0x564371eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37631)[0m     @     0x564371eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37631)[0m     @     0x564371e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37631)[0m     @     0x564371eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37631)[0m     @     0x564371eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37631)[0m     @     0x564371e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37631)[0m     @     0x564371eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37631)[0m     @     0x564371eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37631)[0m     @     0x564371e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37631)[0m     @     0x564371eb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37631)[0m     @     0x564371eb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37631)[0m     @     0x564371e2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x7fcc8f7665a4 at::native::copy_()
[2m[36m(pid=37575)[0m     @     0x7fcc8fe514f5 at::Tensor::copy_()
[2m[36m(pid=37575)[0m     @     0x7fcc923248de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37675)[0m     @     0x7f6309f0c4f5 at::Tensor::copy_()
[2m[36m(pid=37675)[0m     @     0x7f630c3df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37675)[0m     @     0x7f6309f0c4f5 at::Tensor::copy_()
[2m[36m(pid=37675)[0m     @     0x7f630ffb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37675)[0m     @     0x558e1f4c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37675)[0m     @     0x558e1f41bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f4a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37675)[0m     @     0x558e1f4a7a20 method_vectorcall
[2m[36m(pid=37675)[0m     @     0x558e1f41bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f4a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37675)[0m     @     0x558e1f4a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37564)[0m     @     0x7f4e84ce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37564)[0m     @     0x7f4e828124f5 at::Tensor::copy_()
[2m[36m(pid=37564)[0m     @     0x7f4e888bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37564)[0m     @     0x559531f54fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37564)[0m     @     0x559531eafb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37564)[0m     @     0x559531f3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37564)[0m     @     0x559531f3ba20 method_vectorcall
[2m[36m(pid=37564)[0m     @     0x559531eafbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37564)[0m     @     0x559531f3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37564)[0m     @     0x559531f3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37564)[0m     @     0x559531eb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37564)[0m     @     0x559531f3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37564)[0m     @     0x559531f3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37564)[0m     @     0x559531eb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37564)[0m     @     0x559531f3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37564)[0m     @     0x559531f3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37564)[0m     @     0x559531eb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37564)[0m     @     0x559531f3abaf _PyEval_EvalCodeWithName
[2m[36m(pid=37564)[0m     @     0x559531f3b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37564)[0m     @     0x559531eb0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x7f378fd8dad3 at::TensorIterator::for_each()
[2m[36m(pid=37567)[0m     @     0x7f378fd8dd91 at::TensorIterator::for_each()
[2m[36m(pid=37567)[0m     @     0x7f3790670b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37567)[0m     @     0x7f3790693c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37550)[0m     @     0x7f446fe0d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37550)[0m     @     0x7f446fe0dad3 at::TensorIterator::for_each()
[2m[36m(pid=37550)[0m     @     0x7f446fe0dd91 at::TensorIterator::for_each()
[2m[36m(pid=37638)[0m     @     0x7fbb76d475a4 at::native::copy_()
[2m[36m(pid=37638)[0m     @     0x7fbb774324f5 at::Tensor::copy_()
[2m[36m(pid=37638)[0m     @     0x7fbb799058de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37641)[0m     @     0x7ed8500a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37641)[0m     @     0x7ed8500a5388 at::native::copy_impl()
[2m[36m(pid=37641)[0m     @     0x7ed8500a75a4 at::native::copy_()
[2m[36m(pid=37641)[0m     @     0x7ed8507924f5 at::Tensor::copy_()
[2m[36m(pid=37626)[0m     @     0x7f897834dad3 at::TensorIterator::for_each()
[2m[36m(pid=37626)[0m     @     0x7f897834dd91 at::TensorIterator::for_each()
[2m[36m(pid=37626)[0m     @     0x7f8978c30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37626)[0m     @     0x7f8978c53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37552)[0m     @     0x7f6ee806ead3 at::TensorIterator::for_each()
[2m[36m(pid=37552)[0m     @     0x7f6ee806ed91 at::TensorIterator::for_each()
[2m[36m(pid=37552)[0m     @     0x7f6ee8951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37557)[0m     @     0x7f8594ccf5a4 at::native::copy_()
[2m[36m(pid=37557)[0m     @     0x7f85953ba4f5 at::Tensor::copy_()
[2m[36m(pid=37557)[0m     @     0x7f859788d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37647)[0m     @     0x7fad074278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37647)[0m     @     0x7fad07427ad3 at::TensorIterator::for_each()
[2m[36m(pid=37674)[0m     @     0x7f93625c1d91 at::TensorIterator::for_each()
[2m[36m(pid=37674)[0m     @     0x7f9362ea4b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37674)[0m     @     0x7f9362ec7c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37674)[0m     @     0x7f9362369a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37560)[0m     @     0x7f28a4ee05a4 at::native::copy_()
[2m[36m(pid=37560)[0m     @     0x7f28a55cb4f5 at::Tensor::copy_()
[2m[36m(pid=37551)[0m     @     0x7f6ce609e390 (unknown)
[2m[36m(pid=37551)[0m     @     0x7f3de604af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37551)[0m     @     0x7f3de57757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37551)[0m     @     0x7f3de57788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37554)[0m     @     0x7f5602852ad3 at::TensorIterator::for_each()
[2m[36m(pid=37554)[0m     @     0x7f5602852d91 at::TensorIterator::for_each()
[2m[36m(pid=37554)[0m     @     0x7f5603135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37676)[0m     @     0x7f42f12b54f5 at::Tensor::copy_()
[2m[36m(pid=37676)[0m     @     0x7f42f37888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37676)[0m     @     0x7f42f12b54f5 at::Tensor::copy_()
[2m[36m(pid=37676)[0m     @     0x7f42f736079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37676)[0m     @     0x55c1a088cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37676)[0m     @     0x55c1a07e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37676)[0m     @     0x55c1a0872baf _PyEval_EvalCodeWithName
[2m[36m(pid=37676)[0m     @     0x55c1a0873a20 method_vectorcall
[2m[36m(pid=37676)[0m     @     0x55c1a07e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37676)[0m     @     0x55c1a0872baf _PyEval_EvalCodeWithName
[2m[36m(pid=37676)[0m     @     0x55c1a0873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37676)[0m     @     0x55c1a07e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37676)[0m     @     0x55c1a0872baf _PyEval_EvalCodeWithName
[2m[36m(pid=37676)[0m     @     0x55c1a0873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37676)[0m     @     0x55c1a07e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37676)[0m     @     0x55c1a0872baf _PyEval_EvalCodeWithName
[2m[36m(pid=37676)[0m     @     0x55c1a0873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37676)[0m     @     0x55c1a07e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x7f3d415235a4 at::native::copy_()
[2m[36m(pid=37568)[0m     @     0x7f3d41c0e4f5 at::Tensor::copy_()
[2m[36m(pid=37568)[0m     @     0x7f3d440e18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37562)[0m     @     0x7f32d88e55a4 at::native::copy_()
[2m[36m(pid=37562)[0m     @     0x7f32d8fd04f5 at::Tensor::copy_()
[2m[36m(pid=37623)[0m     @     0x7ef44c9934f5 at::Tensor::copy_()
[2m[36m(pid=37623)[0m     @     0x7ef452a3e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37623)[0m     @     0x55d870da8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37623)[0m     @     0x55d870d03b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37623)[0m     @     0x55d870d8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37623)[0m     @     0x55d870d8fa20 method_vectorcall
[2m[36m(pid=37623)[0m     @     0x55d870d03bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37623)[0m     @     0x55d870d8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37623)[0m     @     0x55d870d8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37623)[0m     @     0x55d870d04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37623)[0m     @     0x55d870d8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37623)[0m     @     0x55d870d8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37623)[0m     @     0x55d870d04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37623)[0m     @     0x55d870d8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37623)[0m     @     0x55d870d8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37623)[0m     @     0x55d870d04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37623)[0m     @     0x55d870d8ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37623)[0m     @     0x55d870d8f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37623)[0m     @     0x55d870d04689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x7eeca738c5a4 at::native::copy_()
[2m[36m(pid=37583)[0m     @     0x7eeca7a774f5 at::Tensor::copy_()
[2m[36m(pid=37652)[0m     @     0x7ed28a7d64f5 at::Tensor::copy_()
[2m[36m(pid=37652)[0m     @     0x7ed28cca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37652)[0m     @     0x7ed28a7d64f5 at::Tensor::copy_()
[2m[36m(pid=37684)[0m     @     0x7f6bbc3e64f5 at::Tensor::copy_()
[2m[36m(pid=37684)[0m     @     0x7f6bbe8b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37684)[0m     @     0x7f6bbc3e64f5 at::Tensor::copy_()
[2m[36m(pid=37684)[0m     @     0x7f6bc249179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37684)[0m     @     0x55dea8a4efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37684)[0m     @     0x55dea89a9b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37684)[0m     @     0x55dea8a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=37684)[0m     @     0x55dea8a35a20 method_vectorcall
[2m[36m(pid=37684)[0m     @     0x55dea89a9bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37684)[0m     @     0x55dea8a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=37684)[0m     @     0x55dea8a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37684)[0m     @     0x55dea89aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37684)[0m     @     0x55dea8a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=37684)[0m     @     0x55dea8a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37684)[0m     @     0x55dea89aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37684)[0m     @     0x55dea8a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=37684)[0m     @     0x55dea8a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37684)[0m     @     0x55dea89aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37684)[0m     @     0x55dea8a34baf _PyEval_EvalCodeWithName
[2m[36m(pid=37684)[0m     @     0x55dea8a35643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37684)[0m     @     0x55dea89aa689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x7f0c49868ad3 at::TensorIterator::for_each()
[2m[36m(pid=37632)[0m     @     0x7f0c49868d91 at::TensorIterator::for_each()
[2m[36m(pid=37632)[0m     @     0x7f0c4a14bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37632)[0m     @     0x7f0c4a16ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37632)[0m     @     0x7f0c49610a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37639)[0m     @     0x7fd987d54390 (unknown)
[2m[36m(pid=37639)[0m     @     0x7faa87ce0f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37639)[0m     @     0x7faa8740b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37639)[0m     @     0x7faa8740e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37639)[0m     @     0x7faa8740ead3 at::TensorIterator::for_each()
[2m[36m(pid=37630)[0m     @     0x7fc2f70f38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37630)[0m     @     0x7fc2f70f3ad3 at::TensorIterator::for_each()
[2m[36m(pid=37630)[0m     @     0x7fc2f70f3d91 at::TensorIterator::for_each()
[2m[36m(pid=37630)[0m     @     0x7fc2f79d6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37630)[0m     @     0x7fc2f79f9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37621)[0m     @     0x7f0ee6710390 (unknown)
[2m[36m(pid=37621)[0m     @     0x7edfe64f9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=37621)[0m     @     0x7edfe5c247db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=37565)[0m     @     0x7f6d032f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=37565)[0m     @     0x7f6d032f5d91 at::TensorIterator::for_each()
[2m[36m(pid=37565)[0m     @     0x7f6d03bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37565)[0m     @     0x7f6d03bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37565)[0m     @     0x7f6d0309da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37565)[0m     @     0x7f6d0309b388 at::native::copy_impl()
[2m[36m(pid=37624)[0m     @     0x7ee52ad4dad3 at::TensorIterator::for_each()
[2m[36m(pid=37624)[0m     @     0x7ee52ad4dd91 at::TensorIterator::for_each()
[2m[36m(pid=37624)[0m     @     0x7ee52b630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37624)[0m     @     0x7ee52b653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37624)[0m     @     0x7ee52aaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37555)[0m     @     0x7fa0b41fbad3 at::TensorIterator::for_each()
[2m[36m(pid=37555)[0m     @     0x7fa0b41fbd91 at::TensorIterator::for_each()
[2m[36m(pid=37555)[0m     @     0x7fa0b4adeb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37555)[0m     @     0x7fa0b4b01c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37613)[0m     @     0x7fca9be6cad3 at::TensorIterator::for_each()
[2m[36m(pid=37613)[0m     @     0x7fca9be6cd91 at::TensorIterator::for_each()
[2m[36m(pid=37613)[0m     @     0x7fca9c74fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37613)[0m     @     0x7fca9c772c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37618)[0m     @     0x7f2531b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=37618)[0m     @     0x7f2531b95d91 at::TensorIterator::for_each()
[2m[36m(pid=37618)[0m     @     0x7f2532478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37618)[0m     @     0x7f253249bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37619)[0m     @     0x7f5bacf27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37619)[0m     @     0x7f5bacf27d91 at::TensorIterator::for_each()
[2m[36m(pid=37619)[0m     @     0x7f5bad80ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37619)[0m     @     0x7f5bad82dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37617)[0m     @     0x7f592bc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=37617)[0m     @     0x7f592bc91d91 at::TensorIterator::for_each()
[2m[36m(pid=37620)[0m     @     0x7f8539b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37620)[0m     @     0x7f8539b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=37667)[0m     @     0x7f92be14f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37667)[0m     @     0x7f92be14fad3 at::TensorIterator::for_each()
[2m[36m(pid=37667)[0m     @     0x7f92be14fd91 at::TensorIterator::for_each()
[2m[36m(pid=37662)[0m     @     0x7f657ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=37662)[0m     @     0x7f657c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37662)[0m     @     0x7f657c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37665)[0m     @     0x7f9c102ffd91 at::TensorIterator::for_each()
[2m[36m(pid=37665)[0m     @     0x7f9c10be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37665)[0m     @     0x7f9c10c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37665)[0m     @     0x7f9c100a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37572)[0m     @     0x7f645f88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37572)[0m     @     0x7f645d3ba4f5 at::Tensor::copy_()
[2m[36m(pid=37611)[0m     @     0x7fbc57539ad3 at::TensorIterator::for_each()
[2m[36m(pid=37611)[0m     @     0x7fbc57539d91 at::TensorIterator::for_each()
[2m[36m(pid=37625)[0m     @     0x7f394ff53ad3 at::TensorIterator::for_each()
[2m[36m(pid=37625)[0m     @     0x7f394ff53d91 at::TensorIterator::for_each()
[2m[36m(pid=37625)[0m     @     0x7f3950836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37625)[0m     @     0x7f3950859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37625)[0m     @     0x7f394fcfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37680)[0m     @     0x7ed570f27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37680)[0m     @     0x7ed570f27d91 at::TensorIterator::for_each()
[2m[36m(pid=37680)[0m     @     0x7ed57180ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37680)[0m     @     0x7ed57182dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37693)[0m     @     0x7f3d20c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37693)[0m     @     0x7f3d200a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37693)[0m     @     0x7f3d200a5388 at::native::copy_impl()
[2m[36m(pid=37586)[0m     @     0x7ee14351ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37586)[0m     @     0x7ee1429c0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37586)[0m     @     0x7ee1429be388 at::native::copy_impl()
[2m[36m(pid=37559)[0m     @     0x7f02e7a61d91 at::TensorIterator::for_each()
[2m[36m(pid=37559)[0m     @     0x7f02e8344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37559)[0m     @     0x7f02e8367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37559)[0m     @     0x7f02e7809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37559)[0m     @     0x7f02e7807388 at::native::copy_impl()
[2m[36m(pid=37566)[0m     @     0x7f4e2c0a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37566)[0m     @     0x7f4e2c0a5388 at::native::copy_impl()
[2m[36m(pid=37566)[0m     @     0x7f4e2c0a75a4 at::native::copy_()
[2m[36m(pid=37561)[0m     @     0x7edeced4dd91 at::TensorIterator::for_each()
[2m[36m(pid=37561)[0m     @     0x7edecf630b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37561)[0m     @     0x7edecf653c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37561)[0m     @     0x7edeceaf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37637)[0m     @     0x7f85290c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37637)[0m     @     0x7f85290e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37637)[0m     @     0x7f852858ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37637)[0m     @     0x7f8528589388 at::native::copy_impl()
[2m[36m(pid=37588)[0m     @     0x7fbc77802c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37588)[0m     @     0x7fbc76ca4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37588)[0m     @     0x7fbc76ca2388 at::native::copy_impl()
[2m[36m(pid=37588)[0m     @     0x7fbc76ca45a4 at::native::copy_()
[2m[36m(pid=37588)[0m     @     0x7fbc7738f4f5 at::Tensor::copy_()
[2m[36m(pid=37573)[0m     @     0x7fb6a5552d91 at::TensorIterator::for_each()
[2m[36m(pid=37573)[0m     @     0x7fb6a5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37573)[0m     @     0x7fb6a5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37573)[0m     @     0x7fb6a52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37573)[0m     @     0x7fb6a52f8388 at::native::copy_impl()
[2m[36m(pid=37573)[0m     @     0x7fb6a52fa5a4 at::native::copy_()
[2m[36m(pid=37580)[0m     @     0x7f1d38e0b4f5 at::Tensor::copy_()
[2m[36m(pid=37580)[0m     @     0x7f1d3eeb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37580)[0m     @     0x55fee6a52fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37580)[0m     @     0x55fee69adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37580)[0m     @     0x55fee6a38baf _PyEval_EvalCodeWithName
[2m[36m(pid=37580)[0m     @     0x55fee6a39a20 method_vectorcall
[2m[36m(pid=37580)[0m     @     0x55fee69adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37580)[0m     @     0x55fee6a38baf _PyEval_EvalCodeWithName
[2m[36m(pid=37580)[0m     @     0x55fee6a39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37580)[0m     @     0x55fee69ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37580)[0m     @     0x55fee6a38baf _PyEval_EvalCodeWithName
[2m[36m(pid=37580)[0m     @     0x55fee6a39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37580)[0m     @     0x55fee69ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37580)[0m     @     0x55fee6a38baf _PyEval_EvalCodeWithName
[2m[36m(pid=37580)[0m     @     0x55fee6a39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37580)[0m     @     0x55fee69ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37580)[0m     @     0x55fee6a38baf _PyEval_EvalCodeWithName
[2m[36m(pid=37580)[0m     @     0x55fee6a39643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37580)[0m     @     0x55fee69ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x7f84cad208f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37627)[0m     @     0x7f84cad20ad3 at::TensorIterator::for_each()
[2m[36m(pid=37616)[0m     @     0x7f89475864f5 at::Tensor::copy_()
[2m[36m(pid=37616)[0m     @     0x7f894d63179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37616)[0m     @     0x55f98aee0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37616)[0m     @     0x55f98ae3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x55f98aec6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37616)[0m     @     0x55f98aec7a20 method_vectorcall
[2m[36m(pid=37616)[0m     @     0x55f98ae3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x55f98aec6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37616)[0m     @     0x55f98aec7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37616)[0m     @     0x55f98ae3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x55f98aec6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37616)[0m     @     0x55f98aec7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37616)[0m     @     0x55f98ae3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x55f98aec6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37616)[0m     @     0x55f98aec7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37616)[0m     @     0x55f98ae3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37616)[0m     @     0x55f98aec6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37616)[0m     @     0x55f98aec7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37616)[0m     @     0x55f98ae3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x7fab365e24f5 at::Tensor::copy_()
[2m[36m(pid=37645)[0m     @     0x7fab3c68d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37645)[0m     @     0x5557ce0ccfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37645)[0m     @     0x5557ce027b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x5557ce0b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=37645)[0m     @     0x5557ce0b3a20 method_vectorcall
[2m[36m(pid=37645)[0m     @     0x5557ce027bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x5557ce0b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=37645)[0m     @     0x5557ce0b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37645)[0m     @     0x5557ce028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x5557ce0b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=37645)[0m     @     0x5557ce0b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37645)[0m     @     0x5557ce028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x5557ce0b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=37645)[0m     @     0x5557ce0b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37645)[0m     @     0x5557ce028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37645)[0m     @     0x5557ce0b2baf _PyEval_EvalCodeWithName
[2m[36m(pid=37645)[0m     @     0x5557ce0b3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37645)[0m     @     0x5557ce028689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x7f9d099e54f5 at::Tensor::copy_()
[2m[36m(pid=37629)[0m     @     0x7f9d0fa9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37629)[0m     @     0x5586cc800fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37629)[0m     @     0x5586cc75bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x5586cc7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37629)[0m     @     0x5586cc7e7a20 method_vectorcall
[2m[36m(pid=37629)[0m     @     0x5586cc75bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x5586cc7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37629)[0m     @     0x5586cc7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37629)[0m     @     0x5586cc75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x5586cc7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37629)[0m     @     0x5586cc7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37629)[0m     @     0x5586cc75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x5586cc7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37629)[0m     @     0x5586cc7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37629)[0m     @     0x5586cc75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37629)[0m     @     0x5586cc7e6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37629)[0m     @     0x5586cc7e7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37629)[0m     @     0x5586cc75c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x7f1e83f53d91 at::TensorIterator::for_each()
[2m[36m(pid=37622)[0m     @     0x7f1e84836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37622)[0m     @     0x7f1e84859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37622)[0m     @     0x7f1e83cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37622)[0m     @     0x7f1e83cf9388 at::native::copy_impl()
[2m[36m(pid=37635)[0m     @     0x564ae731ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37635)[0m     @     0x564ae731f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37635)[0m     @     0x564ae7294689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x7fb2db7b84f5 at::Tensor::copy_()
[2m[36m(pid=37653)[0m     @     0x7fb2e186379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37653)[0m     @     0x55db95f76fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37653)[0m     @     0x55db95ed1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x55db95f5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37653)[0m     @     0x55db95f5da20 method_vectorcall
[2m[36m(pid=37653)[0m     @     0x55db95ed1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x55db95f5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37653)[0m     @     0x55db95f5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37653)[0m     @     0x55db95ed2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x55db95f5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37653)[0m     @     0x55db95f5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37653)[0m     @     0x55db95ed2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x55db95f5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37653)[0m     @     0x55db95f5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37653)[0m     @     0x55db95ed2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37653)[0m     @     0x55db95f5cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37653)[0m     @     0x55db95f5d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37653)[0m     @     0x55db95ed2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x7f13701244f5 at::Tensor::copy_()
[2m[36m(pid=37671)[0m     @     0x7f13761cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37671)[0m     @     0x55914bbf7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37671)[0m     @     0x55914bb52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x55914bbddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37671)[0m     @     0x55914bbdea20 method_vectorcall
[2m[36m(pid=37671)[0m     @     0x55914bb52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x55914bbddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37671)[0m     @     0x55914bbde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37671)[0m     @     0x55914bb53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x55914bbddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37671)[0m     @     0x55914bbde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37671)[0m     @     0x55914bb53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x55914bbddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37671)[0m     @     0x55914bbde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37671)[0m     @     0x55914bb53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37671)[0m     @     0x55914bbddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37671)[0m     @     0x55914bbde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37671)[0m     @     0x55914bb53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37640)[0m     @     0x560e2e91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37640)[0m     @     0x560e2e920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37640)[0m     @     0x560e2e895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37640)[0m     @     0x560e2e91fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37640)[0m     @     0x560e2e920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37640)[0m     @     0x560e2e895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x7f849bef44f5 at::Tensor::copy_()
[2m[36m(pid=37636)[0m     @     0x7f84a1f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37636)[0m     @     0x555cec418fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37636)[0m     @     0x555cec373b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x555cec3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=37636)[0m     @     0x555cec3ffa20 method_vectorcall
[2m[36m(pid=37636)[0m     @     0x555cec373bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x555cec3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=37636)[0m     @     0x555cec3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37636)[0m     @     0x555cec374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x555cec3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=37636)[0m     @     0x555cec3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37636)[0m     @     0x555cec374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x555cec3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=37636)[0m     @     0x555cec3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37636)[0m     @     0x555cec374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37636)[0m     @     0x555cec3febaf _PyEval_EvalCodeWithName
[2m[36m(pid=37636)[0m     @     0x555cec3ff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37636)[0m     @     0x555cec374689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x7f296b7c9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37553)[0m     @     0x7f296b7c7388 at::native::copy_impl()
[2m[36m(pid=37553)[0m     @     0x7f296b7c95a4 at::native::copy_()
[2m[36m(pid=37553)[0m     @     0x7f296beb44f5 at::Tensor::copy_()
[2m[36m(pid=37610)[0m     @     0x7fc29799f4f5 at::Tensor::copy_()
[2m[36m(pid=37610)[0m     @     0x7fc29da4a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37610)[0m     @     0x55bddfc5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37610)[0m     @     0x55bddfbb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37610)[0m     @     0x55bddfc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=37610)[0m     @     0x55bddfc44a20 method_vectorcall
[2m[36m(pid=37610)[0m     @     0x55bddfbb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37610)[0m     @     0x55bddfc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=37610)[0m     @     0x55bddfc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37610)[0m     @     0x55bddfbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37610)[0m     @     0x55bddfc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=37610)[0m     @     0x55bddfc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37610)[0m     @     0x55bddfbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37610)[0m     @     0x55bddfc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=37610)[0m     @     0x55bddfc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37610)[0m     @     0x55bddfbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37610)[0m     @     0x55bddfc43baf _PyEval_EvalCodeWithName
[2m[36m(pid=37610)[0m     @     0x55bddfc44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37610)[0m     @     0x55bddfbb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x7ecee48484f5 at::Tensor::copy_()
[2m[36m(pid=37549)[0m     @     0x7eceea8f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37549)[0m     @     0x55f41d8adfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37549)[0m     @     0x55f41d808b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x55f41d893baf _PyEval_EvalCodeWithName
[2m[36m(pid=37549)[0m     @     0x55f41d894a20 method_vectorcall
[2m[36m(pid=37549)[0m     @     0x55f41d808bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x55f41d893baf _PyEval_EvalCodeWithName
[2m[36m(pid=37549)[0m     @     0x55f41d894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37549)[0m     @     0x55f41d809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x55f41d893baf _PyEval_EvalCodeWithName
[2m[36m(pid=37549)[0m     @     0x55f41d894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37549)[0m     @     0x55f41d809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x55f41d893baf _PyEval_EvalCodeWithName
[2m[36m(pid=37549)[0m     @     0x55f41d894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37549)[0m     @     0x55f41d809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37549)[0m     @     0x55f41d893baf _PyEval_EvalCodeWithName
[2m[36m(pid=37549)[0m     @     0x55f41d894643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37549)[0m     @     0x55f41d809689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x7fc004c764f5 at::Tensor::copy_()
[2m[36m(pid=37582)[0m     @     0x7fc00ad2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37582)[0m     @     0x55ae5087ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37582)[0m     @     0x55ae507dab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x55ae50865baf _PyEval_EvalCodeWithName
[2m[36m(pid=37582)[0m     @     0x55ae50866a20 method_vectorcall
[2m[36m(pid=37582)[0m     @     0x55ae507dabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x55ae50865baf _PyEval_EvalCodeWithName
[2m[36m(pid=37582)[0m     @     0x55ae50866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37582)[0m     @     0x55ae507db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x55ae50865baf _PyEval_EvalCodeWithName
[2m[36m(pid=37582)[0m     @     0x55ae50866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37582)[0m     @     0x55ae507db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x55ae50865baf _PyEval_EvalCodeWithName
[2m[36m(pid=37582)[0m     @     0x55ae50866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37582)[0m     @     0x55ae507db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37582)[0m     @     0x55ae50865baf _PyEval_EvalCodeWithName
[2m[36m(pid=37582)[0m     @     0x55ae50866643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37582)[0m     @     0x55ae507db689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x7f65fffa44f5 at::Tensor::copy_()
[2m[36m(pid=37677)[0m     @     0x7f660604f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37677)[0m     @     0x55bd0cb8cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37677)[0m     @     0x55bd0cae7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x55bd0cb72baf _PyEval_EvalCodeWithName
[2m[36m(pid=37677)[0m     @     0x55bd0cb73a20 method_vectorcall
[2m[36m(pid=37677)[0m     @     0x55bd0cae7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x55bd0cb72baf _PyEval_EvalCodeWithName
[2m[36m(pid=37677)[0m     @     0x55bd0cb73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37677)[0m     @     0x55bd0cae8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x55bd0cb72baf _PyEval_EvalCodeWithName
[2m[36m(pid=37677)[0m     @     0x55bd0cb73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37677)[0m     @     0x55bd0cae8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x55bd0cb72baf _PyEval_EvalCodeWithName
[2m[36m(pid=37677)[0m     @     0x55bd0cb73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37677)[0m     @     0x55bd0cae8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37677)[0m     @     0x55bd0cb72baf _PyEval_EvalCodeWithName
[2m[36m(pid=37677)[0m     @     0x55bd0cb73643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37677)[0m     @     0x55bd0cae8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x7fbbfb3124f5 at::Tensor::copy_()
[2m[36m(pid=37650)[0m     @     0x7fbc013bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37650)[0m     @     0x55cfb557dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37650)[0m     @     0x55cfb54d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x55cfb5563baf _PyEval_EvalCodeWithName
[2m[36m(pid=37650)[0m     @     0x55cfb5564a20 method_vectorcall
[2m[36m(pid=37650)[0m     @     0x55cfb54d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x55cfb5563baf _PyEval_EvalCodeWithName
[2m[36m(pid=37650)[0m     @     0x55cfb5564643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37650)[0m     @     0x55cfb54d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x55cfb5563baf _PyEval_EvalCodeWithName
[2m[36m(pid=37650)[0m     @     0x55cfb5564643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37650)[0m     @     0x55cfb54d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x55cfb5563baf _PyEval_EvalCodeWithName
[2m[36m(pid=37650)[0m     @     0x55cfb5564643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37650)[0m     @     0x55cfb54d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37650)[0m     @     0x55cfb5563baf _PyEval_EvalCodeWithName
[2m[36m(pid=37650)[0m     @     0x55cfb5564643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37650)[0m     @     0x55cfb54d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x7f1932852d91 at::TensorIterator::for_each()
[2m[36m(pid=37569)[0m     @     0x7f1933135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37569)[0m     @     0x7f1933158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37569)[0m     @     0x7f19325faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37569)[0m     @     0x7f19325f8388 at::native::copy_impl()
[2m[36m(pid=37569)[0m     @     0x7f19325fa5a4 at::native::copy_()
[2m[36m(pid=37570)[0m     @     0x7edca74f0388 at::native::copy_impl()
[2m[36m(pid=37570)[0m     @     0x7edca74f25a4 at::native::copy_()
[2m[36m(pid=37570)[0m     @     0x7edca7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=37570)[0m     @     0x7edcaa0b08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37570)[0m     @     0x7edca7bdd4f5 at::Tensor::copy_()
[2m[36m(pid=37678)[0m     @     0x7ef5f59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37678)[0m     @     0x7ef5f59cd388 at::native::copy_impl()
[2m[36m(pid=37678)[0m     @     0x7ef5f59cf5a4 at::native::copy_()
[2m[36m(pid=37678)[0m     @     0x7ef5f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=37678)[0m     @     0x7ef5f858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37574)[0m     @     0x7f7a9cf8d4f5 at::Tensor::copy_()
[2m[36m(pid=37574)[0m     @     0x7f7aa303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37574)[0m     @     0x562f0fda6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37574)[0m     @     0x562f0fd01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37574)[0m     @     0x562f0fd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37574)[0m     @     0x562f0fd8da20 method_vectorcall
[2m[36m(pid=37574)[0m     @     0x562f0fd01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37574)[0m     @     0x562f0fd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37574)[0m     @     0x562f0fd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37574)[0m     @     0x562f0fd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37574)[0m     @     0x562f0fd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37574)[0m     @     0x562f0fd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37574)[0m     @     0x562f0fd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37574)[0m     @     0x562f0fd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37574)[0m     @     0x562f0fd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37574)[0m     @     0x562f0fd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37574)[0m     @     0x562f0fd8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37574)[0m     @     0x562f0fd8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37574)[0m     @     0x562f0fd02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x7ef25dab78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37571)[0m     @     0x7ef25b5e44f5 at::Tensor::copy_()
[2m[36m(pid=37571)[0m     @     0x7ef26168f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37571)[0m     @     0x5637036a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37571)[0m     @     0x563703602b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x56370368dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37571)[0m     @     0x56370368ea20 method_vectorcall
[2m[36m(pid=37571)[0m     @     0x563703602bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x56370368dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37571)[0m     @     0x56370368e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37571)[0m     @     0x563703603689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x56370368dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37571)[0m     @     0x56370368e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37571)[0m     @     0x563703603689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x56370368dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37571)[0m     @     0x56370368e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37571)[0m     @     0x563703603689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37571)[0m     @     0x56370368dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37571)[0m     @     0x56370368e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37571)[0m     @     0x563703603689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x7f306addc8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37633)[0m     @     0x7f306addcad3 at::TensorIterator::for_each()
[2m[36m(pid=37633)[0m     @     0x7f306addcd91 at::TensorIterator::for_each()
[2m[36m(pid=37633)[0m     @     0x7f306b6bfb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37633)[0m     @     0x7f306b6e2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37642)[0m     @     0x7fbfd67d64f5 at::Tensor::copy_()
[2m[36m(pid=37642)[0m     @     0x7fbfdc47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37642)[0m     @     0x55b4a4526fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37642)[0m     @     0x55b4a4481b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37642)[0m     @     0x55b4a450cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37642)[0m     @     0x55b4a450da20 method_vectorcall
[2m[36m(pid=37642)[0m     @     0x55b4a4481bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37642)[0m     @     0x55b4a450cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37642)[0m     @     0x55b4a450d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37642)[0m     @     0x55b4a4482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37642)[0m     @     0x55b4a450cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37642)[0m     @     0x55b4a450d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37642)[0m     @     0x55b4a4482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37642)[0m     @     0x55b4a450cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37642)[0m     @     0x55b4a450d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37642)[0m     @     0x55b4a4482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37642)[0m     @     0x55b4a450cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37642)[0m     @     0x55b4a450d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37642)[0m     @     0x55b4a4482689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x7f5b5ba774f5 at::Tensor::copy_()
[2m[36m(pid=37556)[0m     @     0x7f5b61b2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37556)[0m     @     0x5570e2c14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37556)[0m     @     0x5570e2b6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x5570e2bfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37556)[0m     @     0x5570e2bfba20 method_vectorcall
[2m[36m(pid=37556)[0m     @     0x5570e2b6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x5570e2bfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37556)[0m     @     0x5570e2bfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37556)[0m     @     0x5570e2b70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x5570e2bfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37556)[0m     @     0x5570e2bfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37556)[0m     @     0x5570e2b70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x5570e2bfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37556)[0m     @     0x5570e2bfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37556)[0m     @     0x5570e2b70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37556)[0m     @     0x5570e2bfabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37556)[0m     @     0x5570e2bfb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37556)[0m     @     0x5570e2b70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x7fcc8fe514f5 at::Tensor::copy_()
[2m[36m(pid=37575)[0m     @     0x7fcc95efc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37575)[0m     @     0x5642132fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37575)[0m     @     0x564213256b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x5642132e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37575)[0m     @     0x5642132e2a20 method_vectorcall
[2m[36m(pid=37575)[0m     @     0x564213256bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x5642132e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37575)[0m     @     0x5642132e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37575)[0m     @     0x564213257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x5642132e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37575)[0m     @     0x5642132e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37575)[0m     @     0x564213257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x5642132e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37575)[0m     @     0x5642132e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37575)[0m     @     0x564213257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37575)[0m     @     0x5642132e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37575)[0m     @     0x5642132e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37575)[0m     @     0x564213257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f41c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f4a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37675)[0m     @     0x558e1f4a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37675)[0m     @     0x558e1f41c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f4a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37675)[0m     @     0x558e1f4a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37675)[0m     @     0x558e1f41c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37675)[0m     @     0x558e1f4a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37675)[0m     @     0x558e1f4a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37675)[0m     @     0x558e1f41c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x7f378fb35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37567)[0m     @     0x7f378fb33388 at::native::copy_impl()
[2m[36m(pid=37567)[0m     @     0x7f378fb355a4 at::native::copy_()
[2m[36m(pid=37567)[0m     @     0x7f37902204f5 at::Tensor::copy_()
[2m[36m(pid=37567)[0m     @     0x7f37926f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37550)[0m     @     0x7f44706f0b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37550)[0m     @     0x7f4470713c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37550)[0m     @     0x7f446fbb5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37550)[0m     @     0x7f446fbb3388 at::native::copy_impl()
[2m[36m(pid=37550)[0m     @     0x7f446fbb55a4 at::native::copy_()
[2m[36m(pid=37550)[0m     @     0x7f44702a04f5 at::Tensor::copy_()
[2m[36m(pid=37638)[0m     @     0x7fbb774324f5 at::Tensor::copy_()
[2m[36m(pid=37638)[0m     @     0x7fbb7d4dd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37638)[0m     @     0x5583b4c75fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37638)[0m     @     0x5583b4bd0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37638)[0m     @     0x5583b4c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37638)[0m     @     0x5583b4c5ca20 method_vectorcall
[2m[36m(pid=37638)[0m     @     0x5583b4bd0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37638)[0m     @     0x5583b4c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37638)[0m     @     0x5583b4c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37638)[0m     @     0x5583b4bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37638)[0m     @     0x5583b4c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37638)[0m     @     0x5583b4c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37638)[0m     @     0x5583b4bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37638)[0m     @     0x5583b4c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37638)[0m     @     0x5583b4c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37638)[0m     @     0x5583b4bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37638)[0m     @     0x5583b4c5bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37638)[0m     @     0x5583b4c5c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37638)[0m     @     0x5583b4bd1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x7ed852c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37641)[0m     @     0x7ed8507924f5 at::Tensor::copy_()
[2m[36m(pid=37641)[0m     @     0x7ed85683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37641)[0m     @     0x56182bfb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37641)[0m     @     0x56182bf14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x56182bf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37641)[0m     @     0x56182bfa0a20 method_vectorcall
[2m[36m(pid=37641)[0m     @     0x56182bf14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x56182bf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37641)[0m     @     0x56182bfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37641)[0m     @     0x56182bf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x56182bf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37641)[0m     @     0x56182bfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37641)[0m     @     0x56182bf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x56182bf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37641)[0m     @     0x56182bfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37641)[0m     @     0x56182bf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37641)[0m     @     0x56182bf9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37641)[0m     @     0x56182bfa0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37641)[0m     @     0x56182bf15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x7f89780f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37626)[0m     @     0x7f89780f3388 at::native::copy_impl()
[2m[36m(pid=37626)[0m     @     0x7f89780f55a4 at::native::copy_()
[2m[36m(pid=37626)[0m     @     0x7f89787e04f5 at::Tensor::copy_()
[2m[36m(pid=37626)[0m     @     0x7f897acb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37552)[0m     @     0x7f6ee8974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37552)[0m     @     0x7f6ee7e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37552)[0m     @     0x7f6ee7e14388 at::native::copy_impl()
[2m[36m(pid=37552)[0m     @     0x7f6ee7e165a4 at::native::copy_()
[2m[36m(pid=37552)[0m     @     0x7f6ee85014f5 at::Tensor::copy_()
[2m[36m(pid=37557)[0m     @     0x7f85953ba4f5 at::Tensor::copy_()
[2m[36m(pid=37557)[0m     @     0x7f859b46579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37557)[0m     @     0x561f38761fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37557)[0m     @     0x561f386bcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37557)[0m     @     0x561f38747baf _PyEval_EvalCodeWithName
[2m[36m(pid=37557)[0m     @     0x561f38748a20 method_vectorcall
[2m[36m(pid=37557)[0m     @     0x561f386bcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37557)[0m     @     0x561f38747baf _PyEval_EvalCodeWithName
[2m[36m(pid=37557)[0m     @     0x561f38748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37557)[0m     @     0x561f386bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37557)[0m     @     0x561f38747baf _PyEval_EvalCodeWithName
[2m[36m(pid=37557)[0m     @     0x561f38748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37557)[0m     @     0x561f386bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37557)[0m     @     0x561f38747baf _PyEval_EvalCodeWithName
[2m[36m(pid=37557)[0m     @     0x561f38748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37557)[0m     @     0x561f386bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37557)[0m     @     0x561f38747baf _PyEval_EvalCodeWithName
[2m[36m(pid=37557)[0m     @     0x561f38748643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37557)[0m     @     0x561f386bd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x7fad07427d91 at::TensorIterator::for_each()
[2m[36m(pid=37647)[0m     @     0x7fad07d0ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37647)[0m     @     0x7fad07d2dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37647)[0m     @     0x7fad071cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37647)[0m     @     0x7fad071cd388 at::native::copy_impl()
[2m[36m(pid=37647)[0m     @     0x7fad071cf5a4 at::native::copy_()
[2m[36m(pid=37674)[0m     @     0x7f9362367388 at::native::copy_impl()
[2m[36m(pid=37674)[0m     @     0x7f93623695a4 at::native::copy_()
[2m[36m(pid=37674)[0m     @     0x7f9362a544f5 at::Tensor::copy_()
[2m[36m(pid=37674)[0m     @     0x7f9364f278de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37674)[0m     @     0x7f9362a544f5 at::Tensor::copy_()
[2m[36m(pid=37560)[0m     @     0x7f28a7a9e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37560)[0m     @     0x7f28a55cb4f5 at::Tensor::copy_()
[2m[36m(pid=37560)[0m     @     0x7f28ab67679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37560)[0m     @     0x5589c7f06fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37560)[0m     @     0x5589c7e61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37560)[0m     @     0x5589c7eecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37560)[0m     @     0x5589c7eeda20 method_vectorcall
[2m[36m(pid=37560)[0m     @     0x5589c7e61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37560)[0m     @     0x5589c7eecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37560)[0m     @     0x5589c7eed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37560)[0m     @     0x5589c7e62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37560)[0m     @     0x5589c7eecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37560)[0m     @     0x5589c7eed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37560)[0m     @     0x5589c7e62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37560)[0m     @     0x5589c7eecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37560)[0m     @     0x5589c7eed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37560)[0m     @     0x5589c7e62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37560)[0m     @     0x5589c7eecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37560)[0m     @     0x5589c7eed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37560)[0m     @     0x5589c7e62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x7f3de5778ad3 at::TensorIterator::for_each()
[2m[36m(pid=37551)[0m     @     0x7f3de5778d91 at::TensorIterator::for_each()
[2m[36m(pid=37551)[0m     @     0x7f3de605bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37551)[0m     @     0x7f3de607ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37551)[0m     @     0x7f3de5520a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37551)[0m     @     0x7f3de551e388 at::native::copy_impl()
[2m[36m(pid=37554)[0m     @     0x7f5603158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37554)[0m     @     0x7f56025faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37554)[0m     @     0x7f56025f8388 at::native::copy_impl()
[2m[36m(pid=37554)[0m     @     0x7f56025fa5a4 at::native::copy_()
[2m[36m(pid=37554)[0m     @     0x7f5602ce54f5 at::Tensor::copy_()
[2m[36m(pid=37676)[0m     @     0x55c1a0872baf _PyEval_EvalCodeWithName
[2m[36m(pid=37676)[0m     @     0x55c1a0873643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37676)[0m     @     0x55c1a07e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x7f3d41c0e4f5 at::Tensor::copy_()
[2m[36m(pid=37568)[0m     @     0x7f3d47cb979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37568)[0m     @     0x5597b48abfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37568)[0m     @     0x5597b4806b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x5597b4891baf _PyEval_EvalCodeWithName
[2m[36m(pid=37568)[0m     @     0x5597b4892a20 method_vectorcall
[2m[36m(pid=37568)[0m     @     0x5597b4806bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x5597b4891baf _PyEval_EvalCodeWithName
[2m[36m(pid=37568)[0m     @     0x5597b4892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37568)[0m     @     0x5597b4807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x5597b4891baf _PyEval_EvalCodeWithName
[2m[36m(pid=37568)[0m     @     0x5597b4892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37568)[0m     @     0x5597b4807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x5597b4891baf _PyEval_EvalCodeWithName
[2m[36m(pid=37568)[0m     @     0x5597b4892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37568)[0m     @     0x5597b4807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37568)[0m     @     0x5597b4891baf _PyEval_EvalCodeWithName
[2m[36m(pid=37568)[0m     @     0x5597b4892643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37568)[0m     @     0x5597b4807689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x7f32db4a38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37562)[0m     @     0x7f32d8fd04f5 at::Tensor::copy_()
[2m[36m(pid=37562)[0m     @     0x7f32df07b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37562)[0m     @     0x5567100b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37562)[0m     @     0x55671000cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x556710097baf _PyEval_EvalCodeWithName
[2m[36m(pid=37562)[0m     @     0x556710098a20 method_vectorcall
[2m[36m(pid=37562)[0m     @     0x55671000cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x556710097baf _PyEval_EvalCodeWithName
[2m[36m(pid=37562)[0m     @     0x556710098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37562)[0m     @     0x55671000d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x556710097baf _PyEval_EvalCodeWithName
[2m[36m(pid=37562)[0m     @     0x556710098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37562)[0m     @     0x55671000d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x556710097baf _PyEval_EvalCodeWithName
[2m[36m(pid=37562)[0m     @     0x556710098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37562)[0m     @     0x55671000d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37562)[0m     @     0x556710097baf _PyEval_EvalCodeWithName
[2m[36m(pid=37562)[0m     @     0x556710098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37562)[0m     @     0x55671000d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x7eeca9f4a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37583)[0m     @     0x7eeca7a774f5 at::Tensor::copy_()
[2m[36m(pid=37583)[0m     @     0x7eecadb2279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37583)[0m     @     0x562371cc4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37583)[0m     @     0x562371c1fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x562371caabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37583)[0m     @     0x562371caba20 method_vectorcall
[2m[36m(pid=37583)[0m     @     0x562371c1fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x562371caabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37583)[0m     @     0x562371cab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37583)[0m     @     0x562371c20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x562371caabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37583)[0m     @     0x562371cab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37583)[0m     @     0x562371c20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x562371caabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37583)[0m     @     0x562371cab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37583)[0m     @     0x562371c20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37583)[0m     @     0x562371caabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37583)[0m     @     0x562371cab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37583)[0m     @     0x562371c20689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x7ed29047779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37652)[0m     @     0x5621c0940fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37652)[0m     @     0x5621c089bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x5621c0926baf _PyEval_EvalCodeWithName
[2m[36m(pid=37652)[0m     @     0x5621c0927a20 method_vectorcall
[2m[36m(pid=37652)[0m     @     0x5621c089bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x5621c0926baf _PyEval_EvalCodeWithName
[2m[36m(pid=37652)[0m     @     0x5621c0927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37652)[0m     @     0x5621c089c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x5621c0926baf _PyEval_EvalCodeWithName
[2m[36m(pid=37652)[0m     @     0x5621c0927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37652)[0m     @     0x5621c089c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x5621c0926baf _PyEval_EvalCodeWithName
[2m[36m(pid=37652)[0m     @     0x5621c0927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37652)[0m     @     0x5621c089c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37652)[0m     @     0x5621c0926baf _PyEval_EvalCodeWithName
[2m[36m(pid=37652)[0m     @     0x5621c0927643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37652)[0m     @     0x5621c089c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x7f0c4960e388 at::native::copy_impl()
[2m[36m(pid=37632)[0m     @     0x7f0c496105a4 at::native::copy_()
[2m[36m(pid=37632)[0m     @     0x7f0c49cfb4f5 at::Tensor::copy_()
[2m[36m(pid=37632)[0m     @     0x7f0c4c1ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37639)[0m     @     0x7faa8740ed91 at::TensorIterator::for_each()
[2m[36m(pid=37639)[0m     @     0x7faa87cf1b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37639)[0m     @     0x7faa87d14c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37639)[0m     @     0x7faa871b6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37639)[0m     @     0x7faa871b4388 at::native::copy_impl()
[2m[36m(pid=37630)[0m     @     0x7fc2f6e9ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37630)[0m     @     0x7fc2f6e99388 at::native::copy_impl()
[2m[36m(pid=37630)[0m     @     0x7fc2f6e9b5a4 at::native::copy_()
[2m[36m(pid=37630)[0m     @     0x7fc2f75864f5 at::Tensor::copy_()
[2m[36m(pid=37621)[0m     @     0x7edfe5c278f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=37621)[0m     @     0x7edfe5c27ad3 at::TensorIterator::for_each()
[2m[36m(pid=37621)[0m     @     0x7edfe5c27d91 at::TensorIterator::for_each()
[2m[36m(pid=37621)[0m     @     0x7edfe650ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37565)[0m     @     0x7f6d0309d5a4 at::native::copy_()
[2m[36m(pid=37565)[0m     @     0x7f6d037884f5 at::Tensor::copy_()
[2m[36m(pid=37565)[0m     @     0x7f6d05c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37624)[0m     @     0x7ee52aaf3388 at::native::copy_impl()
[2m[36m(pid=37624)[0m     @     0x7ee52aaf55a4 at::native::copy_()
[2m[36m(pid=37624)[0m     @     0x7ee52b1e04f5 at::Tensor::copy_()
[2m[36m(pid=37624)[0m     @     0x7ee52d6b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37555)[0m     @     0x7fa0b3fa3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37555)[0m     @     0x7fa0b3fa1388 at::native::copy_impl()
[2m[36m(pid=37555)[0m     @     0x7fa0b3fa35a4 at::native::copy_()
[2m[36m(pid=37555)[0m     @     0x7fa0b468e4f5 at::Tensor::copy_()
[2m[36m(pid=37613)[0m     @     0x7fca9bc14a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37613)[0m     @     0x7fca9bc12388 at::native::copy_impl()
[2m[36m(pid=37613)[0m     @     0x7fca9bc145a4 at::native::copy_()
[2m[36m(pid=37613)[0m     @     0x7fca9c2ff4f5 at::Tensor::copy_()
[2m[36m(pid=37613)[0m     @     0x7fca9e7d28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37613)[0m     @     0x7fca9c2ff4f5 at::Tensor::copy_()
[2m[36m(pid=37613)[0m     @     0x7fcaa21a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37613)[0m     @     0x561f9fa2bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37613)[0m     @     0x561f9f986b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37613)[0m     @     0x561f9fa11baf _PyEval_EvalCodeWithName
[2m[36m(pid=37613)[0m     @     0x561f9fa12a20 method_vectorcall
[2m[36m(pid=37613)[0m     @     0x561f9f986bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37613)[0m     @     0x561f9fa11baf _PyEval_EvalCodeWithName
[2m[36m(pid=37613)[0m     @     0x561f9fa12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37613)[0m     @     0x561f9f987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x7f253193da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37618)[0m     @     0x7f253193b388 at::native::copy_impl()
[2m[36m(pid=37618)[0m     @     0x7f253193d5a4 at::native::copy_()
[2m[36m(pid=37618)[0m     @     0x7f25320284f5 at::Tensor::copy_()
[2m[36m(pid=37618)[0m     @     0x7f25344fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37619)[0m     @     0x7f5bacccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37619)[0m     @     0x7f5bacccd388 at::native::copy_impl()
[2m[36m(pid=37619)[0m     @     0x7f5bacccf5a4 at::native::copy_()
[2m[36m(pid=37619)[0m     @     0x7f5bad3ba4f5 at::Tensor::copy_()
[2m[36m(pid=37619)[0m     @     0x7f5baf88d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37617)[0m     @     0x7f592c574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37617)[0m     @     0x7f592c597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37617)[0m     @     0x7f592ba39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37617)[0m     @     0x7f592ba37388 at::native::copy_impl()
[2m[36m(pid=37617)[0m     @     0x7f592ba395a4 at::native::copy_()
[2m[36m(pid=37617)[0m     @     0x7f592c1244f5 at::Tensor::copy_()
[2m[36m(pid=37620)[0m     @     0x7f8539b95d91 at::TensorIterator::for_each()
[2m[36m(pid=37620)[0m     @     0x7f853a478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37620)[0m     @     0x7f853a49bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37620)[0m     @     0x7f853993da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37620)[0m     @     0x7f853993b388 at::native::copy_impl()
[2m[36m(pid=37620)[0m     @     0x7f853993d5a4 at::native::copy_()
[2m[36m(pid=37667)[0m     @     0x7f92bea32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37667)[0m     @     0x7f92bea55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37667)[0m     @     0x7f92bdef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37667)[0m     @     0x7f92bdef5388 at::native::copy_impl()
[2m[36m(pid=37667)[0m     @     0x7f92bdef75a4 at::native::copy_()
[2m[36m(pid=37667)[0m     @     0x7f92be5e24f5 at::Tensor::copy_()
[2m[36m(pid=37662)[0m     @     0x7f657b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37662)[0m     @     0x7f657b807388 at::native::copy_impl()
[2m[36m(pid=37662)[0m     @     0x7f657b8095a4 at::native::copy_()
[2m[36m(pid=37662)[0m     @     0x7f657bef44f5 at::Tensor::copy_()
[2m[36m(pid=37662)[0m     @     0x7f657e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37665)[0m     @     0x7f9c100a5388 at::native::copy_impl()
[2m[36m(pid=37665)[0m     @     0x7f9c100a75a4 at::native::copy_()
[2m[36m(pid=37665)[0m     @     0x7f9c107924f5 at::Tensor::copy_()
[2m[36m(pid=37665)[0m     @     0x7f9c12c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37665)[0m     @     0x7f9c107924f5 at::Tensor::copy_()
[2m[36m(pid=37572)[0m     @     0x7f646346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37572)[0m     @     0x55eddd108fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37572)[0m     @     0x55eddd063b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37572)[0m     @     0x55eddd0eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37572)[0m     @     0x55eddd0efa20 method_vectorcall
[2m[36m(pid=37572)[0m     @     0x55eddd063bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37572)[0m     @     0x55eddd0eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37572)[0m     @     0x55eddd0ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37572)[0m     @     0x55eddd064689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37572)[0m     @     0x55eddd0eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37572)[0m     @     0x55eddd0ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37572)[0m     @     0x55eddd064689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37572)[0m     @     0x55eddd0eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37572)[0m     @     0x55eddd0ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37572)[0m     @     0x55eddd064689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37572)[0m     @     0x55eddd0eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37572)[0m     @     0x55eddd0ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37572)[0m     @     0x55eddd064689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x7fbc57e1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37611)[0m     @     0x7fbc57e3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37611)[0m     @     0x7fbc572e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37611)[0m     @     0x7fbc572df388 at::native::copy_impl()
[2m[36m(pid=37611)[0m     @     0x7fbc572e15a4 at::native::copy_()
[2m[36m(pid=37611)[0m     @     0x7fbc579cc4f5 at::Tensor::copy_()
[2m[36m(pid=37625)[0m     @     0x7f394fcf9388 at::native::copy_impl()
[2m[36m(pid=37625)[0m     @     0x7f394fcfb5a4 at::native::copy_()
[2m[36m(pid=37625)[0m     @     0x7f39503e64f5 at::Tensor::copy_()
[2m[36m(pid=37625)[0m     @     0x7f39528b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37625)[0m     @     0x7f39503e64f5 at::Tensor::copy_()
[2m[36m(pid=37680)[0m     @     0x7ed570ccfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37680)[0m     @     0x7ed570ccd388 at::native::copy_impl()
[2m[36m(pid=37680)[0m     @     0x7ed570ccf5a4 at::native::copy_()
[2m[36m(pid=37680)[0m     @     0x7ed5713ba4f5 at::Tensor::copy_()
[2m[36m(pid=37693)[0m     @     0x7f3d200a75a4 at::native::copy_()
[2m[36m(pid=37693)[0m     @     0x7f3d207924f5 at::Tensor::copy_()
[2m[36m(pid=37693)[0m     @     0x7f3d22c658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37693)[0m     @     0x7f3d207924f5 at::Tensor::copy_()
[2m[36m(pid=37693)[0m     @     0x7f3d2683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37693)[0m     @     0x5597ecc60fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37693)[0m     @     0x5597ecbbbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecc46baf _PyEval_EvalCodeWithName
[2m[36m(pid=37693)[0m     @     0x5597ecc47a20 method_vectorcall
[2m[36m(pid=37693)[0m     @     0x5597ecbbbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecc46baf _PyEval_EvalCodeWithName
[2m[36m(pid=37693)[0m     @     0x5597ecc47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37693)[0m     @     0x5597ecbbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecc46baf _PyEval_EvalCodeWithName
[2m[36m(pid=37693)[0m     @     0x5597ecc47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37693)[0m     @     0x5597ecbbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecc46baf _PyEval_EvalCodeWithName
[2m[36m(pid=37693)[0m     @     0x5597ecc47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37693)[0m     @     0x5597ecbbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecc46baf _PyEval_EvalCodeWithName
[2m[36m(pid=37693)[0m     @     0x5597ecc47643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37586)[0m     @     0x7ee1429c05a4 at::native::copy_()
[2m[36m(pid=37586)[0m     @     0x7ee1430ab4f5 at::Tensor::copy_()
[2m[36m(pid=37586)[0m     @     0x7ee14557e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37586)[0m     @     0x7ee1430ab4f5 at::Tensor::copy_()
[2m[36m(pid=37586)[0m     @     0x7ee14915679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37586)[0m     @     0x55622b946fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37586)[0m     @     0x55622b8a1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37586)[0m     @     0x55622b92cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37586)[0m     @     0x55622b92da20 method_vectorcall
[2m[36m(pid=37586)[0m     @     0x55622b8a1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37586)[0m     @     0x55622b92cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37586)[0m     @     0x55622b92d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37586)[0m     @     0x55622b8a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37586)[0m     @     0x55622b92cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37586)[0m     @     0x55622b92d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37586)[0m     @     0x55622b8a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37586)[0m     @     0x55622b92cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37586)[0m     @     0x55622b92d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37586)[0m     @     0x55622b8a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37586)[0m     @     0x55622b92cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37586)[0m     @     0x55622b92d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37586)[0m     @     0x55622b8a2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x7f02e78095a4 at::native::copy_()
[2m[36m(pid=37559)[0m     @     0x7f02e7ef44f5 at::Tensor::copy_()
[2m[36m(pid=37559)[0m     @     0x7f02ea3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37566)[0m     @     0x7f4e2c7924f5 at::Tensor::copy_()
[2m[36m(pid=37566)[0m     @     0x7f4e2ec658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37566)[0m     @     0x7f4e2c7924f5 at::Tensor::copy_()
[2m[36m(pid=37566)[0m     @     0x7f4e3283d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37566)[0m     @     0x55932a60afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37566)[0m     @     0x55932a565b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37566)[0m     @     0x55932a5f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37566)[0m     @     0x55932a5f1a20 method_vectorcall
[2m[36m(pid=37566)[0m     @     0x55932a565bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37566)[0m     @     0x55932a5f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37566)[0m     @     0x55932a5f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37566)[0m     @     0x55932a566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37566)[0m     @     0x55932a5f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37566)[0m     @     0x55932a5f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37566)[0m     @     0x55932a566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37566)[0m     @     0x55932a5f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37566)[0m     @     0x55932a5f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37566)[0m     @     0x55932a566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37566)[0m     @     0x55932a5f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37566)[0m     @     0x55932a5f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37566)[0m     @     0x55932a566689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x7edeceaf3388 at::native::copy_impl()
[2m[36m(pid=37561)[0m     @     0x7edeceaf55a4 at::native::copy_()
[2m[36m(pid=37561)[0m     @     0x7edecf1e04f5 at::Tensor::copy_()
[2m[36m(pid=37561)[0m     @     0x7eded16b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37637)[0m     @     0x7f852858b5a4 at::native::copy_()
[2m[36m(pid=37637)[0m     @     0x7f8528c764f5 at::Tensor::copy_()
[2m[36m(pid=37637)[0m     @     0x7f852b1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37637)[0m     @     0x7f8528c764f5 at::Tensor::copy_()
[2m[36m(pid=37637)[0m     @     0x7f852ed2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37637)[0m     @     0x55873e8effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37637)[0m     @     0x55873e84ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37637)[0m     @     0x55873e8d6a20 method_vectorcall
[2m[36m(pid=37637)[0m     @     0x55873e84abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37637)[0m     @     0x55873e8d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37637)[0m     @     0x55873e84b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37637)[0m     @     0x55873e8d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37637)[0m     @     0x55873e84b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37637)[0m     @     0x55873e8d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37637)[0m     @     0x55873e84b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x7fbc798628de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37588)[0m     @     0x7fbc7738f4f5 at::Tensor::copy_()
[2m[36m(pid=37588)[0m     @     0x7fbc7d43a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37588)[0m     @     0x5573b485afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37588)[0m     @     0x5573b47b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37588)[0m     @     0x5573b4840baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x5573b4841a20 method_vectorcall
[2m[36m(pid=37588)[0m     @     0x5573b47b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37588)[0m     @     0x5573b4840baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x5573b4841643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37588)[0m     @     0x5573b47b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37588)[0m     @     0x5573b4840baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x5573b4841643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37588)[0m     @     0x5573b47b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37588)[0m     @     0x5573b4840baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x5573b4841643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37588)[0m     @     0x5573b47b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37588)[0m     @     0x5573b4840baf _PyEval_EvalCodeWithName
[2m[36m(pid=37588)[0m     @     0x5573b4841643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37588)[0m     @     0x5573b47b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x7fb6a59e54f5 at::Tensor::copy_()
[2m[36m(pid=37573)[0m     @     0x7fb6a7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37627)[0m     @     0x7f84cad20d91 at::TensorIterator::for_each()
[2m[36m(pid=37627)[0m     @     0x7f84cb603b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=37627)[0m     @     0x7f84cb626c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37622)[0m     @     0x7f1e83cfb5a4 at::native::copy_()
[2m[36m(pid=37622)[0m     @     0x7f1e843e64f5 at::Tensor::copy_()
[2m[36m(pid=37622)[0m     @     0x7f1e868b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37553)[0m     @     0x7f296e3878de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37553)[0m     @     0x7f296beb44f5 at::Tensor::copy_()
[2m[36m(pid=37553)[0m     @     0x7f2971f5f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37553)[0m     @     0x55be7484cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37553)[0m     @     0x55be747a7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x55be74832baf _PyEval_EvalCodeWithName
[2m[36m(pid=37553)[0m     @     0x55be74833a20 method_vectorcall
[2m[36m(pid=37553)[0m     @     0x55be747a7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x55be74832baf _PyEval_EvalCodeWithName
[2m[36m(pid=37553)[0m     @     0x55be74833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37553)[0m     @     0x55be747a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x55be74832baf _PyEval_EvalCodeWithName
[2m[36m(pid=37553)[0m     @     0x55be74833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37553)[0m     @     0x55be747a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x55be74832baf _PyEval_EvalCodeWithName
[2m[36m(pid=37553)[0m     @     0x55be74833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37553)[0m     @     0x55be747a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37553)[0m     @     0x55be74832baf _PyEval_EvalCodeWithName
[2m[36m(pid=37553)[0m     @     0x55be74833643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37553)[0m     @     0x55be747a8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x7f1932ce54f5 at::Tensor::copy_()
[2m[36m(pid=37569)[0m     @     0x7f19351b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37570)[0m     @     0x7edcadc8879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37570)[0m     @     0x55a503449fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37570)[0m     @     0x55a5033a4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37570)[0m     @     0x55a50342fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37570)[0m     @     0x55a503430a20 method_vectorcall
[2m[36m(pid=37570)[0m     @     0x55a5033a4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37570)[0m     @     0x55a50342fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37570)[0m     @     0x55a503430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37570)[0m     @     0x55a5033a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37570)[0m     @     0x55a50342fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37570)[0m     @     0x55a503430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37570)[0m     @     0x55a5033a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37570)[0m     @     0x55a50342fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37570)[0m     @     0x55a503430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37570)[0m     @     0x55a5033a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37570)[0m     @     0x55a50342fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37570)[0m     @     0x55a503430643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37570)[0m     @     0x55a5033a5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x7ef5f60ba4f5 at::Tensor::copy_()
[2m[36m(pid=37678)[0m     @     0x7ef5fc16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37678)[0m     @     0x559678ebbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37678)[0m     @     0x559678e16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x559678ea1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37678)[0m     @     0x559678ea2a20 method_vectorcall
[2m[36m(pid=37678)[0m     @     0x559678e16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x559678ea1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37678)[0m     @     0x559678ea2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37678)[0m     @     0x559678e17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x559678ea1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37678)[0m     @     0x559678ea2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37678)[0m     @     0x559678e17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x559678ea1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37678)[0m     @     0x559678ea2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37678)[0m     @     0x559678e17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37678)[0m     @     0x559678ea1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37678)[0m     @     0x559678ea2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37678)[0m     @     0x559678e17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x7f306ab84a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37633)[0m     @     0x7f306ab82388 at::native::copy_impl()
[2m[36m(pid=37633)[0m     @     0x7f306ab845a4 at::native::copy_()
[2m[36m(pid=37567)[0m     @     0x7f37902204f5 at::Tensor::copy_()
[2m[36m(pid=37567)[0m     @     0x7f37962cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37567)[0m     @     0x562daa80afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37567)[0m     @     0x562daa765b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x562daa7f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37567)[0m     @     0x562daa7f1a20 method_vectorcall
[2m[36m(pid=37567)[0m     @     0x562daa765bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x562daa7f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37567)[0m     @     0x562daa7f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37567)[0m     @     0x562daa766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x562daa7f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37567)[0m     @     0x562daa7f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37567)[0m     @     0x562daa766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x562daa7f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37567)[0m     @     0x562daa7f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37567)[0m     @     0x562daa766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37567)[0m     @     0x562daa7f0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37567)[0m     @     0x562daa7f1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37567)[0m     @     0x562daa766689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x7f44727738de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37550)[0m     @     0x7f44702a04f5 at::Tensor::copy_()
[2m[36m(pid=37550)[0m     @     0x7f447634b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37550)[0m     @     0x5650d1478fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37550)[0m     @     0x5650d13d3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x5650d145ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37550)[0m     @     0x5650d145fa20 method_vectorcall
[2m[36m(pid=37550)[0m     @     0x5650d13d3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x5650d145ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37550)[0m     @     0x5650d145f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37550)[0m     @     0x5650d13d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x5650d145ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37550)[0m     @     0x5650d145f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37550)[0m     @     0x5650d13d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x5650d145ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37550)[0m     @     0x5650d145f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37550)[0m     @     0x5650d13d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37550)[0m     @     0x5650d145ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37550)[0m     @     0x5650d145f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37550)[0m     @     0x5650d13d4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x7f89787e04f5 at::Tensor::copy_()
[2m[36m(pid=37626)[0m     @     0x7f897e88b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37626)[0m     @     0x5620ce43efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37626)[0m     @     0x5620ce399b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x5620ce424baf _PyEval_EvalCodeWithName
[2m[36m(pid=37626)[0m     @     0x5620ce425a20 method_vectorcall
[2m[36m(pid=37626)[0m     @     0x5620ce399bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x5620ce424baf _PyEval_EvalCodeWithName
[2m[36m(pid=37626)[0m     @     0x5620ce425643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37626)[0m     @     0x5620ce39a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x5620ce424baf _PyEval_EvalCodeWithName
[2m[36m(pid=37626)[0m     @     0x5620ce425643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37626)[0m     @     0x5620ce39a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x5620ce424baf _PyEval_EvalCodeWithName
[2m[36m(pid=37626)[0m     @     0x5620ce425643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37626)[0m     @     0x5620ce39a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37626)[0m     @     0x5620ce424baf _PyEval_EvalCodeWithName
[2m[36m(pid=37626)[0m     @     0x5620ce425643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37626)[0m     @     0x5620ce39a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x7f6eea9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37552)[0m     @     0x7f6ee85014f5 at::Tensor::copy_()
[2m[36m(pid=37552)[0m     @     0x7f6eee1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37552)[0m     @     0x56484aecffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37552)[0m     @     0x56484ae2ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x56484aeb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37552)[0m     @     0x56484aeb6a20 method_vectorcall
[2m[36m(pid=37552)[0m     @     0x56484ae2abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x56484aeb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37552)[0m     @     0x56484aeb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37552)[0m     @     0x56484ae2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x56484aeb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37552)[0m     @     0x56484aeb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37552)[0m     @     0x56484ae2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x56484aeb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37552)[0m     @     0x56484aeb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37552)[0m     @     0x56484ae2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37552)[0m     @     0x56484aeb5baf _PyEval_EvalCodeWithName
[2m[36m(pid=37552)[0m     @     0x56484aeb6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37552)[0m     @     0x56484ae2b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x7fad078ba4f5 at::Tensor::copy_()
[2m[36m(pid=37647)[0m     @     0x7fad09d8d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37647)[0m     @     0x7fad078ba4f5 at::Tensor::copy_()
[2m[36m(pid=37647)[0m     @     0x7fad0d96579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37647)[0m     @     0x556ed2eb9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37647)[0m     @     0x556ed2e14b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x556ed2e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37647)[0m     @     0x556ed2ea0a20 method_vectorcall
[2m[36m(pid=37647)[0m     @     0x556ed2e14bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x556ed2e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37647)[0m     @     0x556ed2ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37647)[0m     @     0x556ed2e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x556ed2e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37647)[0m     @     0x556ed2ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37647)[0m     @     0x556ed2e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x556ed2e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37647)[0m     @     0x556ed2ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37647)[0m     @     0x556ed2e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37647)[0m     @     0x556ed2e9fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37647)[0m     @     0x556ed2ea0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37647)[0m     @     0x556ed2e15689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x7f9368aff79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37674)[0m     @     0x562c71939fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37674)[0m     @     0x562c71894b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x562c7191fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37674)[0m     @     0x562c71920a20 method_vectorcall
[2m[36m(pid=37674)[0m     @     0x562c71894bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x562c7191fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37674)[0m     @     0x562c71920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37674)[0m     @     0x562c71895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x562c7191fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37674)[0m     @     0x562c71920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37674)[0m     @     0x562c71895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x562c7191fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37674)[0m     @     0x562c71920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37674)[0m     @     0x562c71895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37674)[0m     @     0x562c7191fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37674)[0m     @     0x562c71920643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37674)[0m     @     0x562c71895689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x7f3de55205a4 at::native::copy_()
[2m[36m(pid=37551)[0m     @     0x7f3de5c0b4f5 at::Tensor::copy_()
[2m[36m(pid=37551)[0m     @     0x7f3de80de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37551)[0m     @     0x7f3de5c0b4f5 at::Tensor::copy_()
[2m[36m(pid=37551)[0m     @     0x7f3debcb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37551)[0m     @     0x55f36f216fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37551)[0m     @     0x55f36f171b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x55f36f1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37551)[0m     @     0x55f36f1fda20 method_vectorcall
[2m[36m(pid=37551)[0m     @     0x55f36f171bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x7f56051b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37554)[0m     @     0x7f5602ce54f5 at::Tensor::copy_()
[2m[36m(pid=37554)[0m     @     0x7f5608d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37554)[0m     @     0x55635a13efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37554)[0m     @     0x55635a099b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x55635a124baf _PyEval_EvalCodeWithName
[2m[36m(pid=37554)[0m     @     0x55635a125a20 method_vectorcall
[2m[36m(pid=37554)[0m     @     0x55635a099bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x55635a124baf _PyEval_EvalCodeWithName
[2m[36m(pid=37554)[0m     @     0x55635a125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37554)[0m     @     0x55635a09a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x55635a124baf _PyEval_EvalCodeWithName
[2m[36m(pid=37554)[0m     @     0x55635a125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37554)[0m     @     0x55635a09a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x55635a124baf _PyEval_EvalCodeWithName
[2m[36m(pid=37554)[0m     @     0x55635a125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37554)[0m     @     0x55635a09a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37554)[0m     @     0x55635a124baf _PyEval_EvalCodeWithName
[2m[36m(pid=37554)[0m     @     0x55635a125643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37554)[0m     @     0x55635a09a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x7f0c49cfb4f5 at::Tensor::copy_()
[2m[36m(pid=37632)[0m     @     0x7f0c4fda679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37632)[0m     @     0x5612a8cf0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37632)[0m     @     0x5612a8c4bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x5612a8cd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37632)[0m     @     0x5612a8cd7a20 method_vectorcall
[2m[36m(pid=37632)[0m     @     0x5612a8c4bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x5612a8cd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37632)[0m     @     0x5612a8cd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37632)[0m     @     0x5612a8c4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x5612a8cd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37632)[0m     @     0x5612a8cd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37632)[0m     @     0x5612a8c4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x5612a8cd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37632)[0m     @     0x5612a8cd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37632)[0m     @     0x5612a8c4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37632)[0m     @     0x5612a8cd6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37632)[0m     @     0x5612a8cd7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37632)[0m     @     0x5612a8c4c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x7faa871b65a4 at::native::copy_()
[2m[36m(pid=37639)[0m     @     0x7faa878a14f5 at::Tensor::copy_()
[2m[36m(pid=37639)[0m     @     0x7faa89d748de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37639)[0m     @     0x7faa878a14f5 at::Tensor::copy_()
[2m[36m(pid=37630)[0m     @     0x7fc2f9a598de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37630)[0m     @     0x7fc2f75864f5 at::Tensor::copy_()
[2m[36m(pid=37630)[0m     @     0x7fc2fd63179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37630)[0m     @     0x55b4e2bdafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37630)[0m     @     0x55b4e2b35b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37630)[0m     @     0x55b4e2bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37630)[0m     @     0x55b4e2bc1a20 method_vectorcall
[2m[36m(pid=37630)[0m     @     0x55b4e2b35bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37630)[0m     @     0x55b4e2bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37630)[0m     @     0x55b4e2bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37630)[0m     @     0x55b4e2b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37630)[0m     @     0x55b4e2bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37630)[0m     @     0x55b4e2bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37630)[0m     @     0x55b4e2b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37630)[0m     @     0x55b4e2bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37630)[0m     @     0x55b4e2bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37630)[0m     @     0x55b4e2b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37630)[0m     @     0x55b4e2bc0baf _PyEval_EvalCodeWithName
[2m[36m(pid=37630)[0m     @     0x55b4e2bc1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37630)[0m     @     0x55b4e2b36689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x7edfe652dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=37621)[0m     @     0x7edfe59cfa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37621)[0m     @     0x7edfe59cd388 at::native::copy_impl()
[2m[36m(pid=37621)[0m     @     0x7edfe59cf5a4 at::native::copy_()
[2m[36m(pid=37565)[0m     @     0x7f6d037884f5 at::Tensor::copy_()
[2m[36m(pid=37565)[0m     @     0x7f6d0983379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37565)[0m     @     0x561ae6c35fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37565)[0m     @     0x561ae6b90b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37565)[0m     @     0x561ae6c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37565)[0m     @     0x561ae6c1ca20 method_vectorcall
[2m[36m(pid=37565)[0m     @     0x561ae6b90bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37565)[0m     @     0x561ae6c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37565)[0m     @     0x561ae6c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37565)[0m     @     0x561ae6b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37565)[0m     @     0x561ae6c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37565)[0m     @     0x561ae6c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37565)[0m     @     0x561ae6b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37565)[0m     @     0x561ae6c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37565)[0m     @     0x561ae6c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37565)[0m     @     0x561ae6b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37565)[0m     @     0x561ae6c1bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37565)[0m     @     0x561ae6c1c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37565)[0m     @     0x561ae6b91689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x7ee52b1e04f5 at::Tensor::copy_()
[2m[36m(pid=37624)[0m     @     0x7ee53128b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37624)[0m     @     0x5597cd012fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37624)[0m     @     0x5597ccf6db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x5597ccff8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37624)[0m     @     0x5597ccff9a20 method_vectorcall
[2m[36m(pid=37624)[0m     @     0x5597ccf6dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x5597ccff8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37624)[0m     @     0x5597ccff9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37624)[0m     @     0x5597ccf6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x5597ccff8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37624)[0m     @     0x5597ccff9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37624)[0m     @     0x5597ccf6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x5597ccff8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37624)[0m     @     0x5597ccff9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37624)[0m     @     0x5597ccf6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37624)[0m     @     0x5597ccff8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37624)[0m     @     0x5597ccff9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37624)[0m     @     0x5597ccf6e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x7fa0b6b618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37555)[0m     @     0x7fa0b468e4f5 at::Tensor::copy_()
[2m[36m(pid=37555)[0m     @     0x7fa0ba73979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37555)[0m     @     0x5597ec3ddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37555)[0m     @     0x5597ec338b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x5597ec3c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37555)[0m     @     0x5597ec3c4a20 method_vectorcall
[2m[36m(pid=37555)[0m     @     0x5597ec338bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x5597ec3c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37555)[0m     @     0x5597ec3c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37555)[0m     @     0x5597ec339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x5597ec3c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37555)[0m     @     0x5597ec3c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37555)[0m     @     0x5597ec339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x5597ec3c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37555)[0m     @     0x5597ec3c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37555)[0m     @     0x5597ec339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37555)[0m     @     0x5597ec3c3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37555)[0m     @     0x5597ec3c4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37555)[0m     @     0x5597ec339689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37613)[0m     @     0x561f9fa11baf _PyEval_EvalCodeWithName
[2m[36m(pid=37613)[0m     @     0x561f9fa12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37613)[0m     @     0x561f9f987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37613)[0m     @     0x561f9fa11baf _PyEval_EvalCodeWithName
[2m[36m(pid=37613)[0m     @     0x561f9fa12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37613)[0m     @     0x561f9f987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37613)[0m     @     0x561f9fa11baf _PyEval_EvalCodeWithName
[2m[36m(pid=37613)[0m     @     0x561f9fa12643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37613)[0m     @     0x561f9f987689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x7f25320284f5 at::Tensor::copy_()
[2m[36m(pid=37618)[0m     @     0x7f25380d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37618)[0m     @     0x5569263cdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37618)[0m     @     0x556926328b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x5569263b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37618)[0m     @     0x5569263b4a20 method_vectorcall
[2m[36m(pid=37618)[0m     @     0x556926328bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x5569263b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37618)[0m     @     0x5569263b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37618)[0m     @     0x556926329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x5569263b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37618)[0m     @     0x5569263b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37618)[0m     @     0x556926329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x5569263b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37618)[0m     @     0x5569263b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37618)[0m     @     0x556926329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37618)[0m     @     0x5569263b3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37618)[0m     @     0x5569263b4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37618)[0m     @     0x556926329689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x7f5bad3ba4f5 at::Tensor::copy_()
[2m[36m(pid=37619)[0m     @     0x7f5bb346579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37619)[0m     @     0x55bd9a3d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37619)[0m     @     0x55bd9a32bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x55bd9a3b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37619)[0m     @     0x55bd9a3b7a20 method_vectorcall
[2m[36m(pid=37619)[0m     @     0x55bd9a32bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x55bd9a3b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37619)[0m     @     0x55bd9a3b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37619)[0m     @     0x55bd9a32c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x55bd9a3b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37619)[0m     @     0x55bd9a3b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37619)[0m     @     0x55bd9a32c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x55bd9a3b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37619)[0m     @     0x55bd9a3b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37619)[0m     @     0x55bd9a32c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37619)[0m     @     0x55bd9a3b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37619)[0m     @     0x55bd9a3b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37619)[0m     @     0x55bd9a32c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x7f592e5f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37617)[0m     @     0x7f592c1244f5 at::Tensor::copy_()
[2m[36m(pid=37617)[0m     @     0x7f59321cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37617)[0m     @     0x55a30ea86fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37617)[0m     @     0x55a30e9e1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x55a30ea6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37617)[0m     @     0x55a30ea6da20 method_vectorcall
[2m[36m(pid=37617)[0m     @     0x55a30e9e1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x55a30ea6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37617)[0m     @     0x55a30ea6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37620)[0m     @     0x7f853a0284f5 at::Tensor::copy_()
[2m[36m(pid=37620)[0m     @     0x7f853c4fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37620)[0m     @     0x7f853a0284f5 at::Tensor::copy_()
[2m[36m(pid=37620)[0m     @     0x7f85400d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37620)[0m     @     0x5573fa8b9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37620)[0m     @     0x5573fa814b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37620)[0m     @     0x5573fa89fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37620)[0m     @     0x5573fa8a0a20 method_vectorcall
[2m[36m(pid=37620)[0m     @     0x5573fa814bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37620)[0m     @     0x5573fa89fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37620)[0m     @     0x5573fa8a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37620)[0m     @     0x5573fa815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37620)[0m     @     0x5573fa89fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37620)[0m     @     0x5573fa8a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37620)[0m     @     0x5573fa815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37620)[0m     @     0x5573fa89fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37620)[0m     @     0x5573fa8a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37620)[0m     @     0x5573fa815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x7f92c0ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37667)[0m     @     0x7f92be5e24f5 at::Tensor::copy_()
[2m[36m(pid=37667)[0m     @     0x7f92c468d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37667)[0m     @     0x558330ec5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37667)[0m     @     0x558330e20b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x558330eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37667)[0m     @     0x558330eaca20 method_vectorcall
[2m[36m(pid=37667)[0m     @     0x558330e20bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x558330eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37667)[0m     @     0x558330eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37667)[0m     @     0x558330e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x558330eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37667)[0m     @     0x558330eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37667)[0m     @     0x558330e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x558330eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37667)[0m     @     0x558330eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37667)[0m     @     0x558330e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37667)[0m     @     0x558330eabbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37667)[0m     @     0x558330eac643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37667)[0m     @     0x558330e21689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x7f657bef44f5 at::Tensor::copy_()
[2m[36m(pid=37662)[0m     @     0x7f6581f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37662)[0m     @     0x55fce0bd9fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37662)[0m     @     0x55fce0b34b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x55fce0bbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37662)[0m     @     0x55fce0bc0a20 method_vectorcall
[2m[36m(pid=37662)[0m     @     0x55fce0b34bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x55fce0bbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37662)[0m     @     0x55fce0bc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37662)[0m     @     0x55fce0b35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x55fce0bbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37662)[0m     @     0x55fce0bc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37662)[0m     @     0x55fce0b35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x55fce0bbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37662)[0m     @     0x55fce0bc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37662)[0m     @     0x55fce0b35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37662)[0m     @     0x55fce0bbfbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37662)[0m     @     0x55fce0bc0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37662)[0m     @     0x55fce0b35689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x7f9c1683d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37665)[0m     @     0x555abe6c4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37665)[0m     @     0x555abe61fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x555abe6aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37665)[0m     @     0x555abe6aba20 method_vectorcall
[2m[36m(pid=37665)[0m     @     0x555abe61fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x555abe6aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37665)[0m     @     0x555abe6ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37665)[0m     @     0x555abe620689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x555abe6aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37665)[0m     @     0x555abe6ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37665)[0m     @     0x555abe620689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x555abe6aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37665)[0m     @     0x555abe6ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37665)[0m     @     0x555abe620689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37665)[0m     @     0x555abe6aabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37665)[0m     @     0x555abe6ab643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37665)[0m     @     0x555abe620689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x7fbc59e9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37611)[0m     @     0x7fbc579cc4f5 at::Tensor::copy_()
[2m[36m(pid=37611)[0m     @     0x7fbc5da7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37611)[0m     @     0x56074fed2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37611)[0m     @     0x56074fe2db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074feb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37611)[0m     @     0x56074feb9a20 method_vectorcall
[2m[36m(pid=37611)[0m     @     0x56074fe2dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074feb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37611)[0m     @     0x56074feb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37611)[0m     @     0x56074fe2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074feb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37611)[0m     @     0x56074feb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37611)[0m     @     0x56074fe2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074feb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37611)[0m     @     0x56074feb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37625)[0m     @     0x7f395649179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37625)[0m     @     0x55bbc69fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37625)[0m     @     0x55bbc6956b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37625)[0m     @     0x55bbc69e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37625)[0m     @     0x55bbc69e2a20 method_vectorcall
[2m[36m(pid=37625)[0m     @     0x55bbc6956bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37625)[0m     @     0x55bbc69e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37625)[0m     @     0x55bbc69e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37625)[0m     @     0x55bbc6957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37625)[0m     @     0x55bbc69e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37625)[0m     @     0x55bbc69e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37625)[0m     @     0x55bbc6957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37625)[0m     @     0x55bbc69e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37625)[0m     @     0x55bbc69e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37625)[0m     @     0x55bbc6957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37625)[0m     @     0x55bbc69e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=37625)[0m     @     0x55bbc69e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37625)[0m     @     0x55bbc6957689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x7ed57388d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37680)[0m     @     0x7ed5713ba4f5 at::Tensor::copy_()
[2m[36m(pid=37680)[0m     @     0x7ed57746579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37680)[0m     @     0x55d3fdc6dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37680)[0m     @     0x55d3fdbc8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x55d3fdc53baf _PyEval_EvalCodeWithName
[2m[36m(pid=37680)[0m     @     0x55d3fdc54a20 method_vectorcall
[2m[36m(pid=37680)[0m     @     0x55d3fdbc8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x55d3fdc53baf _PyEval_EvalCodeWithName
[2m[36m(pid=37680)[0m     @     0x55d3fdc54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37680)[0m     @     0x55d3fdbc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x55d3fdc53baf _PyEval_EvalCodeWithName
[2m[36m(pid=37680)[0m     @     0x55d3fdc54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37680)[0m     @     0x55d3fdbc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x55d3fdc53baf _PyEval_EvalCodeWithName
[2m[36m(pid=37680)[0m     @     0x55d3fdc54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37680)[0m     @     0x55d3fdbc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37680)[0m     @     0x55d3fdc53baf _PyEval_EvalCodeWithName
[2m[36m(pid=37680)[0m     @     0x55d3fdc54643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37680)[0m     @     0x55d3fdbc9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37693)[0m     @     0x5597ecbbc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x7f02e7ef44f5 at::Tensor::copy_()
[2m[36m(pid=37559)[0m     @     0x7f02edf9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37559)[0m     @     0x560ee7eedfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37559)[0m     @     0x560ee7e48b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x560ee7ed3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37559)[0m     @     0x560ee7ed4a20 method_vectorcall
[2m[36m(pid=37559)[0m     @     0x560ee7e48bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x560ee7ed3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37559)[0m     @     0x560ee7ed4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37559)[0m     @     0x560ee7e49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x560ee7ed3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37559)[0m     @     0x560ee7ed4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37559)[0m     @     0x560ee7e49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x560ee7ed3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37559)[0m     @     0x560ee7ed4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37559)[0m     @     0x560ee7e49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37559)[0m     @     0x560ee7ed3baf _PyEval_EvalCodeWithName
[2m[36m(pid=37559)[0m     @     0x560ee7ed4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37559)[0m     @     0x560ee7e49689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x7edecf1e04f5 at::Tensor::copy_()
[2m[36m(pid=37561)[0m     @     0x7eded528b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37561)[0m     @     0x564d495e4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37561)[0m     @     0x564d4953fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x564d495cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37561)[0m     @     0x564d495cba20 method_vectorcall
[2m[36m(pid=37561)[0m     @     0x564d4953fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x564d495cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37561)[0m     @     0x564d495cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37561)[0m     @     0x564d49540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x564d495cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37561)[0m     @     0x564d495cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37561)[0m     @     0x564d49540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x564d495cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37561)[0m     @     0x564d495cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37561)[0m     @     0x564d49540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37561)[0m     @     0x564d495cabaf _PyEval_EvalCodeWithName
[2m[36m(pid=37561)[0m     @     0x564d495cb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37561)[0m     @     0x564d49540689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37637)[0m     @     0x55873e8d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37637)[0m     @     0x55873e84b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x7fb6a59e54f5 at::Tensor::copy_()
[2m[36m(pid=37573)[0m     @     0x7fb6aba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37573)[0m     @     0x564778038fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37573)[0m     @     0x564777f93b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x56477801ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37573)[0m     @     0x56477801fa20 method_vectorcall
[2m[36m(pid=37573)[0m     @     0x564777f93bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x56477801ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37573)[0m     @     0x56477801f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37573)[0m     @     0x564777f94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x56477801ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37573)[0m     @     0x56477801f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37573)[0m     @     0x564777f94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x56477801ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37573)[0m     @     0x56477801f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37573)[0m     @     0x564777f94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37573)[0m     @     0x56477801ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37573)[0m     @     0x56477801f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37573)[0m     @     0x564777f94689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x7f84caac8a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=37627)[0m     @     0x7f84caac6388 at::native::copy_impl()
[2m[36m(pid=37627)[0m     @     0x7f84caac85a4 at::native::copy_()
[2m[36m(pid=37627)[0m     @     0x7f84cb1b34f5 at::Tensor::copy_()
[2m[36m(pid=37622)[0m     @     0x7f1e843e64f5 at::Tensor::copy_()
[2m[36m(pid=37622)[0m     @     0x7f1e8a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37622)[0m     @     0x5622afdf8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37622)[0m     @     0x5622afd53b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x5622afddebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37622)[0m     @     0x5622afddfa20 method_vectorcall
[2m[36m(pid=37622)[0m     @     0x5622afd53bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x5622afddebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37622)[0m     @     0x5622afddf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37622)[0m     @     0x5622afd54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x5622afddebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37622)[0m     @     0x5622afddf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37622)[0m     @     0x5622afd54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x5622afddebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37622)[0m     @     0x5622afddf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37622)[0m     @     0x5622afd54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37622)[0m     @     0x5622afddebaf _PyEval_EvalCodeWithName
[2m[36m(pid=37622)[0m     @     0x5622afddf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37622)[0m     @     0x5622afd54689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x7f1932ce54f5 at::Tensor::copy_()
[2m[36m(pid=37569)[0m     @     0x7f1938d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37569)[0m     @     0x55e8244c0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37569)[0m     @     0x55e82441bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x55e8244a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37569)[0m     @     0x55e8244a7a20 method_vectorcall
[2m[36m(pid=37569)[0m     @     0x55e82441bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x55e8244a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37569)[0m     @     0x55e8244a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37569)[0m     @     0x55e82441c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x55e8244a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37569)[0m     @     0x55e8244a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37569)[0m     @     0x55e82441c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x55e8244a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37569)[0m     @     0x55e8244a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37569)[0m     @     0x55e82441c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37569)[0m     @     0x55e8244a6baf _PyEval_EvalCodeWithName
[2m[36m(pid=37569)[0m     @     0x55e8244a7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37569)[0m     @     0x55e82441c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x7f306b26f4f5 at::Tensor::copy_()
[2m[36m(pid=37633)[0m     @     0x7f306d7428de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37633)[0m     @     0x7f306b26f4f5 at::Tensor::copy_()
[2m[36m(pid=37633)[0m     @     0x7f307131a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37633)[0m     @     0x55cc0d6a1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37633)[0m     @     0x55cc0d5fcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x55cc0d687baf _PyEval_EvalCodeWithName
[2m[36m(pid=37633)[0m     @     0x55cc0d688a20 method_vectorcall
[2m[36m(pid=37633)[0m     @     0x55cc0d5fcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x55cc0d687baf _PyEval_EvalCodeWithName
[2m[36m(pid=37633)[0m     @     0x55cc0d688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37633)[0m     @     0x55cc0d5fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x55cc0d687baf _PyEval_EvalCodeWithName
[2m[36m(pid=37633)[0m     @     0x55cc0d688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37633)[0m     @     0x55cc0d5fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37633)[0m     @     0x55cc0d687baf _PyEval_EvalCodeWithName
[2m[36m(pid=37633)[0m     @     0x55cc0d688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37633)[0m     @     0x55cc0d5fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x55f36f1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37551)[0m     @     0x55f36f1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37551)[0m     @     0x55f36f172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x55f36f1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37551)[0m     @     0x55f36f1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37551)[0m     @     0x55f36f172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x55f36f1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37551)[0m     @     0x55f36f1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37551)[0m     @     0x55f36f172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37551)[0m     @     0x55f36f1fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37551)[0m     @     0x55f36f1fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37551)[0m     @     0x55f36f172689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x7faa8d94c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37639)[0m     @     0x55be201aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37639)[0m     @     0x55be20109b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x55be20194baf _PyEval_EvalCodeWithName
[2m[36m(pid=37639)[0m     @     0x55be20195a20 method_vectorcall
[2m[36m(pid=37639)[0m     @     0x55be20109bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x55be20194baf _PyEval_EvalCodeWithName
[2m[36m(pid=37639)[0m     @     0x55be20195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37639)[0m     @     0x55be2010a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x55be20194baf _PyEval_EvalCodeWithName
[2m[36m(pid=37639)[0m     @     0x55be20195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37639)[0m     @     0x55be2010a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x55be20194baf _PyEval_EvalCodeWithName
[2m[36m(pid=37639)[0m     @     0x55be20195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37639)[0m     @     0x55be2010a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37639)[0m     @     0x55be20194baf _PyEval_EvalCodeWithName
[2m[36m(pid=37639)[0m     @     0x55be20195643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37639)[0m     @     0x55be2010a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x7edfe60ba4f5 at::Tensor::copy_()
[2m[36m(pid=37621)[0m     @     0x7edfe858d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37617)[0m     @     0x55a30e9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x55a30ea6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37617)[0m     @     0x55a30ea6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37617)[0m     @     0x55a30e9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x55a30ea6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37617)[0m     @     0x55a30ea6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37617)[0m     @     0x55a30e9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37617)[0m     @     0x55a30ea6cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37617)[0m     @     0x55a30ea6d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37617)[0m     @     0x55a30e9e2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37620)[0m     @     0x5573fa89fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37620)[0m     @     0x5573fa8a0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37620)[0m     @     0x5573fa815689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074fe2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37611)[0m     @     0x56074feb8baf _PyEval_EvalCodeWithName
[2m[36m(pid=37611)[0m     @     0x56074feb9643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37611)[0m     @     0x56074fe2e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x7f84cd6868de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=37633)[0m     @     0x55cc0d687baf _PyEval_EvalCodeWithName
[2m[36m(pid=37633)[0m     @     0x55cc0d688643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37633)[0m     @     0x55cc0d5fd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x7edfe60ba4f5 at::Tensor::copy_()
[2m[36m(pid=37621)[0m     @     0x7edfec16579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37621)[0m     @     0x55d191422fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37621)[0m     @     0x55d19137db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x55d191408baf _PyEval_EvalCodeWithName
[2m[36m(pid=37621)[0m     @     0x55d191409a20 method_vectorcall
[2m[36m(pid=37621)[0m     @     0x55d19137dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x55d191408baf _PyEval_EvalCodeWithName
[2m[36m(pid=37621)[0m     @     0x55d191409643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37621)[0m     @     0x55d19137e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x55d191408baf _PyEval_EvalCodeWithName
[2m[36m(pid=37621)[0m     @     0x55d191409643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37621)[0m     @     0x55d19137e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x55d191408baf _PyEval_EvalCodeWithName
[2m[36m(pid=37621)[0m     @     0x55d191409643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37621)[0m     @     0x55d19137e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37621)[0m     @     0x55d191408baf _PyEval_EvalCodeWithName
[2m[36m(pid=37621)[0m     @     0x55d191409643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37621)[0m     @     0x55d19137e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x7f84cb1b34f5 at::Tensor::copy_()
[2m[36m(pid=37627)[0m     @     0x7f84d125e79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=37627)[0m     @     0x5610d93e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=37627)[0m     @     0x5610d9342b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x5610d93cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37627)[0m     @     0x5610d93cea20 method_vectorcall
[2m[36m(pid=37627)[0m     @     0x5610d9342bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x5610d93cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37627)[0m     @     0x5610d93ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37627)[0m     @     0x5610d9343689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x5610d93cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37627)[0m     @     0x5610d93ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37627)[0m     @     0x5610d9343689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x5610d93cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37627)[0m     @     0x5610d93ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37627)[0m     @     0x5610d9343689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=37627)[0m     @     0x5610d93cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=37627)[0m     @     0x5610d93ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=37627)[0m     @     0x5610d9343689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:07:18,345	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff8168b55d01000000.
2020-11-05 10:07:18,347	ERROR trial_runner.py:567 -- Trial PPO_jss_env_ab943_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=37688, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 23.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab943_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ab943_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ab943_00000_0_2020-11-05_10-07-11/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+
[2m[36m(pid=37688)[0m E1105 10:07:18.339879 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=137dbd5547ea6deabdff035801000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=37688)[0m E1105 10:07:18.340052 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=3f75a43fb9f70f24bdff035801000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=37688)[0m E1105 10:07:18.340174 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=726b8519c6d92b8e8168b55d01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=37688)[0m E1105 10:07:18.340237 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=e8fef079b20e071c8168b55d01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[33m(pid=raylet)[0m E1105 10:07:18.339663 37508 37508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
[2m[33m(pid=raylet)[0m E1105 10:07:18.348565 37508 37508 node_manager.cc:3307] Failed to send get core worker stats request: IOError: 14: Connection reset by peer
2020-11-05 10:07:18,372	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffbdff035801000000.
2020-11-05 10:07:18,373	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff4e242e9f01000000.

== Status ==
Memory usage on this node: 23.3/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/554.15 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ab943_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ab943_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ab943_00000_0_2020-11-05_10-07-11/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_ab943_00000])
[2m[36m(pid=37688)[0m E1105 10:07:18.355484 37688 38786 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=575b3faf45c7d0bd8168b55d01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=8168b55d01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=37688)[0m E1105 10:07:18.358621 37688 38786 task_manager.cc:323] Task failed: IOError: 14: failed to connect to all addresses: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=150a9d56b40e3700bdff035801000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=bdff035801000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
[2m[36m(pid=37688)[0m E1105 10:07:18.368407 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=bf6cd9795b8b23124e242e9f01000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=37688)[0m E1105 10:07:18.368507 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=c5da4173a1c517cf4e242e9f01000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=37688)[0m E1105 10:07:18.368592 37688 38786 task_manager.cc:323] Task failed: IOError: 14: Connection reset by peer: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=626c71df3976eafd4e242e9f01000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=4e242e9f01000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
