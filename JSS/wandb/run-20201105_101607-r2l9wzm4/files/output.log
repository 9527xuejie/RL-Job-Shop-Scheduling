2020-11-05 10:16:09,648	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 15.5/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ed521_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=435)[0m 2020-11-05 10:16:12,468	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=447)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=447)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=447)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=434)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=434)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=434)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=434)[0m PC: @                0x0 (unknown)
[2m[36m(pid=453)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=453)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=453)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=453)[0m PC: @                0x0 (unknown)
[2m[36m(pid=453)[0m *** SIGSEGV (@0x0) received by PID 453 (TID 0x7f6dbdfeb700) from PID 0; stack trace: ***
[2m[36m(pid=458)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=458)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=458)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=419)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=419)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=419)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=419)[0m PC: @                0x0 (unknown)
[2m[36m(pid=394)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=394)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=394)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=391)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=391)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=391)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=439)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=439)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=439)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=439)[0m PC: @                0x0 (unknown)
[2m[36m(pid=439)[0m *** SIGSEGV (@0x0) received by PID 439 (TID 0x7ff01519b700) from PID 0; stack trace: ***
[2m[36m(pid=400)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=400)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=400)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=400)[0m PC: @                0x0 (unknown)
[2m[36m(pid=400)[0m *** SIGSEGV (@0x0) received by PID 400 (TID 0x7f4dc274f700) from PID 0; stack trace: ***
[2m[36m(pid=445)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=445)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=445)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=445)[0m PC: @                0x0 (unknown)
[2m[36m(pid=445)[0m *** SIGSEGV (@0x0) received by PID 445 (TID 0x7f8504ec4700) from PID 0; stack trace: ***
[2m[36m(pid=388)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=388)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=388)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=388)[0m PC: @                0x0 (unknown)
[2m[36m(pid=430)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=430)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=430)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=311)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=311)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=311)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=332)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=332)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=332)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=395)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=395)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=395)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=443)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=443)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=443)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=432)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=432)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=390)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=390)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=390)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=337)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=337)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=337)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=385)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=385)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=385)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=377)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=377)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=377)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=377)[0m PC: @                0x0 (unknown)
[2m[36m(pid=377)[0m *** SIGSEGV (@0x0) received by PID 377 (TID 0x7f8997a0f700) from PID 0; stack trace: ***
[2m[36m(pid=441)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=441)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=441)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=393)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=393)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=393)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=382)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=382)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=382)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=415)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=415)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=415)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=415)[0m PC: @                0x0 (unknown)
[2m[36m(pid=415)[0m *** SIGSEGV (@0x0) received by PID 415 (TID 0x7fb31c1e4700) from PID 0; stack trace: ***
[2m[36m(pid=409)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=409)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=409)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=429)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=429)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=429)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=429)[0m PC: @                0x0 (unknown)
[2m[36m(pid=429)[0m *** SIGSEGV (@0x0) received by PID 429 (TID 0x7f5733465700) from PID 0; stack trace: ***
[2m[36m(pid=429)[0m     @     0x7f573303e390 (unknown)
[2m[36m(pid=313)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=313)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=313)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=374)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=374)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=374)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=325)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=325)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=325)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=444)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=444)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=444)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=444)[0m PC: @                0x0 (unknown)
[2m[36m(pid=444)[0m *** SIGSEGV (@0x0) received by PID 444 (TID 0x7f3611802700) from PID 0; stack trace: ***
[2m[36m(pid=412)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=412)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=412)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=412)[0m PC: @                0x0 (unknown)
[2m[36m(pid=412)[0m *** SIGSEGV (@0x0) received by PID 412 (TID 0x7f14cef42700) from PID 0; stack trace: ***
[2m[36m(pid=428)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=428)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=428)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=428)[0m PC: @                0x0 (unknown)
[2m[36m(pid=428)[0m *** SIGSEGV (@0x0) received by PID 428 (TID 0x7ff5ea8f9700) from PID 0; stack trace: ***
[2m[36m(pid=324)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=324)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=324)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=324)[0m PC: @                0x0 (unknown)
[2m[36m(pid=324)[0m *** SIGSEGV (@0x0) received by PID 324 (TID 0x7fac78ace700) from PID 0; stack trace: ***
[2m[36m(pid=330)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=330)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=330)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=330)[0m PC: @                0x0 (unknown)
[2m[36m(pid=330)[0m *** SIGSEGV (@0x0) received by PID 330 (TID 0x7ff1415c7700) from PID 0; stack trace: ***
[2m[36m(pid=330)[0m     @     0x7ff1411a0390 (unknown)
[2m[36m(pid=308)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=308)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=308)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=308)[0m PC: @                0x0 (unknown)
[2m[36m(pid=308)[0m *** SIGSEGV (@0x0) received by PID 308 (TID 0x7efc290a6700) from PID 0; stack trace: ***
[2m[36m(pid=447)[0m PC: @                0x0 (unknown)
[2m[36m(pid=447)[0m *** SIGSEGV (@0x0) received by PID 447 (TID 0x7fed01147700) from PID 0; stack trace: ***
[2m[36m(pid=447)[0m     @     0x7fed00d20390 (unknown)
[2m[36m(pid=447)[0m     @     0x7fbe00c1ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=447)[0m     @     0x7fbe0034a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=434)[0m *** SIGSEGV (@0x0) received by PID 434 (TID 0x7f850a17f700) from PID 0; stack trace: ***
[2m[36m(pid=434)[0m     @     0x7f8509d58390 (unknown)
[2m[36m(pid=434)[0m     @     0x7f5609ceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=434)[0m     @     0x7f560941a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=453)[0m     @     0x7f6dbdbc4390 (unknown)
[2m[36m(pid=453)[0m     @     0x7f3ebd907f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=453)[0m     @     0x7f3ebd0327db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=453)[0m     @     0x7f3ebd0358f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=458)[0m PC: @                0x0 (unknown)
[2m[36m(pid=458)[0m *** SIGSEGV (@0x0) received by PID 458 (TID 0x7fdf1ee5a700) from PID 0; stack trace: ***
[2m[36m(pid=458)[0m     @     0x7fdf1ea33390 (unknown)
[2m[36m(pid=458)[0m     @     0x7fb01e601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=458)[0m     @     0x7fb01dd2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=419)[0m *** SIGSEGV (@0x0) received by PID 419 (TID 0x7f8eea114700) from PID 0; stack trace: ***
[2m[36m(pid=419)[0m     @     0x7f8ee9ced390 (unknown)
[2m[36m(pid=419)[0m     @     0x7f5fe9c0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=419)[0m     @     0x7f5fe93387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=394)[0m PC: @                0x0 (unknown)
[2m[36m(pid=394)[0m *** SIGSEGV (@0x0) received by PID 394 (TID 0x7fa9adc40700) from PID 0; stack trace: ***
[2m[36m(pid=394)[0m     @     0x7fa9ad819390 (unknown)
[2m[36m(pid=394)[0m     @     0x7f7aad6f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=394)[0m     @     0x7f7aace1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=391)[0m PC: @                0x0 (unknown)
[2m[36m(pid=391)[0m *** SIGSEGV (@0x0) received by PID 391 (TID 0x7f4e2b4af700) from PID 0; stack trace: ***
[2m[36m(pid=391)[0m     @     0x7f4e2b088390 (unknown)
[2m[36m(pid=391)[0m     @     0x7f1f2b041f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=391)[0m     @     0x7f1f2a76c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=439)[0m     @     0x7ff014d74390 (unknown)
[2m[36m(pid=439)[0m     @     0x7fc114c74f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=439)[0m     @     0x7fc11439f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=439)[0m     @     0x7fc1143a28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=400)[0m     @     0x7f4dc2328390 (unknown)
[2m[36m(pid=400)[0m     @     0x7f1ec22b9f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=400)[0m     @     0x7f1ec19e47db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=445)[0m     @     0x7f8504a9d390 (unknown)
[2m[36m(pid=445)[0m     @     0x7f5604a36f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=445)[0m     @     0x7f56041617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=445)[0m     @     0x7f56041648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=388)[0m *** SIGSEGV (@0x0) received by PID 388 (TID 0x7f6a189e0700) from PID 0; stack trace: ***
[2m[36m(pid=388)[0m     @     0x7f6a185b9390 (unknown)
[2m[36m(pid=388)[0m     @     0x7f3b18339f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=388)[0m     @     0x7f3b17a647db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=430)[0m PC: @                0x0 (unknown)
[2m[36m(pid=430)[0m *** SIGSEGV (@0x0) received by PID 430 (TID 0x7fae23c86700) from PID 0; stack trace: ***
[2m[36m(pid=430)[0m     @     0x7fae2385f390 (unknown)
[2m[36m(pid=430)[0m     @     0x7f7f2380ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=430)[0m     @     0x7f7f22f397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=430)[0m     @     0x7f7f22f3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=430)[0m     @     0x7f7f22f3cad3 at::TensorIterator::for_each()
[2m[36m(pid=311)[0m PC: @                0x0 (unknown)
[2m[36m(pid=311)[0m *** SIGSEGV (@0x0) received by PID 311 (TID 0x7f9157499700) from PID 0; stack trace: ***
[2m[36m(pid=311)[0m     @     0x7f9157072390 (unknown)
[2m[36m(pid=311)[0m     @     0x7f6257014f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=311)[0m     @     0x7f625673f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=311)[0m     @     0x7f62567428f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=347)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=347)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=347)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=347)[0m PC: @                0x0 (unknown)
[2m[36m(pid=347)[0m *** SIGSEGV (@0x0) received by PID 347 (TID 0x7f212be4c700) from PID 0; stack trace: ***
[2m[36m(pid=347)[0m     @     0x7f212ba25390 (unknown)
[2m[36m(pid=347)[0m     @     0x7ef22b8def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=347)[0m     @     0x7ef22b0097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=332)[0m PC: @                0x0 (unknown)
[2m[36m(pid=332)[0m *** SIGSEGV (@0x0) received by PID 332 (TID 0x7f2e93e85700) from PID 0; stack trace: ***
[2m[36m(pid=332)[0m     @     0x7f2e93a5e390 (unknown)
[2m[36m(pid=332)[0m     @     0x7eff938def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=332)[0m     @     0x7eff930097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=332)[0m     @     0x7eff9300c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=395)[0m PC: @                0x0 (unknown)
[2m[36m(pid=395)[0m *** SIGSEGV (@0x0) received by PID 395 (TID 0x7f731760a700) from PID 0; stack trace: ***
[2m[36m(pid=395)[0m     @     0x7f73171e3390 (unknown)
[2m[36m(pid=395)[0m     @     0x7f4416c15f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=395)[0m     @     0x7f44163407db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=395)[0m     @     0x7f44163438f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=443)[0m PC: @                0x0 (unknown)
[2m[36m(pid=443)[0m *** SIGSEGV (@0x0) received by PID 443 (TID 0x7f5be0699700) from PID 0; stack trace: ***
[2m[36m(pid=443)[0m     @     0x7f5be0272390 (unknown)
[2m[36m(pid=443)[0m     @     0x7f2ce00cdf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=443)[0m     @     0x7f2cdf7f87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=432)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=432)[0m PC: @                0x0 (unknown)
[2m[36m(pid=432)[0m *** SIGSEGV (@0x0) received by PID 432 (TID 0x7f1faaa46700) from PID 0; stack trace: ***
[2m[36m(pid=432)[0m     @     0x7f1faa61f390 (unknown)
[2m[36m(pid=432)[0m     @     0x7ef0aa5a4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=432)[0m     @     0x7ef0a9ccf7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=432)[0m     @     0x7ef0a9cd28f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=390)[0m PC: @                0x0 (unknown)
[2m[36m(pid=390)[0m *** SIGSEGV (@0x0) received by PID 390 (TID 0x7f5dfd865700) from PID 0; stack trace: ***
[2m[36m(pid=390)[0m     @     0x7f5dfd43e390 (unknown)
[2m[36m(pid=390)[0m     @     0x7f2efd3ccf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=390)[0m     @     0x7f2efcaf77db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=390)[0m     @     0x7f2efcafa8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=390)[0m     @     0x7f2efcafaad3 at::TensorIterator::for_each()
[2m[36m(pid=337)[0m PC: @                0x0 (unknown)
[2m[36m(pid=337)[0m *** SIGSEGV (@0x0) received by PID 337 (TID 0x7fe93c80d700) from PID 0; stack trace: ***
[2m[36m(pid=337)[0m     @     0x7fe93c3e6390 (unknown)
[2m[36m(pid=337)[0m     @     0x7fba3c333f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=337)[0m     @     0x7fba3ba5e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=337)[0m     @     0x7fba3ba618f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=385)[0m PC: @                0x0 (unknown)
[2m[36m(pid=385)[0m *** SIGSEGV (@0x0) received by PID 385 (TID 0x7f87ee14b700) from PID 0; stack trace: ***
[2m[36m(pid=385)[0m     @     0x7f87edd24390 (unknown)
[2m[36m(pid=385)[0m     @     0x7f58edc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=385)[0m     @     0x7f58ed3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=385)[0m     @     0x7f58ed33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=377)[0m     @     0x7f89975e8390 (unknown)
[2m[36m(pid=377)[0m     @     0x7f5a9758df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=377)[0m     @     0x7f5a96cb87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=377)[0m     @     0x7f5a96cbb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=377)[0m     @     0x7f5a96cbbad3 at::TensorIterator::for_each()
[2m[36m(pid=441)[0m PC: @                0x0 (unknown)
[2m[36m(pid=441)[0m *** SIGSEGV (@0x0) received by PID 441 (TID 0x7f3ab012b700) from PID 0; stack trace: ***
[2m[36m(pid=441)[0m     @     0x7f3aafd04390 (unknown)
[2m[36m(pid=441)[0m     @     0x7f0bafbf7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=441)[0m     @     0x7f0baf3227db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=441)[0m     @     0x7f0baf3258f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=393)[0m PC: @                0x0 (unknown)
[2m[36m(pid=393)[0m *** SIGSEGV (@0x0) received by PID 393 (TID 0x7f4a42f04700) from PID 0; stack trace: ***
[2m[36m(pid=393)[0m     @     0x7f4a42add390 (unknown)
[2m[36m(pid=393)[0m     @     0x7f1b42a21f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=393)[0m     @     0x7f1b4214c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=393)[0m     @     0x7f1b4214f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=393)[0m     @     0x7f1b4214fad3 at::TensorIterator::for_each()
[2m[36m(pid=382)[0m PC: @                0x0 (unknown)
[2m[36m(pid=382)[0m *** SIGSEGV (@0x0) received by PID 382 (TID 0x7f2d9e9b5700) from PID 0; stack trace: ***
[2m[36m(pid=382)[0m     @     0x7f2d9e58e390 (unknown)
[2m[36m(pid=382)[0m     @     0x7efe9e537f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=382)[0m     @     0x7efe9dc627db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=382)[0m     @     0x7efe9dc658f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=382)[0m     @     0x7efe9dc65ad3 at::TensorIterator::for_each()
[2m[36m(pid=415)[0m     @     0x7fb31bdbd390 (unknown)
[2m[36m(pid=415)[0m     @     0x7f841bd2cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=415)[0m     @     0x7f841b4577db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=415)[0m     @     0x7f841b45a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=415)[0m     @     0x7f841b45aad3 at::TensorIterator::for_each()
[2m[36m(pid=409)[0m PC: @                0x0 (unknown)
[2m[36m(pid=409)[0m *** SIGSEGV (@0x0) received by PID 409 (TID 0x7f82f90c3700) from PID 0; stack trace: ***
[2m[36m(pid=409)[0m     @     0x7f82f8c9c390 (unknown)
[2m[36m(pid=409)[0m     @     0x7f53f8a8bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=409)[0m     @     0x7f53f81b67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=409)[0m     @     0x7f53f81b98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=429)[0m     @     0x7f2832f13f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=429)[0m     @     0x7f283263e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=429)[0m     @     0x7f28326418f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=429)[0m     @     0x7f2832641ad3 at::TensorIterator::for_each()
[2m[36m(pid=429)[0m     @     0x7f2832641d91 at::TensorIterator::for_each()
[2m[36m(pid=313)[0m PC: @                0x0 (unknown)
[2m[36m(pid=313)[0m *** SIGSEGV (@0x0) received by PID 313 (TID 0x7f51a6ceb700) from PID 0; stack trace: ***
[2m[36m(pid=313)[0m     @     0x7f51a68c4390 (unknown)
[2m[36m(pid=313)[0m     @     0x7f22a670af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=313)[0m     @     0x7f22a5e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=313)[0m     @     0x7f22a5e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=374)[0m PC: @                0x0 (unknown)
[2m[36m(pid=374)[0m *** SIGSEGV (@0x0) received by PID 374 (TID 0x7fcc5e303700) from PID 0; stack trace: ***
[2m[36m(pid=374)[0m     @     0x7fcc5dedc390 (unknown)
[2m[36m(pid=374)[0m     @     0x7f9d5db19f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=374)[0m     @     0x7f9d5d2447db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=374)[0m     @     0x7f9d5d2478f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=325)[0m PC: @                0x0 (unknown)
[2m[36m(pid=325)[0m *** SIGSEGV (@0x0) received by PID 325 (TID 0x7fcf480cb700) from PID 0; stack trace: ***
[2m[36m(pid=325)[0m     @     0x7fcf47ca4390 (unknown)
[2m[36m(pid=325)[0m     @     0x7fa047bc7f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=325)[0m     @     0x7fa0472f27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=325)[0m     @     0x7fa0472f58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=325)[0m     @     0x7fa0472f5ad3 at::TensorIterator::for_each()
[2m[36m(pid=444)[0m     @     0x7f36113db390 (unknown)
[2m[36m(pid=444)[0m     @     0x7f071136cf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=444)[0m     @     0x7f0710a977db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=444)[0m     @     0x7f0710a9a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=444)[0m     @     0x7f0710a9aad3 at::TensorIterator::for_each()
[2m[36m(pid=412)[0m     @     0x7f14ceb1b390 (unknown)
[2m[36m(pid=412)[0m     @     0x7ee5ce97ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=412)[0m     @     0x7ee5ce0a97db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=412)[0m     @     0x7ee5ce0ac8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=412)[0m     @     0x7ee5ce0acad3 at::TensorIterator::for_each()
[2m[36m(pid=428)[0m     @     0x7ff5ea4d2390 (unknown)
[2m[36m(pid=428)[0m     @     0x7fc6ea467f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=428)[0m     @     0x7fc6e9b927db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=428)[0m     @     0x7fc6e9b958f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=428)[0m     @     0x7fc6e9b95ad3 at::TensorIterator::for_each()
[2m[36m(pid=324)[0m     @     0x7fac786a7390 (unknown)
[2m[36m(pid=324)[0m     @     0x7f7d7865ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=324)[0m     @     0x7f7d77d8a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=324)[0m     @     0x7f7d77d8d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=381)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=381)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=381)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=330)[0m     @     0x7fc2410b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=330)[0m     @     0x7fc2407e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=330)[0m     @     0x7fc2407e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=330)[0m     @     0x7fc2407e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=308)[0m     @     0x7efc28c7f390 (unknown)
[2m[36m(pid=308)[0m     @     0x7ecd28b42f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=308)[0m     @     0x7ecd2826d7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=308)[0m     @     0x7ecd282708f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=308)[0m     @     0x7ecd28270ad3 at::TensorIterator::for_each()
[2m[36m(pid=310)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=310)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=310)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=447)[0m     @     0x7fbe0034d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=447)[0m     @     0x7fbe0034dad3 at::TensorIterator::for_each()
[2m[36m(pid=447)[0m     @     0x7fbe0034dd91 at::TensorIterator::for_each()
[2m[36m(pid=447)[0m     @     0x7fbe00c30b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=447)[0m     @     0x7fbe00c53c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=434)[0m     @     0x7f560941d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=434)[0m     @     0x7f560941dad3 at::TensorIterator::for_each()
[2m[36m(pid=434)[0m     @     0x7f560941dd91 at::TensorIterator::for_each()
[2m[36m(pid=434)[0m     @     0x7f5609d00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=434)[0m     @     0x7f5609d23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=453)[0m     @     0x7f3ebd035ad3 at::TensorIterator::for_each()
[2m[36m(pid=453)[0m     @     0x7f3ebd035d91 at::TensorIterator::for_each()
[2m[36m(pid=453)[0m     @     0x7f3ebd918b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=453)[0m     @     0x7f3ebd93bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=453)[0m     @     0x7f3ebcddda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=458)[0m     @     0x7fb01dd2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=458)[0m     @     0x7fb01dd2fad3 at::TensorIterator::for_each()
[2m[36m(pid=458)[0m     @     0x7fb01dd2fd91 at::TensorIterator::for_each()
[2m[36m(pid=458)[0m     @     0x7fb01e612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=458)[0m     @     0x7fb01e635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=419)[0m     @     0x7f5fe933b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=419)[0m     @     0x7f5fe933bad3 at::TensorIterator::for_each()
[2m[36m(pid=419)[0m     @     0x7f5fe933bd91 at::TensorIterator::for_each()
[2m[36m(pid=375)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=375)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=375)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=375)[0m PC: @                0x0 (unknown)
[2m[36m(pid=375)[0m *** SIGSEGV (@0x0) received by PID 375 (TID 0x7f89ef00a700) from PID 0; stack trace: ***
[2m[36m(pid=315)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=315)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=315)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=329)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=329)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=329)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=346)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=346)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=346)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=346)[0m PC: @                0x0 (unknown)
[2m[36m(pid=346)[0m *** SIGSEGV (@0x0) received by PID 346 (TID 0x7f09be136700) from PID 0; stack trace: ***
[2m[36m(pid=394)[0m     @     0x7f7aace228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=394)[0m     @     0x7f7aace22ad3 at::TensorIterator::for_each()
[2m[36m(pid=394)[0m     @     0x7f7aace22d91 at::TensorIterator::for_each()
[2m[36m(pid=394)[0m     @     0x7f7aad705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=394)[0m     @     0x7f7aad728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=391)[0m     @     0x7f1f2a76f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=391)[0m     @     0x7f1f2a76fad3 at::TensorIterator::for_each()
[2m[36m(pid=391)[0m     @     0x7f1f2a76fd91 at::TensorIterator::for_each()
[2m[36m(pid=391)[0m     @     0x7f1f2b052b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=391)[0m     @     0x7f1f2b075c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=439)[0m     @     0x7fc1143a2ad3 at::TensorIterator::for_each()
[2m[36m(pid=439)[0m     @     0x7fc1143a2d91 at::TensorIterator::for_each()
[2m[36m(pid=439)[0m     @     0x7fc114c85b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=439)[0m     @     0x7fc114ca8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=439)[0m     @     0x7fc11414aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=400)[0m     @     0x7f1ec19e78f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=400)[0m     @     0x7f1ec19e7ad3 at::TensorIterator::for_each()
[2m[36m(pid=400)[0m     @     0x7f1ec19e7d91 at::TensorIterator::for_each()
[2m[36m(pid=400)[0m     @     0x7f1ec22cab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=400)[0m     @     0x7f1ec22edc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=445)[0m     @     0x7f5604164ad3 at::TensorIterator::for_each()
[2m[36m(pid=445)[0m     @     0x7f5604164d91 at::TensorIterator::for_each()
[2m[36m(pid=445)[0m     @     0x7f5604a47b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=445)[0m     @     0x7f5604a6ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=445)[0m     @     0x7f5603f0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=445)[0m     @     0x7f5603f0a388 at::native::copy_impl()
[2m[36m(pid=388)[0m     @     0x7f3b17a678f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=388)[0m     @     0x7f3b17a67ad3 at::TensorIterator::for_each()
[2m[36m(pid=388)[0m     @     0x7f3b17a67d91 at::TensorIterator::for_each()
[2m[36m(pid=388)[0m     @     0x7f3b1834ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=388)[0m     @     0x7f3b1836dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=316)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=316)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=316)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=316)[0m PC: @                0x0 (unknown)
[2m[36m(pid=430)[0m     @     0x7f7f22f3cd91 at::TensorIterator::for_each()
[2m[36m(pid=430)[0m     @     0x7f7f2381fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=430)[0m     @     0x7f7f23842c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=311)[0m     @     0x7f6256742ad3 at::TensorIterator::for_each()
[2m[36m(pid=347)[0m     @     0x7ef22b00c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=347)[0m     @     0x7ef22b00cad3 at::TensorIterator::for_each()
[2m[36m(pid=332)[0m     @     0x7eff9300cad3 at::TensorIterator::for_each()
[2m[36m(pid=332)[0m     @     0x7eff9300cd91 at::TensorIterator::for_each()
[2m[36m(pid=332)[0m     @     0x7eff938efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=395)[0m     @     0x7f4416343ad3 at::TensorIterator::for_each()
[2m[36m(pid=443)[0m     @     0x7f2cdf7fb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=443)[0m     @     0x7f2cdf7fbad3 at::TensorIterator::for_each()
[2m[36m(pid=432)[0m     @     0x7ef0a9cd2ad3 at::TensorIterator::for_each()
[2m[36m(pid=309)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=309)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=309)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=309)[0m PC: @                0x0 (unknown)
[2m[36m(pid=309)[0m *** SIGSEGV (@0x0) received by PID 309 (TID 0x7f2b8a74a700) from PID 0; stack trace: ***
[2m[36m(pid=318)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=318)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=318)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=318)[0m PC: @                0x0 (unknown)
[2m[36m(pid=318)[0m *** SIGSEGV (@0x0) received by PID 318 (TID 0x7f5be530b700) from PID 0; stack trace: ***
[2m[36m(pid=319)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=319)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=319)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=319)[0m PC: @                0x0 (unknown)
[2m[36m(pid=319)[0m *** SIGSEGV (@0x0) received by PID 319 (TID 0x7f1e6ac46700) from PID 0; stack trace: ***
[2m[36m(pid=319)[0m     @     0x7f1e6a81f390 (unknown)
[2m[36m(pid=390)[0m     @     0x7f2efcafad91 at::TensorIterator::for_each()
[2m[36m(pid=390)[0m     @     0x7f2efd3ddb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=390)[0m     @     0x7f2efd400c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=337)[0m     @     0x7fba3ba61ad3 at::TensorIterator::for_each()
[2m[36m(pid=337)[0m     @     0x7fba3ba61d91 at::TensorIterator::for_each()
[2m[36m(pid=385)[0m     @     0x7f58ed33bad3 at::TensorIterator::for_each()
[2m[36m(pid=385)[0m     @     0x7f58ed33bd91 at::TensorIterator::for_each()
[2m[36m(pid=326)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=326)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=326)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=326)[0m PC: @                0x0 (unknown)
[2m[36m(pid=326)[0m *** SIGSEGV (@0x0) received by PID 326 (TID 0x7f1908d09700) from PID 0; stack trace: ***
[2m[36m(pid=326)[0m     @     0x7f19088e2390 (unknown)
[2m[36m(pid=378)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=378)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=378)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=378)[0m PC: @                0x0 (unknown)
[2m[36m(pid=378)[0m *** SIGSEGV (@0x0) received by PID 378 (TID 0x7fd7456a3700) from PID 0; stack trace: ***
[2m[36m(pid=377)[0m     @     0x7f5a96cbbd91 at::TensorIterator::for_each()
[2m[36m(pid=377)[0m     @     0x7f5a9759eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=377)[0m     @     0x7f5a975c1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=377)[0m     @     0x7f5a96a63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=380)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=380)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=380)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=441)[0m     @     0x7f0baf325ad3 at::TensorIterator::for_each()
[2m[36m(pid=441)[0m     @     0x7f0baf325d91 at::TensorIterator::for_each()
[2m[36m(pid=441)[0m     @     0x7f0bafc08b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=446)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=446)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=446)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=446)[0m PC: @                0x0 (unknown)
[2m[36m(pid=446)[0m *** SIGSEGV (@0x0) received by PID 446 (TID 0x7f6aac9d5700) from PID 0; stack trace: ***
[2m[36m(pid=446)[0m     @     0x7f6aac5ae390 (unknown)
[2m[36m(pid=389)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=389)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=389)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=389)[0m PC: @                0x0 (unknown)
[2m[36m(pid=389)[0m *** SIGSEGV (@0x0) received by PID 389 (TID 0x7f4584742700) from PID 0; stack trace: ***
[2m[36m(pid=393)[0m     @     0x7f1b4214fd91 at::TensorIterator::for_each()
[2m[36m(pid=393)[0m     @     0x7f1b42a32b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=393)[0m     @     0x7f1b42a55c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=382)[0m     @     0x7efe9dc65d91 at::TensorIterator::for_each()
[2m[36m(pid=382)[0m     @     0x7efe9e548b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=382)[0m     @     0x7efe9e56bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=417)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=417)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=417)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=383)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=383)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=383)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=366)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=366)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=366)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=366)[0m PC: @                0x0 (unknown)
[2m[36m(pid=366)[0m *** SIGSEGV (@0x0) received by PID 366 (TID 0x7fa5fc2bb700) from PID 0; stack trace: ***
[2m[36m(pid=327)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=327)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=327)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=317)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=317)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=317)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=317)[0m PC: @                0x0 (unknown)
[2m[36m(pid=317)[0m *** SIGSEGV (@0x0) received by PID 317 (TID 0x7f23bd317700) from PID 0; stack trace: ***
[2m[36m(pid=317)[0m     @     0x7f23bcef0390 (unknown)
[2m[36m(pid=317)[0m     @     0x7ef4bc940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=415)[0m     @     0x7f841b45ad91 at::TensorIterator::for_each()
[2m[36m(pid=415)[0m     @     0x7f841bd3db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=415)[0m     @     0x7f841bd60c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=415)[0m     @     0x7f841b202a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=415)[0m     @     0x7f841b200388 at::native::copy_impl()
[2m[36m(pid=409)[0m     @     0x7f53f81b9ad3 at::TensorIterator::for_each()
[2m[36m(pid=409)[0m     @     0x7f53f81b9d91 at::TensorIterator::for_each()
[2m[36m(pid=409)[0m     @     0x7f53f8a9cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=409)[0m     @     0x7f53f8abfc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=429)[0m     @     0x7f2832f24b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=429)[0m     @     0x7f2832f47c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=429)[0m     @     0x7f28323e9a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=429)[0m     @     0x7f28323e7388 at::native::copy_impl()
[2m[36m(pid=429)[0m     @     0x7f28323e95a4 at::native::copy_()
[2m[36m(pid=313)[0m     @     0x7f22a5e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=313)[0m     @     0x7f22a5e38d91 at::TensorIterator::for_each()
[2m[36m(pid=313)[0m     @     0x7f22a671bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=392)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=392)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=392)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=392)[0m PC: @                0x0 (unknown)
[2m[36m(pid=392)[0m *** SIGSEGV (@0x0) received by PID 392 (TID 0x7f187e94d700) from PID 0; stack trace: ***
[2m[36m(pid=392)[0m     @     0x7f187e526390 (unknown)
[2m[36m(pid=392)[0m     @     0x7ee97e34bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=392)[0m     @     0x7ee97da767db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=374)[0m     @     0x7f9d5d247ad3 at::TensorIterator::for_each()
[2m[36m(pid=374)[0m     @     0x7f9d5d247d91 at::TensorIterator::for_each()
[2m[36m(pid=374)[0m     @     0x7f9d5db2ab22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=374)[0m     @     0x7f9d5db4dc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=325)[0m     @     0x7fa0472f5d91 at::TensorIterator::for_each()
[2m[36m(pid=325)[0m     @     0x7fa047bd8b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=325)[0m     @     0x7fa047bfbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=325)[0m     @     0x7fa04709da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=325)[0m     @     0x7fa04709b388 at::native::copy_impl()
[2m[36m(pid=444)[0m     @     0x7f0710a9ad91 at::TensorIterator::for_each()
[2m[36m(pid=444)[0m     @     0x7f071137db22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=444)[0m     @     0x7f07113a0c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=444)[0m     @     0x7f0710842a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=444)[0m     @     0x7f0710840388 at::native::copy_impl()
[2m[36m(pid=412)[0m     @     0x7ee5ce0acd91 at::TensorIterator::for_each()
[2m[36m(pid=412)[0m     @     0x7ee5ce98fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=412)[0m     @     0x7ee5ce9b2c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=412)[0m     @     0x7ee5cde54a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=398)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=398)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=398)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=398)[0m PC: @                0x0 (unknown)
[2m[36m(pid=398)[0m *** SIGSEGV (@0x0) received by PID 398 (TID 0x7f0804e74700) from PID 0; stack trace: ***
[2m[36m(pid=398)[0m     @     0x7f0804a4d390 (unknown)
[2m[36m(pid=398)[0m     @     0x7ed904825f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=398)[0m     @     0x7ed903f507db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=312)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=312)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=312)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=312)[0m PC: @                0x0 (unknown)
[2m[36m(pid=312)[0m *** SIGSEGV (@0x0) received by PID 312 (TID 0x7fca5359d700) from PID 0; stack trace: ***
[2m[36m(pid=312)[0m     @     0x7fca53176390 (unknown)
[2m[36m(pid=312)[0m     @     0x7f9b53124f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=312)[0m     @     0x7f9b5284f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=428)[0m     @     0x7fc6e9b95d91 at::TensorIterator::for_each()
[2m[36m(pid=428)[0m     @     0x7fc6ea478b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=428)[0m     @     0x7fc6ea49bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=428)[0m     @     0x7fc6e993da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=428)[0m     @     0x7fc6e993b388 at::native::copy_impl()
[2m[36m(pid=428)[0m     @     0x7fc6e993d5a4 at::native::copy_()
[2m[36m(pid=335)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=335)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=335)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=335)[0m PC: @                0x0 (unknown)
[2m[36m(pid=335)[0m *** SIGSEGV (@0x0) received by PID 335 (TID 0x7fa1f7d40700) from PID 0; stack trace: ***
[2m[36m(pid=335)[0m     @     0x7fa1f7919390 (unknown)
[2m[36m(pid=335)[0m     @     0x7f72f78b1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=335)[0m     @     0x7f72f6fdc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=335)[0m     @     0x7f72f6fdf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=321)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=321)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=321)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=321)[0m PC: @                0x0 (unknown)
[2m[36m(pid=321)[0m *** SIGSEGV (@0x0) received by PID 321 (TID 0x7f7b2ecca700) from PID 0; stack trace: ***
[2m[36m(pid=321)[0m     @     0x7f7b2e8a3390 (unknown)
[2m[36m(pid=321)[0m     @     0x7f4c2e70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=321)[0m     @     0x7f4c2de357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=379)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=379)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=379)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=379)[0m PC: @                0x0 (unknown)
[2m[36m(pid=379)[0m *** SIGSEGV (@0x0) received by PID 379 (TID 0x7f72fd676700) from PID 0; stack trace: ***
[2m[36m(pid=387)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=387)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=387)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=387)[0m PC: @                0x0 (unknown)
[2m[36m(pid=387)[0m *** SIGSEGV (@0x0) received by PID 387 (TID 0x7f13c4033700) from PID 0; stack trace: ***
[2m[36m(pid=387)[0m     @     0x7f13c3c0c390 (unknown)
[2m[36m(pid=387)[0m     @     0x7ee4c3af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=387)[0m     @     0x7ee4c32207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=384)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=384)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=384)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=384)[0m PC: @                0x0 (unknown)
[2m[36m(pid=384)[0m *** SIGSEGV (@0x0) received by PID 384 (TID 0x7f2b50a47700) from PID 0; stack trace: ***
[2m[36m(pid=384)[0m     @     0x7f2b50620390 (unknown)
[2m[36m(pid=384)[0m     @     0x7efc50563f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=384)[0m     @     0x7efc4fc8e7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=339)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=339)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=339)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=339)[0m PC: @                0x0 (unknown)
[2m[36m(pid=339)[0m *** SIGSEGV (@0x0) received by PID 339 (TID 0x7f8d88701700) from PID 0; stack trace: ***
[2m[36m(pid=339)[0m     @     0x7f8d882da390 (unknown)
[2m[36m(pid=368)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=368)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=368)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=368)[0m PC: @                0x0 (unknown)
[2m[36m(pid=368)[0m *** SIGSEGV (@0x0) received by PID 368 (TID 0x7efc86056700) from PID 0; stack trace: ***
[2m[36m(pid=372)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=372)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=372)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=372)[0m PC: @                0x0 (unknown)
[2m[36m(pid=372)[0m *** SIGSEGV (@0x0) received by PID 372 (TID 0x7f0c19b87700) from PID 0; stack trace: ***
[2m[36m(pid=324)[0m     @     0x7f7d77d8dad3 at::TensorIterator::for_each()
[2m[36m(pid=324)[0m     @     0x7f7d77d8dd91 at::TensorIterator::for_each()
[2m[36m(pid=324)[0m     @     0x7f7d78670b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=324)[0m     @     0x7f7d78693c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=324)[0m     @     0x7f7d77b35a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=324)[0m     @     0x7f7d77b33388 at::native::copy_impl()
[2m[36m(pid=322)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=322)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=322)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=322)[0m PC: @                0x0 (unknown)
[2m[36m(pid=322)[0m *** SIGSEGV (@0x0) received by PID 322 (TID 0x7fc25166e700) from PID 0; stack trace: ***
[2m[36m(pid=322)[0m     @     0x7fc251247390 (unknown)
[2m[36m(pid=322)[0m     @     0x7f93510b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=322)[0m     @     0x7f93507e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=322)[0m     @     0x7f93507e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=381)[0m PC: @                0x0 (unknown)
[2m[36m(pid=381)[0m *** SIGSEGV (@0x0) received by PID 381 (TID 0x7fa66cc5b700) from PID 0; stack trace: ***
[2m[36m(pid=381)[0m     @     0x7fa66c834390 (unknown)
[2m[36m(pid=381)[0m     @     0x7f776c70ef90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=381)[0m     @     0x7f776be397db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=330)[0m     @     0x7fc2407e3d91 at::TensorIterator::for_each()
[2m[36m(pid=330)[0m     @     0x7fc2410c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=330)[0m     @     0x7fc2410e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=330)[0m     @     0x7fc24058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=330)[0m     @     0x7fc240589388 at::native::copy_impl()
[2m[36m(pid=308)[0m     @     0x7ecd28270d91 at::TensorIterator::for_each()
[2m[36m(pid=308)[0m     @     0x7ecd28b53b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=308)[0m     @     0x7ecd28b76c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=308)[0m     @     0x7ecd28018a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=308)[0m     @     0x7ecd28016388 at::native::copy_impl()
[2m[36m(pid=320)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=320)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=320)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=320)[0m PC: @                0x0 (unknown)
[2m[36m(pid=320)[0m *** SIGSEGV (@0x0) received by PID 320 (TID 0x7f71de0b9700) from PID 0; stack trace: ***
[2m[36m(pid=320)[0m     @     0x7f71ddc92390 (unknown)
[2m[36m(pid=320)[0m     @     0x7f42ddc51f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=320)[0m     @     0x7f42dd37c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=328)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=328)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=328)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=328)[0m PC: @                0x0 (unknown)
[2m[36m(pid=328)[0m *** SIGSEGV (@0x0) received by PID 328 (TID 0x7fe0d7dc7700) from PID 0; stack trace: ***
[2m[36m(pid=328)[0m     @     0x7fe0d79a0390 (unknown)
[2m[36m(pid=328)[0m     @     0x7fb1d78def90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=397)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=397)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=397)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=397)[0m PC: @                0x0 (unknown)
[2m[36m(pid=397)[0m *** SIGSEGV (@0x0) received by PID 397 (TID 0x7fbf379c0700) from PID 0; stack trace: ***
[2m[36m(pid=397)[0m     @     0x7fbf37599390 (unknown)
[2m[36m(pid=310)[0m PC: @                0x0 (unknown)
[2m[36m(pid=310)[0m *** SIGSEGV (@0x0) received by PID 310 (TID 0x7fbee0f39700) from PID 0; stack trace: ***
[2m[36m(pid=310)[0m     @     0x7fbee0b12390 (unknown)
[2m[36m(pid=310)[0m     @     0x7f8fe0a8df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=310)[0m     @     0x7f8fe01b87db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=310)[0m     @     0x7f8fe01bb8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=407)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=407)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=407)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=407)[0m PC: @                0x0 (unknown)
[2m[36m(pid=407)[0m *** SIGSEGV (@0x0) received by PID 407 (TID 0x7f0a9d7cd700) from PID 0; stack trace: ***
[2m[36m(pid=407)[0m     @     0x7f0a9d3a6390 (unknown)
[2m[36m(pid=345)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=345)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=345)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=345)[0m PC: @                0x0 (unknown)
[2m[36m(pid=345)[0m *** SIGSEGV (@0x0) received by PID 345 (TID 0x7f6df8092700) from PID 0; stack trace: ***
[2m[36m(pid=426)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=426)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=426)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=426)[0m PC: @                0x0 (unknown)
[2m[36m(pid=426)[0m *** SIGSEGV (@0x0) received by PID 426 (TID 0x7f32dac72700) from PID 0; stack trace: ***
[2m[36m(pid=447)[0m     @     0x7fbe000f5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=447)[0m     @     0x7fbe000f3388 at::native::copy_impl()
[2m[36m(pid=447)[0m     @     0x7fbe000f55a4 at::native::copy_()
[2m[36m(pid=447)[0m     @     0x7fbe007e04f5 at::Tensor::copy_()
[2m[36m(pid=447)[0m     @     0x7fbe02cb38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=434)[0m     @     0x7f56091c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=434)[0m     @     0x7f56091c3388 at::native::copy_impl()
[2m[36m(pid=434)[0m     @     0x7f56091c55a4 at::native::copy_()
[2m[36m(pid=434)[0m     @     0x7f56098b04f5 at::Tensor::copy_()
[2m[36m(pid=434)[0m     @     0x7f560bd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=434)[0m     @     0x7f56098b04f5 at::Tensor::copy_()
[2m[36m(pid=453)[0m     @     0x7f3ebcddb388 at::native::copy_impl()
[2m[36m(pid=453)[0m     @     0x7f3ebcddd5a4 at::native::copy_()
[2m[36m(pid=453)[0m     @     0x7f3ebd4c84f5 at::Tensor::copy_()
[2m[36m(pid=453)[0m     @     0x7f3ebf99b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=453)[0m     @     0x7f3ebd4c84f5 at::Tensor::copy_()
[2m[36m(pid=453)[0m     @     0x7f3ec357379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=453)[0m     @     0x55a06de9ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=453)[0m     @     0x55a06ddfab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06de85baf _PyEval_EvalCodeWithName
[2m[36m(pid=453)[0m     @     0x55a06de86a20 method_vectorcall
[2m[36m(pid=458)[0m     @     0x7fb01dad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=458)[0m     @     0x7fb01dad5388 at::native::copy_impl()
[2m[36m(pid=458)[0m     @     0x7fb01dad75a4 at::native::copy_()
[2m[36m(pid=458)[0m     @     0x7fb01e1c24f5 at::Tensor::copy_()
[2m[36m(pid=458)[0m     @     0x7fb0206958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=458)[0m     @     0x7fb01e1c24f5 at::Tensor::copy_()
[2m[36m(pid=458)[0m     @     0x7fb02426d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=458)[0m     @     0x55a251805fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=458)[0m     @     0x55a251760b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a2517ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=458)[0m     @     0x55a2517eca20 method_vectorcall
[2m[36m(pid=458)[0m     @     0x55a251760bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a2517ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=458)[0m     @     0x55a2517ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=458)[0m     @     0x55a251761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a2517ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=458)[0m     @     0x55a2517ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=419)[0m     @     0x7f5fe9c1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=419)[0m     @     0x7f5fe9c41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=419)[0m     @     0x7f5fe90e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=419)[0m     @     0x7f5fe90e1388 at::native::copy_impl()
[2m[36m(pid=419)[0m     @     0x7f5fe90e35a4 at::native::copy_()
[2m[36m(pid=419)[0m     @     0x7f5fe97ce4f5 at::Tensor::copy_()
[2m[36m(pid=419)[0m     @     0x7f5febca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=375)[0m     @     0x7f89eebe3390 (unknown)
[2m[36m(pid=375)[0m     @     0x7f5aeeb6df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=375)[0m     @     0x7f5aee2987db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=375)[0m     @     0x7f5aee29b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=375)[0m     @     0x7f5aee29bad3 at::TensorIterator::for_each()
[2m[36m(pid=315)[0m PC: @                0x0 (unknown)
[2m[36m(pid=315)[0m *** SIGSEGV (@0x0) received by PID 315 (TID 0x7fae6a171700) from PID 0; stack trace: ***
[2m[36m(pid=315)[0m     @     0x7fae69d4a390 (unknown)
[2m[36m(pid=315)[0m     @     0x7f7f69ceff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=315)[0m     @     0x7f7f6941a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=315)[0m     @     0x7f7f6941d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=315)[0m     @     0x7f7f6941dad3 at::TensorIterator::for_each()
[2m[36m(pid=329)[0m PC: @                0x0 (unknown)
[2m[36m(pid=329)[0m *** SIGSEGV (@0x0) received by PID 329 (TID 0x7f518cfb4700) from PID 0; stack trace: ***
[2m[36m(pid=329)[0m     @     0x7f518cb8d390 (unknown)
[2m[36m(pid=329)[0m     @     0x7f228cb3bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=329)[0m     @     0x7f228c2667db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=329)[0m     @     0x7f228c2698f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=329)[0m     @     0x7f228c269ad3 at::TensorIterator::for_each()
[2m[36m(pid=346)[0m     @     0x7f09bdd0f390 (unknown)
[2m[36m(pid=346)[0m     @     0x7edabdc0df90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=346)[0m     @     0x7edabd3387db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=346)[0m     @     0x7edabd33b8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=346)[0m     @     0x7edabd33bad3 at::TensorIterator::for_each()
[2m[36m(pid=346)[0m     @     0x7edabd33bd91 at::TensorIterator::for_each()
[2m[36m(pid=394)[0m     @     0x7f7aacbcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=394)[0m     @     0x7f7aacbc8388 at::native::copy_impl()
[2m[36m(pid=394)[0m     @     0x7f7aacbca5a4 at::native::copy_()
[2m[36m(pid=394)[0m     @     0x7f7aad2b54f5 at::Tensor::copy_()
[2m[36m(pid=394)[0m     @     0x7f7aaf7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=391)[0m     @     0x7f1f2a517a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=391)[0m     @     0x7f1f2a515388 at::native::copy_impl()
[2m[36m(pid=391)[0m     @     0x7f1f2a5175a4 at::native::copy_()
[2m[36m(pid=391)[0m     @     0x7f1f2ac024f5 at::Tensor::copy_()
[2m[36m(pid=391)[0m     @     0x7f1f2d0d58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=391)[0m     @     0x7f1f2ac024f5 at::Tensor::copy_()
[2m[36m(pid=439)[0m     @     0x7fc114148388 at::native::copy_impl()
[2m[36m(pid=439)[0m     @     0x7fc11414a5a4 at::native::copy_()
[2m[36m(pid=439)[0m     @     0x7fc1148354f5 at::Tensor::copy_()
[2m[36m(pid=439)[0m     @     0x7fc116d088de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=439)[0m     @     0x7fc1148354f5 at::Tensor::copy_()
[2m[36m(pid=439)[0m     @     0x7fc11a8e079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=439)[0m     @     0x55dbdc0b4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=439)[0m     @     0x55dbdc00fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=439)[0m     @     0x55dbdc09abaf _PyEval_EvalCodeWithName
[2m[36m(pid=439)[0m     @     0x55dbdc09ba20 method_vectorcall
[2m[36m(pid=439)[0m     @     0x55dbdc00fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=439)[0m     @     0x55dbdc09abaf _PyEval_EvalCodeWithName
[2m[36m(pid=439)[0m     @     0x55dbdc09b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=439)[0m     @     0x55dbdc010689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=439)[0m     @     0x55dbdc09abaf _PyEval_EvalCodeWithName
[2m[36m(pid=439)[0m     @     0x55dbdc09b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=439)[0m     @     0x55dbdc010689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=439)[0m     @     0x55dbdc09abaf _PyEval_EvalCodeWithName
[2m[36m(pid=439)[0m     @     0x55dbdc09b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=439)[0m     @     0x55dbdc010689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=439)[0m     @     0x55dbdc09abaf _PyEval_EvalCodeWithName
[2m[36m(pid=439)[0m     @     0x55dbdc09b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=439)[0m     @     0x55dbdc010689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x7f1ec178fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=400)[0m     @     0x7f1ec178d388 at::native::copy_impl()
[2m[36m(pid=400)[0m     @     0x7f1ec178f5a4 at::native::copy_()
[2m[36m(pid=400)[0m     @     0x7f1ec1e7a4f5 at::Tensor::copy_()
[2m[36m(pid=400)[0m     @     0x7f1ec434d8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=400)[0m     @     0x7f1ec1e7a4f5 at::Tensor::copy_()
[2m[36m(pid=400)[0m     @     0x7f1ec7f2579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=400)[0m     @     0x557561d90fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=400)[0m     @     0x557561cebb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x557561d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=400)[0m     @     0x557561d77a20 method_vectorcall
[2m[36m(pid=400)[0m     @     0x557561cebbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x7f5603f0c5a4 at::native::copy_()
[2m[36m(pid=445)[0m     @     0x7f56045f74f5 at::Tensor::copy_()
[2m[36m(pid=445)[0m     @     0x7f5606aca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=445)[0m     @     0x7f56045f74f5 at::Tensor::copy_()
[2m[36m(pid=445)[0m     @     0x7f560a6a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=445)[0m     @     0x55e8a4775fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=445)[0m     @     0x55e8a46d0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x55e8a475bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=445)[0m     @     0x55e8a475ca20 method_vectorcall
[2m[36m(pid=445)[0m     @     0x55e8a46d0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x55e8a475bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=445)[0m     @     0x55e8a475c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=445)[0m     @     0x55e8a46d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x55e8a475bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=445)[0m     @     0x55e8a475c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=445)[0m     @     0x55e8a46d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x55e8a475bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=445)[0m     @     0x55e8a475c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=445)[0m     @     0x55e8a46d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=445)[0m     @     0x55e8a475bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=445)[0m     @     0x55e8a475c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=445)[0m     @     0x55e8a46d1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x7f3b1780fa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=388)[0m     @     0x7f3b1780d388 at::native::copy_impl()
[2m[36m(pid=388)[0m     @     0x7f3b1780f5a4 at::native::copy_()
[2m[36m(pid=388)[0m     @     0x7f3b17efa4f5 at::Tensor::copy_()
[2m[36m(pid=388)[0m     @     0x7f3b1a3cd8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=388)[0m     @     0x7f3b17efa4f5 at::Tensor::copy_()
[2m[36m(pid=316)[0m *** SIGSEGV (@0x0) received by PID 316 (TID 0x7fe8f0bd2700) from PID 0; stack trace: ***
[2m[36m(pid=316)[0m     @     0x7fe8f07ab390 (unknown)
[2m[36m(pid=316)[0m     @     0x7fb9f071ff90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=316)[0m     @     0x7fb9efe4a7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=316)[0m     @     0x7fb9efe4d8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=316)[0m     @     0x7fb9efe4dad3 at::TensorIterator::for_each()
[2m[36m(pid=430)[0m     @     0x7f7f22ce4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=430)[0m     @     0x7f7f22ce2388 at::native::copy_impl()
[2m[36m(pid=430)[0m     @     0x7f7f22ce45a4 at::native::copy_()
[2m[36m(pid=430)[0m     @     0x7f7f233cf4f5 at::Tensor::copy_()
[2m[36m(pid=430)[0m     @     0x7f7f258a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=430)[0m     @     0x7f7f233cf4f5 at::Tensor::copy_()
[2m[36m(pid=430)[0m     @     0x7f7f2947a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=430)[0m     @     0x5582b9474fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=430)[0m     @     0x5582b93cfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=430)[0m     @     0x5582b945abaf _PyEval_EvalCodeWithName
[2m[36m(pid=430)[0m     @     0x5582b945ba20 method_vectorcall
[2m[36m(pid=430)[0m     @     0x5582b93cfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=430)[0m     @     0x5582b945abaf _PyEval_EvalCodeWithName
[2m[36m(pid=430)[0m     @     0x5582b945b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=311)[0m     @     0x7f6256742d91 at::TensorIterator::for_each()
[2m[36m(pid=311)[0m     @     0x7f6257025b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=311)[0m     @     0x7f6257048c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=311)[0m     @     0x7f62564eaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=311)[0m     @     0x7f62564e8388 at::native::copy_impl()
[2m[36m(pid=311)[0m     @     0x7f62564ea5a4 at::native::copy_()
[2m[36m(pid=311)[0m     @     0x7f6256bd54f5 at::Tensor::copy_()
[2m[36m(pid=347)[0m     @     0x7ef22b00cd91 at::TensorIterator::for_each()
[2m[36m(pid=347)[0m     @     0x7ef22b8efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=347)[0m     @     0x7ef22b912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=347)[0m     @     0x7ef22adb4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=347)[0m     @     0x7ef22adb2388 at::native::copy_impl()
[2m[36m(pid=347)[0m     @     0x7ef22adb45a4 at::native::copy_()
[2m[36m(pid=347)[0m     @     0x7ef22b49f4f5 at::Tensor::copy_()
[2m[36m(pid=347)[0m     @     0x7ef22d9728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=332)[0m     @     0x7eff93912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=332)[0m     @     0x7eff92db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=332)[0m     @     0x7eff92db2388 at::native::copy_impl()
[2m[36m(pid=332)[0m     @     0x7eff92db45a4 at::native::copy_()
[2m[36m(pid=332)[0m     @     0x7eff9349f4f5 at::Tensor::copy_()
[2m[36m(pid=332)[0m     @     0x7eff959728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=395)[0m     @     0x7f4416343d91 at::TensorIterator::for_each()
[2m[36m(pid=395)[0m     @     0x7f4416c26b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=395)[0m     @     0x7f4416c49c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=395)[0m     @     0x7f44160eba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=395)[0m     @     0x7f44160e9388 at::native::copy_impl()
[2m[36m(pid=395)[0m     @     0x7f44160eb5a4 at::native::copy_()
[2m[36m(pid=395)[0m     @     0x7f44167d64f5 at::Tensor::copy_()
[2m[36m(pid=443)[0m     @     0x7f2cdf7fbd91 at::TensorIterator::for_each()
[2m[36m(pid=443)[0m     @     0x7f2ce00deb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=443)[0m     @     0x7f2ce0101c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=443)[0m     @     0x7f2cdf5a3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=443)[0m     @     0x7f2cdf5a1388 at::native::copy_impl()
[2m[36m(pid=443)[0m     @     0x7f2cdf5a35a4 at::native::copy_()
[2m[36m(pid=432)[0m     @     0x7ef0a9cd2d91 at::TensorIterator::for_each()
[2m[36m(pid=432)[0m     @     0x7ef0aa5b5b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=432)[0m     @     0x7ef0aa5d8c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=432)[0m     @     0x7ef0a9a7aa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=432)[0m     @     0x7ef0a9a78388 at::native::copy_impl()
[2m[36m(pid=432)[0m     @     0x7ef0a9a7a5a4 at::native::copy_()
[2m[36m(pid=309)[0m     @     0x7f2b8a323390 (unknown)
[2m[36m(pid=309)[0m     @     0x7efc8a291f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=309)[0m     @     0x7efc899bc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=309)[0m     @     0x7efc899bf8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=309)[0m     @     0x7efc899bfad3 at::TensorIterator::for_each()
[2m[36m(pid=309)[0m     @     0x7efc899bfd91 at::TensorIterator::for_each()
[2m[36m(pid=318)[0m     @     0x7f5be4ee4390 (unknown)
[2m[36m(pid=318)[0m     @     0x7f2ce4940f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=318)[0m     @     0x7f2ce406b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=318)[0m     @     0x7f2ce406e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=318)[0m     @     0x7f2ce406ead3 at::TensorIterator::for_each()
[2m[36m(pid=318)[0m     @     0x7f2ce406ed91 at::TensorIterator::for_each()
[2m[36m(pid=319)[0m     @     0x7eef6a70af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=319)[0m     @     0x7eef69e357db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=319)[0m     @     0x7eef69e388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=319)[0m     @     0x7eef69e38ad3 at::TensorIterator::for_each()
[2m[36m(pid=319)[0m     @     0x7eef69e38d91 at::TensorIterator::for_each()
[2m[36m(pid=319)[0m     @     0x7eef6a71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=319)[0m     @     0x7eef6a73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=390)[0m     @     0x7f2efc8a2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=390)[0m     @     0x7f2efc8a0388 at::native::copy_impl()
[2m[36m(pid=390)[0m     @     0x7f2efc8a25a4 at::native::copy_()
[2m[36m(pid=390)[0m     @     0x7f2efcf8d4f5 at::Tensor::copy_()
[2m[36m(pid=390)[0m     @     0x7f2eff4608de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=337)[0m     @     0x7fba3c344b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=337)[0m     @     0x7fba3c367c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=337)[0m     @     0x7fba3b809a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=337)[0m     @     0x7fba3b807388 at::native::copy_impl()
[2m[36m(pid=337)[0m     @     0x7fba3b8095a4 at::native::copy_()
[2m[36m(pid=337)[0m     @     0x7fba3bef44f5 at::Tensor::copy_()
[2m[36m(pid=337)[0m     @     0x7fba3e3c78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=337)[0m     @     0x7fba3bef44f5 at::Tensor::copy_()
[2m[36m(pid=337)[0m     @     0x7fba41f9f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=337)[0m     @     0x563dfece8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=337)[0m     @     0x563dfec43b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=337)[0m     @     0x563dfeccebaf _PyEval_EvalCodeWithName
[2m[36m(pid=337)[0m     @     0x563dfeccfa20 method_vectorcall
[2m[36m(pid=337)[0m     @     0x563dfec43bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=337)[0m     @     0x563dfeccebaf _PyEval_EvalCodeWithName
[2m[36m(pid=337)[0m     @     0x563dfeccf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=337)[0m     @     0x563dfec44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x7f58edc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=385)[0m     @     0x7f58edc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=385)[0m     @     0x7f58ed0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=385)[0m     @     0x7f58ed0e1388 at::native::copy_impl()
[2m[36m(pid=385)[0m     @     0x7f58ed0e35a4 at::native::copy_()
[2m[36m(pid=385)[0m     @     0x7f58ed7ce4f5 at::Tensor::copy_()
[2m[36m(pid=385)[0m     @     0x7f58efca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=326)[0m     @     0x7eea08870f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=326)[0m     @     0x7eea07f9b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=326)[0m     @     0x7eea07f9e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=326)[0m     @     0x7eea07f9ead3 at::TensorIterator::for_each()
[2m[36m(pid=326)[0m     @     0x7eea07f9ed91 at::TensorIterator::for_each()
[2m[36m(pid=326)[0m     @     0x7eea08881b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=378)[0m     @     0x7fd74527c390 (unknown)
[2m[36m(pid=378)[0m     @     0x7fa844d87f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=378)[0m     @     0x7fa8444b27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=378)[0m     @     0x7fa8444b58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=378)[0m     @     0x7fa8444b5ad3 at::TensorIterator::for_each()
[2m[36m(pid=378)[0m     @     0x7fa8444b5d91 at::TensorIterator::for_each()
[2m[36m(pid=378)[0m     @     0x7fa844d98b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=377)[0m     @     0x7f5a96a61388 at::native::copy_impl()
[2m[36m(pid=377)[0m     @     0x7f5a96a635a4 at::native::copy_()
[2m[36m(pid=377)[0m     @     0x7f5a9714e4f5 at::Tensor::copy_()
[2m[36m(pid=377)[0m     @     0x7f5a996218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=377)[0m     @     0x7f5a9714e4f5 at::Tensor::copy_()
[2m[36m(pid=377)[0m     @     0x7f5a9d1f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=377)[0m     @     0x55909ec46fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=380)[0m PC: @                0x0 (unknown)
[2m[36m(pid=380)[0m *** SIGSEGV (@0x0) received by PID 380 (TID 0x7f3e29151700) from PID 0; stack trace: ***
[2m[36m(pid=380)[0m     @     0x7f3e28d2a390 (unknown)
[2m[36m(pid=380)[0m     @     0x7f0f28bd1f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=380)[0m     @     0x7f0f282fc7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=380)[0m     @     0x7f0f282ff8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=380)[0m     @     0x7f0f282ffad3 at::TensorIterator::for_each()
[2m[36m(pid=441)[0m     @     0x7f0bafc2bc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=441)[0m     @     0x7f0baf0cda93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=441)[0m     @     0x7f0baf0cb388 at::native::copy_impl()
[2m[36m(pid=441)[0m     @     0x7f0baf0cd5a4 at::native::copy_()
[2m[36m(pid=441)[0m     @     0x7f0baf7b84f5 at::Tensor::copy_()
[2m[36m(pid=441)[0m     @     0x7f0bb1c8b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=446)[0m     @     0x7f3bac536f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=446)[0m     @     0x7f3babc617db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=446)[0m     @     0x7f3babc648f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=446)[0m     @     0x7f3babc64ad3 at::TensorIterator::for_each()
[2m[36m(pid=446)[0m     @     0x7f3babc64d91 at::TensorIterator::for_each()
[2m[36m(pid=446)[0m     @     0x7f3bac547b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=389)[0m     @     0x7f458431b390 (unknown)
[2m[36m(pid=389)[0m     @     0x7f1684101f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=389)[0m     @     0x7f168382c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=389)[0m     @     0x7f168382f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=389)[0m     @     0x7f168382fad3 at::TensorIterator::for_each()
[2m[36m(pid=389)[0m     @     0x7f168382fd91 at::TensorIterator::for_each()
[2m[36m(pid=393)[0m     @     0x7f1b41ef7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=393)[0m     @     0x7f1b41ef5388 at::native::copy_impl()
[2m[36m(pid=393)[0m     @     0x7f1b41ef75a4 at::native::copy_()
[2m[36m(pid=393)[0m     @     0x7f1b425e24f5 at::Tensor::copy_()
[2m[36m(pid=393)[0m     @     0x7f1b44ab58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=382)[0m     @     0x7efe9da0da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=382)[0m     @     0x7efe9da0b388 at::native::copy_impl()
[2m[36m(pid=382)[0m     @     0x7efe9da0d5a4 at::native::copy_()
[2m[36m(pid=382)[0m     @     0x7efe9e0f84f5 at::Tensor::copy_()
[2m[36m(pid=382)[0m     @     0x7efea05cb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=341)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=341)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=341)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=341)[0m PC: @                0x0 (unknown)
[2m[36m(pid=341)[0m *** SIGSEGV (@0x0) received by PID 341 (TID 0x7f8da1b0b700) from PID 0; stack trace: ***
[2m[36m(pid=341)[0m     @     0x7f8da16e4390 (unknown)
[2m[36m(pid=341)[0m     @     0x7f5ea1687f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=341)[0m     @     0x7f5ea0db27db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=417)[0m PC: @                0x0 (unknown)
[2m[36m(pid=417)[0m *** SIGSEGV (@0x0) received by PID 417 (TID 0x7f06d633d700) from PID 0; stack trace: ***
[2m[36m(pid=417)[0m     @     0x7f06d5f16390 (unknown)
[2m[36m(pid=417)[0m     @     0x7ed7d5e24f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=417)[0m     @     0x7ed7d554f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=417)[0m     @     0x7ed7d55528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=417)[0m     @     0x7ed7d5552ad3 at::TensorIterator::for_each()
[2m[36m(pid=386)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=386)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=386)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=386)[0m PC: @                0x0 (unknown)
[2m[36m(pid=386)[0m *** SIGSEGV (@0x0) received by PID 386 (TID 0x7f34344b2700) from PID 0; stack trace: ***
[2m[36m(pid=383)[0m PC: @                0x0 (unknown)
[2m[36m(pid=383)[0m *** SIGSEGV (@0x0) received by PID 383 (TID 0x7f434ae01700) from PID 0; stack trace: ***
[2m[36m(pid=383)[0m     @     0x7f434a9da390 (unknown)
[2m[36m(pid=383)[0m     @     0x7f144a7bbf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=383)[0m     @     0x7f1449ee67db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=422)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=422)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=422)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=422)[0m PC: @                0x0 (unknown)
[2m[36m(pid=422)[0m *** SIGSEGV (@0x0) received by PID 422 (TID 0x7fc5e61f7700) from PID 0; stack trace: ***
[2m[36m(pid=422)[0m     @     0x7fc5e5dd0390 (unknown)
[2m[36m(pid=422)[0m     @     0x7f96e5d46f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=422)[0m     @     0x7f96e54717db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=422)[0m     @     0x7f96e54748f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=366)[0m     @     0x7fa5fbe94390 (unknown)
[2m[36m(pid=366)[0m     @     0x7f76fbe0bf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=366)[0m     @     0x7f76fb5367db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=366)[0m     @     0x7f76fb5398f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=366)[0m     @     0x7f76fb539ad3 at::TensorIterator::for_each()
[2m[36m(pid=366)[0m     @     0x7f76fb539d91 at::TensorIterator::for_each()
[2m[36m(pid=327)[0m PC: @                0x0 (unknown)
[2m[36m(pid=327)[0m *** SIGSEGV (@0x0) received by PID 327 (TID 0x7f9b2fce4700) from PID 0; stack trace: ***
[2m[36m(pid=327)[0m     @     0x7f9b2f8bd390 (unknown)
[2m[36m(pid=327)[0m     @     0x7f6c2f751f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=327)[0m     @     0x7f6c2ee7c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=327)[0m     @     0x7f6c2ee7f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=327)[0m     @     0x7f6c2ee7fad3 at::TensorIterator::for_each()
[2m[36m(pid=317)[0m     @     0x7ef4bc06b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=317)[0m     @     0x7ef4bc06e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=317)[0m     @     0x7ef4bc06ead3 at::TensorIterator::for_each()
[2m[36m(pid=317)[0m     @     0x7ef4bc06ed91 at::TensorIterator::for_each()
[2m[36m(pid=317)[0m     @     0x7ef4bc951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=317)[0m     @     0x7ef4bc974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=415)[0m     @     0x7f841b2025a4 at::native::copy_()
[2m[36m(pid=415)[0m     @     0x7f841b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=415)[0m     @     0x7f841ddc08de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=415)[0m     @     0x7f841b8ed4f5 at::Tensor::copy_()
[2m[36m(pid=415)[0m     @     0x7f842199879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=415)[0m     @     0x5646b68b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=415)[0m     @     0x5646b680cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=415)[0m     @     0x5646b6897baf _PyEval_EvalCodeWithName
[2m[36m(pid=415)[0m     @     0x5646b6898a20 method_vectorcall
[2m[36m(pid=415)[0m     @     0x5646b680cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=415)[0m     @     0x5646b6897baf _PyEval_EvalCodeWithName
[2m[36m(pid=415)[0m     @     0x5646b6898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=415)[0m     @     0x5646b680d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=415)[0m     @     0x5646b6897baf _PyEval_EvalCodeWithName
[2m[36m(pid=415)[0m     @     0x5646b6898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=415)[0m     @     0x5646b680d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x7f53f7f61a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=409)[0m     @     0x7f53f7f5f388 at::native::copy_impl()
[2m[36m(pid=409)[0m     @     0x7f53f7f615a4 at::native::copy_()
[2m[36m(pid=409)[0m     @     0x7f53f864c4f5 at::Tensor::copy_()
[2m[36m(pid=409)[0m     @     0x7f53fab1f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=429)[0m     @     0x7f2832ad44f5 at::Tensor::copy_()
[2m[36m(pid=429)[0m     @     0x7f2834fa78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=429)[0m     @     0x7f2832ad44f5 at::Tensor::copy_()
[2m[36m(pid=429)[0m     @     0x7f2838b7f79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=429)[0m     @     0x558f2c1f5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=429)[0m     @     0x558f2c150b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=429)[0m     @     0x558f2c1dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=429)[0m     @     0x558f2c1dca20 method_vectorcall
[2m[36m(pid=429)[0m     @     0x558f2c150bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=429)[0m     @     0x558f2c1dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=429)[0m     @     0x558f2c1dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=429)[0m     @     0x558f2c151689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=429)[0m     @     0x558f2c1dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=429)[0m     @     0x558f2c1dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=429)[0m     @     0x558f2c151689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=429)[0m     @     0x558f2c1dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=429)[0m     @     0x558f2c1dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=429)[0m     @     0x558f2c151689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=429)[0m     @     0x558f2c1dbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=429)[0m     @     0x558f2c1dc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=429)[0m     @     0x558f2c151689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x7f22a673ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=313)[0m     @     0x7f22a5be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=313)[0m     @     0x7f22a5bde388 at::native::copy_impl()
[2m[36m(pid=313)[0m     @     0x7f22a5be05a4 at::native::copy_()
[2m[36m(pid=313)[0m     @     0x7f22a62cb4f5 at::Tensor::copy_()
[2m[36m(pid=313)[0m     @     0x7f22a879e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=392)[0m     @     0x7ee97da798f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=392)[0m     @     0x7ee97da79ad3 at::TensorIterator::for_each()
[2m[36m(pid=392)[0m     @     0x7ee97da79d91 at::TensorIterator::for_each()
[2m[36m(pid=392)[0m     @     0x7ee97e35cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=392)[0m     @     0x7ee97e37fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=374)[0m     @     0x7f9d5cfefa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=374)[0m     @     0x7f9d5cfed388 at::native::copy_impl()
[2m[36m(pid=374)[0m     @     0x7f9d5cfef5a4 at::native::copy_()
[2m[36m(pid=374)[0m     @     0x7f9d5d6da4f5 at::Tensor::copy_()
[2m[36m(pid=374)[0m     @     0x7f9d5fbad8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=325)[0m     @     0x7fa04709d5a4 at::native::copy_()
[2m[36m(pid=325)[0m     @     0x7fa0477884f5 at::Tensor::copy_()
[2m[36m(pid=325)[0m     @     0x7fa049c5b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=325)[0m     @     0x7fa0477884f5 at::Tensor::copy_()
[2m[36m(pid=325)[0m     @     0x7fa04d83379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=325)[0m     @     0x5572d65fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=325)[0m     @     0x5572d6555b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=325)[0m     @     0x5572d65e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=325)[0m     @     0x5572d65e1a20 method_vectorcall
[2m[36m(pid=325)[0m     @     0x5572d6555bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=325)[0m     @     0x5572d65e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=325)[0m     @     0x5572d65e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=325)[0m     @     0x5572d6556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=325)[0m     @     0x5572d65e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=325)[0m     @     0x5572d65e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=325)[0m     @     0x5572d6556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=325)[0m     @     0x5572d65e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=325)[0m     @     0x5572d65e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=325)[0m     @     0x5572d6556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=325)[0m     @     0x5572d65e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=325)[0m     @     0x5572d65e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=325)[0m     @     0x5572d6556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x7f07108425a4 at::native::copy_()
[2m[36m(pid=444)[0m     @     0x7f0710f2d4f5 at::Tensor::copy_()
[2m[36m(pid=444)[0m     @     0x7f07134008de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=444)[0m     @     0x7f0710f2d4f5 at::Tensor::copy_()
[2m[36m(pid=444)[0m     @     0x7f0716fd879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=444)[0m     @     0x5570e0f44fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=444)[0m     @     0x5570e0e9fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0f2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=444)[0m     @     0x5570e0f2ba20 method_vectorcall
[2m[36m(pid=444)[0m     @     0x5570e0e9fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0f2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=444)[0m     @     0x5570e0f2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=444)[0m     @     0x5570e0ea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0f2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=444)[0m     @     0x5570e0f2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=444)[0m     @     0x5570e0ea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0f2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=444)[0m     @     0x5570e0f2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=444)[0m     @     0x5570e0ea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0f2abaf _PyEval_EvalCodeWithName
[2m[36m(pid=444)[0m     @     0x5570e0f2b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=412)[0m     @     0x7ee5cde52388 at::native::copy_impl()
[2m[36m(pid=412)[0m     @     0x7ee5cde545a4 at::native::copy_()
[2m[36m(pid=412)[0m     @     0x7ee5ce53f4f5 at::Tensor::copy_()
[2m[36m(pid=412)[0m     @     0x7ee5d0a128de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=412)[0m     @     0x7ee5ce53f4f5 at::Tensor::copy_()
[2m[36m(pid=398)[0m     @     0x7ed903f538f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=398)[0m     @     0x7ed903f53ad3 at::TensorIterator::for_each()
[2m[36m(pid=398)[0m     @     0x7ed903f53d91 at::TensorIterator::for_each()
[2m[36m(pid=398)[0m     @     0x7ed904836b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=398)[0m     @     0x7ed904859c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=312)[0m     @     0x7f9b528528f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=312)[0m     @     0x7f9b52852ad3 at::TensorIterator::for_each()
[2m[36m(pid=312)[0m     @     0x7f9b52852d91 at::TensorIterator::for_each()
[2m[36m(pid=312)[0m     @     0x7f9b53135b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=312)[0m     @     0x7f9b53158c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=428)[0m     @     0x7fc6ea0284f5 at::Tensor::copy_()
[2m[36m(pid=428)[0m     @     0x7fc6ec4fb8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=428)[0m     @     0x7fc6ea0284f5 at::Tensor::copy_()
[2m[36m(pid=428)[0m     @     0x7fc6f00d379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=428)[0m     @     0x558322ac7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=428)[0m     @     0x558322a22b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=428)[0m     @     0x558322aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=428)[0m     @     0x558322aaea20 method_vectorcall
[2m[36m(pid=428)[0m     @     0x558322a22bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=428)[0m     @     0x558322aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=428)[0m     @     0x558322aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=428)[0m     @     0x558322a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=428)[0m     @     0x558322aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=428)[0m     @     0x558322aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=428)[0m     @     0x558322a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=428)[0m     @     0x558322aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=428)[0m     @     0x558322aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=428)[0m     @     0x558322a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=428)[0m     @     0x558322aadbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x7f72f6fdfad3 at::TensorIterator::for_each()
[2m[36m(pid=335)[0m     @     0x7f72f6fdfd91 at::TensorIterator::for_each()
[2m[36m(pid=335)[0m     @     0x7f72f78c2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=335)[0m     @     0x7f72f78e5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=321)[0m     @     0x7f4c2de388f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=321)[0m     @     0x7f4c2de38ad3 at::TensorIterator::for_each()
[2m[36m(pid=379)[0m     @     0x7f72fd24f390 (unknown)
[2m[36m(pid=379)[0m     @     0x7f43fd0b5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=379)[0m     @     0x7f43fc7e07db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=387)[0m     @     0x7ee4c32238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=387)[0m     @     0x7ee4c3223ad3 at::TensorIterator::for_each()
[2m[36m(pid=387)[0m     @     0x7ee4c3223d91 at::TensorIterator::for_each()
[2m[36m(pid=384)[0m     @     0x7efc4fc918f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=384)[0m     @     0x7efc4fc91ad3 at::TensorIterator::for_each()
[2m[36m(pid=384)[0m     @     0x7efc4fc91d91 at::TensorIterator::for_each()
[2m[36m(pid=339)[0m     @     0x7f5e88286f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=339)[0m     @     0x7f5e879b17db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=339)[0m     @     0x7f5e879b48f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=339)[0m     @     0x7f5e879b4ad3 at::TensorIterator::for_each()
[2m[36m(pid=368)[0m     @     0x7efc85c2f390 (unknown)
[2m[36m(pid=368)[0m     @     0x7ecd85becf90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=368)[0m     @     0x7ecd853177db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=368)[0m     @     0x7ecd8531a8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=372)[0m     @     0x7f0c19760390 (unknown)
[2m[36m(pid=372)[0m     @     0x7edd196f4f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=372)[0m     @     0x7edd18e1f7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=372)[0m     @     0x7edd18e228f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=372)[0m     @     0x7edd18e22ad3 at::TensorIterator::for_each()
[2m[36m(pid=344)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1595629401015/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=344)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=344)[0m *** Aborted at 1604571377 (unix time) try "date -d @1604571377" if you are using GNU date ***
[2m[36m(pid=344)[0m PC: @                0x0 (unknown)
[2m[36m(pid=344)[0m *** SIGSEGV (@0x0) received by PID 344 (TID 0x7fcc03937700) from PID 0; stack trace: ***
[2m[36m(pid=344)[0m     @     0x7fcc03510390 (unknown)
[2m[36m(pid=344)[0m     @     0x7f9d0343af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=324)[0m     @     0x7f7d77b355a4 at::native::copy_()
[2m[36m(pid=324)[0m     @     0x7f7d782204f5 at::Tensor::copy_()
[2m[36m(pid=324)[0m     @     0x7f7d7a6f38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=322)[0m     @     0x7f93507e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=322)[0m     @     0x7f93507e3d91 at::TensorIterator::for_each()
[2m[36m(pid=322)[0m     @     0x7f93510c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=322)[0m     @     0x7f93510e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=381)[0m     @     0x7f776be3c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=381)[0m     @     0x7f776be3cad3 at::TensorIterator::for_each()
[2m[36m(pid=381)[0m     @     0x7f776be3cd91 at::TensorIterator::for_each()
[2m[36m(pid=381)[0m     @     0x7f776c71fb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=381)[0m     @     0x7f776c742c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=381)[0m     @     0x7f776bbe4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=381)[0m     @     0x7f776bbe2388 at::native::copy_impl()
[2m[36m(pid=381)[0m     @     0x7f776bbe45a4 at::native::copy_()
[2m[36m(pid=330)[0m     @     0x7fc24058b5a4 at::native::copy_()
[2m[36m(pid=330)[0m     @     0x7fc240c764f5 at::Tensor::copy_()
[2m[36m(pid=330)[0m     @     0x7fc2431498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=330)[0m     @     0x7fc240c764f5 at::Tensor::copy_()
[2m[36m(pid=330)[0m     @     0x7fc246d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=330)[0m     @     0x5588eec09fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=330)[0m     @     0x5588eeb64b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=330)[0m     @     0x5588eebefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=330)[0m     @     0x5588eebf0a20 method_vectorcall
[2m[36m(pid=330)[0m     @     0x5588eeb64bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=330)[0m     @     0x5588eebefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=330)[0m     @     0x5588eebf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=330)[0m     @     0x5588eeb65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=330)[0m     @     0x5588eebefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=330)[0m     @     0x5588eebf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=330)[0m     @     0x5588eeb65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=330)[0m     @     0x5588eebefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=330)[0m     @     0x5588eebf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=330)[0m     @     0x5588eeb65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=330)[0m     @     0x5588eebefbaf _PyEval_EvalCodeWithName
[2m[36m(pid=330)[0m     @     0x5588eebf0643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=330)[0m     @     0x5588eeb65689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x7ecd280185a4 at::native::copy_()
[2m[36m(pid=308)[0m     @     0x7ecd287034f5 at::Tensor::copy_()
[2m[36m(pid=308)[0m     @     0x7ecd2abd68de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=308)[0m     @     0x7ecd287034f5 at::Tensor::copy_()
[2m[36m(pid=308)[0m     @     0x7ecd2e7ae79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=308)[0m     @     0x55d2572e5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=308)[0m     @     0x55d257240b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x55d2572cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=308)[0m     @     0x55d2572cca20 method_vectorcall
[2m[36m(pid=308)[0m     @     0x55d257240bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x55d2572cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=308)[0m     @     0x55d2572cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=308)[0m     @     0x55d257241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x55d2572cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=308)[0m     @     0x55d2572cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=308)[0m     @     0x55d257241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x55d2572cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=308)[0m     @     0x55d2572cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=308)[0m     @     0x55d257241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=308)[0m     @     0x55d2572cbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=308)[0m     @     0x55d2572cc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=308)[0m     @     0x55d257241689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x7f42dd37f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=320)[0m     @     0x7f42dd37fad3 at::TensorIterator::for_each()
[2m[36m(pid=320)[0m     @     0x7f42dd37fd91 at::TensorIterator::for_each()
[2m[36m(pid=320)[0m     @     0x7f42ddc62b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=320)[0m     @     0x7f42ddc85c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=320)[0m     @     0x7f42dd127a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=320)[0m     @     0x7f42dd125388 at::native::copy_impl()
[2m[36m(pid=328)[0m     @     0x7fb1d70097db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=328)[0m     @     0x7fb1d700c8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=328)[0m     @     0x7fb1d700cad3 at::TensorIterator::for_each()
[2m[36m(pid=328)[0m     @     0x7fb1d700cd91 at::TensorIterator::for_each()
[2m[36m(pid=328)[0m     @     0x7fb1d78efb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=328)[0m     @     0x7fb1d7912c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=397)[0m     @     0x7f903743af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=397)[0m     @     0x7f9036b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=397)[0m     @     0x7f9036b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=397)[0m     @     0x7f9036b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=397)[0m     @     0x7f9036b68d91 at::TensorIterator::for_each()
[2m[36m(pid=310)[0m     @     0x7f8fe01bbad3 at::TensorIterator::for_each()
[2m[36m(pid=310)[0m     @     0x7f8fe01bbd91 at::TensorIterator::for_each()
[2m[36m(pid=310)[0m     @     0x7f8fe0a9eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=310)[0m     @     0x7f8fe0ac1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=310)[0m     @     0x7f8fdff63a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=310)[0m     @     0x7f8fdff61388 at::native::copy_impl()
[2m[36m(pid=310)[0m     @     0x7f8fdff635a4 at::native::copy_()
[2m[36m(pid=407)[0m     @     0x7edb9d34af90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=407)[0m     @     0x7edb9ca757db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=407)[0m     @     0x7edb9ca788f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=407)[0m     @     0x7edb9ca78ad3 at::TensorIterator::for_each()
[2m[36m(pid=407)[0m     @     0x7edb9ca78d91 at::TensorIterator::for_each()
[2m[36m(pid=407)[0m     @     0x7edb9d35bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=407)[0m     @     0x7edb9d37ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=345)[0m     @     0x7f6df7c6b390 (unknown)
[2m[36m(pid=345)[0m     @     0x7f3ef7af5f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=345)[0m     @     0x7f3ef72207db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=426)[0m     @     0x7f32da84b390 (unknown)
[2m[36m(pid=426)[0m     @     0x7f03da601f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=426)[0m     @     0x7f03d9d2c7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=426)[0m     @     0x7f03d9d2f8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=426)[0m     @     0x7f03d9d2fad3 at::TensorIterator::for_each()
[2m[36m(pid=426)[0m     @     0x7f03d9d2fd91 at::TensorIterator::for_each()
[2m[36m(pid=426)[0m     @     0x7f03da612b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=426)[0m     @     0x7f03da635c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=447)[0m     @     0x7fbe007e04f5 at::Tensor::copy_()
[2m[36m(pid=447)[0m     @     0x7fbe0688b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=447)[0m     @     0x55e9d0c4afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=447)[0m     @     0x55e9d0ba5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=447)[0m     @     0x55e9d0c30baf _PyEval_EvalCodeWithName
[2m[36m(pid=447)[0m     @     0x55e9d0c31a20 method_vectorcall
[2m[36m(pid=447)[0m     @     0x55e9d0ba5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=447)[0m     @     0x55e9d0c30baf _PyEval_EvalCodeWithName
[2m[36m(pid=447)[0m     @     0x55e9d0c31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=447)[0m     @     0x55e9d0ba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=447)[0m     @     0x55e9d0c30baf _PyEval_EvalCodeWithName
[2m[36m(pid=447)[0m     @     0x55e9d0c31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=447)[0m     @     0x55e9d0ba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=447)[0m     @     0x55e9d0c30baf _PyEval_EvalCodeWithName
[2m[36m(pid=447)[0m     @     0x55e9d0c31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=447)[0m     @     0x55e9d0ba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=447)[0m     @     0x55e9d0c30baf _PyEval_EvalCodeWithName
[2m[36m(pid=447)[0m     @     0x55e9d0c31643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=447)[0m     @     0x55e9d0ba6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x7f560f95b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=434)[0m     @     0x5596c9df7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=434)[0m     @     0x5596c9d52b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x5596c9dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=434)[0m     @     0x5596c9ddea20 method_vectorcall
[2m[36m(pid=434)[0m     @     0x5596c9d52bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x5596c9dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=434)[0m     @     0x5596c9dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=434)[0m     @     0x5596c9d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x5596c9dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=434)[0m     @     0x5596c9dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=434)[0m     @     0x5596c9d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x5596c9dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=434)[0m     @     0x5596c9dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=434)[0m     @     0x5596c9d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=434)[0m     @     0x5596c9dddbaf _PyEval_EvalCodeWithName
[2m[36m(pid=434)[0m     @     0x5596c9dde643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=434)[0m     @     0x5596c9d53689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06ddfabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06de85baf _PyEval_EvalCodeWithName
[2m[36m(pid=453)[0m     @     0x55a06de86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=453)[0m     @     0x55a06ddfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06de85baf _PyEval_EvalCodeWithName
[2m[36m(pid=453)[0m     @     0x55a06de86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=453)[0m     @     0x55a06ddfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06de85baf _PyEval_EvalCodeWithName
[2m[36m(pid=453)[0m     @     0x55a06de86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=453)[0m     @     0x55a06ddfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=453)[0m     @     0x55a06de85baf _PyEval_EvalCodeWithName
[2m[36m(pid=453)[0m     @     0x55a06de86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=453)[0m     @     0x55a06ddfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a251761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a2517ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=458)[0m     @     0x55a2517ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=458)[0m     @     0x55a251761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=458)[0m     @     0x55a2517ebbaf _PyEval_EvalCodeWithName
[2m[36m(pid=458)[0m     @     0x55a2517ec643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=458)[0m     @     0x55a251761689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x7f5fe97ce4f5 at::Tensor::copy_()
[2m[36m(pid=419)[0m     @     0x7f5fef87979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=419)[0m     @     0x56509553cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=419)[0m     @     0x565095497b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x565095522baf _PyEval_EvalCodeWithName
[2m[36m(pid=419)[0m     @     0x565095523a20 method_vectorcall
[2m[36m(pid=419)[0m     @     0x565095497bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x565095522baf _PyEval_EvalCodeWithName
[2m[36m(pid=419)[0m     @     0x565095523643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=419)[0m     @     0x565095498689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x565095522baf _PyEval_EvalCodeWithName
[2m[36m(pid=419)[0m     @     0x565095523643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=419)[0m     @     0x565095498689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x565095522baf _PyEval_EvalCodeWithName
[2m[36m(pid=419)[0m     @     0x565095523643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=419)[0m     @     0x565095498689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=419)[0m     @     0x565095522baf _PyEval_EvalCodeWithName
[2m[36m(pid=419)[0m     @     0x565095523643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=419)[0m     @     0x565095498689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x7f5aee29bd91 at::TensorIterator::for_each()
[2m[36m(pid=375)[0m     @     0x7f5aeeb7eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=375)[0m     @     0x7f5aeeba1c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=375)[0m     @     0x7f5aee043a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=375)[0m     @     0x7f5aee041388 at::native::copy_impl()
[2m[36m(pid=315)[0m     @     0x7f7f6941dd91 at::TensorIterator::for_each()
[2m[36m(pid=315)[0m     @     0x7f7f69d00b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=315)[0m     @     0x7f7f69d23c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=315)[0m     @     0x7f7f691c5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=315)[0m     @     0x7f7f691c3388 at::native::copy_impl()
[2m[36m(pid=315)[0m     @     0x7f7f691c55a4 at::native::copy_()
[2m[36m(pid=329)[0m     @     0x7f228c269d91 at::TensorIterator::for_each()
[2m[36m(pid=329)[0m     @     0x7f228cb4cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=329)[0m     @     0x7f228cb6fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=329)[0m     @     0x7f228c011a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=329)[0m     @     0x7f228c00f388 at::native::copy_impl()
[2m[36m(pid=329)[0m     @     0x7f228c0115a4 at::native::copy_()
[2m[36m(pid=346)[0m     @     0x7edabdc1eb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=346)[0m     @     0x7edabdc41c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=346)[0m     @     0x7edabd0e3a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=346)[0m     @     0x7edabd0e1388 at::native::copy_impl()
[2m[36m(pid=346)[0m     @     0x7edabd0e35a4 at::native::copy_()
[2m[36m(pid=394)[0m     @     0x7f7aad2b54f5 at::Tensor::copy_()
[2m[36m(pid=394)[0m     @     0x7f7ab336079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=394)[0m     @     0x55706aae0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=394)[0m     @     0x55706aa3bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=394)[0m     @     0x55706aac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=394)[0m     @     0x55706aac7a20 method_vectorcall
[2m[36m(pid=394)[0m     @     0x55706aa3bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=394)[0m     @     0x55706aac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=394)[0m     @     0x55706aac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=394)[0m     @     0x55706aa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=394)[0m     @     0x55706aac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=394)[0m     @     0x55706aac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=394)[0m     @     0x55706aa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=394)[0m     @     0x55706aac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=394)[0m     @     0x55706aac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=394)[0m     @     0x55706aa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=394)[0m     @     0x55706aac6baf _PyEval_EvalCodeWithName
[2m[36m(pid=394)[0m     @     0x55706aac7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=394)[0m     @     0x55706aa3c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x7f1f30cad79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=391)[0m     @     0x564b66ca6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=391)[0m     @     0x564b66c01b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x564b66c8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=391)[0m     @     0x564b66c8da20 method_vectorcall
[2m[36m(pid=391)[0m     @     0x564b66c01bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x564b66c8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=391)[0m     @     0x564b66c8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=391)[0m     @     0x564b66c02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x564b66c8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=391)[0m     @     0x564b66c8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=391)[0m     @     0x564b66c02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x564b66c8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=391)[0m     @     0x564b66c8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=391)[0m     @     0x564b66c02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=391)[0m     @     0x564b66c8cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=391)[0m     @     0x564b66c8d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=391)[0m     @     0x564b66c02689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x557561d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=400)[0m     @     0x557561d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=400)[0m     @     0x557561cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x557561d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=400)[0m     @     0x557561d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=400)[0m     @     0x557561cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x557561d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=400)[0m     @     0x557561d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=400)[0m     @     0x557561cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=400)[0m     @     0x557561d76baf _PyEval_EvalCodeWithName
[2m[36m(pid=400)[0m     @     0x557561d77643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=400)[0m     @     0x557561cec689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x7f3b1dfa579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=388)[0m     @     0x558822598fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=388)[0m     @     0x5588224f3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x55882257ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=388)[0m     @     0x55882257fa20 method_vectorcall
[2m[36m(pid=388)[0m     @     0x5588224f3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x55882257ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=388)[0m     @     0x55882257f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=388)[0m     @     0x5588224f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x55882257ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=388)[0m     @     0x55882257f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=388)[0m     @     0x5588224f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x55882257ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=388)[0m     @     0x55882257f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=388)[0m     @     0x5588224f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=388)[0m     @     0x55882257ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=388)[0m     @     0x55882257f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=388)[0m     @     0x5588224f4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x7fb9efe4dd91 at::TensorIterator::for_each()
[2m[36m(pid=316)[0m     @     0x7fb9f0730b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=316)[0m     @     0x7fb9f0753c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=316)[0m     @     0x7fb9efbf5a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=316)[0m     @     0x7fb9efbf3388 at::native::copy_impl()
[2m[36m(pid=316)[0m     @     0x7fb9efbf55a4 at::native::copy_()
[2m[36m(pid=430)[0m     @     0x5582b93d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=430)[0m     @     0x5582b945abaf _PyEval_EvalCodeWithName
[2m[36m(pid=430)[0m     @     0x5582b945b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=430)[0m     @     0x5582b93d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=430)[0m     @     0x5582b945abaf _PyEval_EvalCodeWithName
[2m[36m(pid=430)[0m     @     0x5582b945b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=430)[0m     @     0x5582b93d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=430)[0m     @     0x5582b945abaf _PyEval_EvalCodeWithName
[2m[36m(pid=430)[0m     @     0x5582b945b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=430)[0m     @     0x5582b93d0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x7f62590a88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=311)[0m     @     0x7f6256bd54f5 at::Tensor::copy_()
[2m[36m(pid=311)[0m     @     0x7f625cc8079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=311)[0m     @     0x561f83d69fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=311)[0m     @     0x561f83cc4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x561f83d4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=311)[0m     @     0x561f83d50a20 method_vectorcall
[2m[36m(pid=311)[0m     @     0x561f83cc4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x561f83d4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=311)[0m     @     0x561f83d50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=311)[0m     @     0x561f83cc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x561f83d4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=311)[0m     @     0x561f83d50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=311)[0m     @     0x561f83cc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x561f83d4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=311)[0m     @     0x561f83d50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=311)[0m     @     0x561f83cc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=311)[0m     @     0x561f83d4fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=311)[0m     @     0x561f83d50643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=311)[0m     @     0x561f83cc5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x7ef22b49f4f5 at::Tensor::copy_()
[2m[36m(pid=347)[0m     @     0x7ef23154a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=347)[0m     @     0x555eba451fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=347)[0m     @     0x555eba3acb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x555eba437baf _PyEval_EvalCodeWithName
[2m[36m(pid=347)[0m     @     0x555eba438a20 method_vectorcall
[2m[36m(pid=347)[0m     @     0x555eba3acbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x555eba437baf _PyEval_EvalCodeWithName
[2m[36m(pid=347)[0m     @     0x555eba438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=347)[0m     @     0x555eba3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x555eba437baf _PyEval_EvalCodeWithName
[2m[36m(pid=347)[0m     @     0x555eba438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=347)[0m     @     0x555eba3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x555eba437baf _PyEval_EvalCodeWithName
[2m[36m(pid=347)[0m     @     0x555eba438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=347)[0m     @     0x555eba3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=347)[0m     @     0x555eba437baf _PyEval_EvalCodeWithName
[2m[36m(pid=347)[0m     @     0x555eba438643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=347)[0m     @     0x555eba3ad689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x7eff9349f4f5 at::Tensor::copy_()
[2m[36m(pid=332)[0m     @     0x7eff9954a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=332)[0m     @     0x5579c70e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=332)[0m     @     0x5579c703cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x5579c70c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=332)[0m     @     0x5579c70c8a20 method_vectorcall
[2m[36m(pid=332)[0m     @     0x5579c703cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x5579c70c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=332)[0m     @     0x5579c70c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=332)[0m     @     0x5579c703d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x5579c70c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=332)[0m     @     0x5579c70c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=332)[0m     @     0x5579c703d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x5579c70c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=332)[0m     @     0x5579c70c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=332)[0m     @     0x5579c703d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=332)[0m     @     0x5579c70c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=332)[0m     @     0x5579c70c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=332)[0m     @     0x5579c703d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x7f4418ca98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=395)[0m     @     0x7f44167d64f5 at::Tensor::copy_()
[2m[36m(pid=395)[0m     @     0x7f441c47779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=395)[0m     @     0x559e79ed6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=395)[0m     @     0x559e79e31b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x559e79ebcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=395)[0m     @     0x559e79ebda20 method_vectorcall
[2m[36m(pid=395)[0m     @     0x559e79e31bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x559e79ebcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=395)[0m     @     0x559e79ebd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=395)[0m     @     0x559e79e32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x559e79ebcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=395)[0m     @     0x559e79ebd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=395)[0m     @     0x559e79e32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x559e79ebcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=395)[0m     @     0x559e79ebd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=395)[0m     @     0x559e79e32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=395)[0m     @     0x559e79ebcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=395)[0m     @     0x559e79ebd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=395)[0m     @     0x559e79e32689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x7f2cdfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=443)[0m     @     0x7f2ce21618de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=443)[0m     @     0x7f2cdfc8e4f5 at::Tensor::copy_()
[2m[36m(pid=443)[0m     @     0x7f2ce5d3979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=443)[0m     @     0x5555d5c9ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=443)[0m     @     0x5555d5bfab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x5555d5c85baf _PyEval_EvalCodeWithName
[2m[36m(pid=443)[0m     @     0x5555d5c86a20 method_vectorcall
[2m[36m(pid=443)[0m     @     0x5555d5bfabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x5555d5c85baf _PyEval_EvalCodeWithName
[2m[36m(pid=443)[0m     @     0x5555d5c86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=443)[0m     @     0x5555d5bfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x5555d5c85baf _PyEval_EvalCodeWithName
[2m[36m(pid=443)[0m     @     0x5555d5c86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=443)[0m     @     0x5555d5bfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x5555d5c85baf _PyEval_EvalCodeWithName
[2m[36m(pid=443)[0m     @     0x5555d5c86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=443)[0m     @     0x5555d5bfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=443)[0m     @     0x5555d5c85baf _PyEval_EvalCodeWithName
[2m[36m(pid=443)[0m     @     0x5555d5c86643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=443)[0m     @     0x5555d5bfb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x7ef0aa1654f5 at::Tensor::copy_()
[2m[36m(pid=432)[0m     @     0x7ef0ac6388de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=432)[0m     @     0x7ef0aa1654f5 at::Tensor::copy_()
[2m[36m(pid=432)[0m     @     0x7ef0b021079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=432)[0m     @     0x556fa66fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=432)[0m     @     0x556fa6655b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x556fa66e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=432)[0m     @     0x556fa66e1a20 method_vectorcall
[2m[36m(pid=432)[0m     @     0x556fa6655bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x556fa66e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=432)[0m     @     0x556fa66e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=432)[0m     @     0x556fa6656689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x556fa66e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=432)[0m     @     0x556fa66e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=432)[0m     @     0x556fa6656689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x556fa66e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=432)[0m     @     0x556fa66e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=432)[0m     @     0x556fa6656689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=432)[0m     @     0x556fa66e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=432)[0m     @     0x556fa66e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=432)[0m     @     0x556fa6656689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x7efc8a2a2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=309)[0m     @     0x7efc8a2c5c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=309)[0m     @     0x7efc89767a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=309)[0m     @     0x7efc89765388 at::native::copy_impl()
[2m[36m(pid=309)[0m     @     0x7efc897675a4 at::native::copy_()
[2m[36m(pid=318)[0m     @     0x7f2ce4951b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=318)[0m     @     0x7f2ce4974c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=318)[0m     @     0x7f2ce3e16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=318)[0m     @     0x7f2ce3e14388 at::native::copy_impl()
[2m[36m(pid=318)[0m     @     0x7f2ce3e165a4 at::native::copy_()
[2m[36m(pid=318)[0m     @     0x7f2ce45014f5 at::Tensor::copy_()
[2m[36m(pid=319)[0m     @     0x7eef69be0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=319)[0m     @     0x7eef69bde388 at::native::copy_impl()
[2m[36m(pid=319)[0m     @     0x7eef69be05a4 at::native::copy_()
[2m[36m(pid=319)[0m     @     0x7eef6a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=390)[0m     @     0x7f2efcf8d4f5 at::Tensor::copy_()
[2m[36m(pid=390)[0m     @     0x7f2f0303879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=390)[0m     @     0x55fd6ca1ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=390)[0m     @     0x55fd6c97ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=390)[0m     @     0x55fd6ca05baf _PyEval_EvalCodeWithName
[2m[36m(pid=390)[0m     @     0x55fd6ca06a20 method_vectorcall
[2m[36m(pid=390)[0m     @     0x55fd6c97abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=390)[0m     @     0x55fd6ca05baf _PyEval_EvalCodeWithName
[2m[36m(pid=390)[0m     @     0x55fd6ca06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=390)[0m     @     0x55fd6c97b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=390)[0m     @     0x55fd6ca05baf _PyEval_EvalCodeWithName
[2m[36m(pid=390)[0m     @     0x55fd6ca06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=390)[0m     @     0x55fd6c97b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=390)[0m     @     0x55fd6ca05baf _PyEval_EvalCodeWithName
[2m[36m(pid=390)[0m     @     0x55fd6ca06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=390)[0m     @     0x55fd6c97b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=390)[0m     @     0x55fd6ca05baf _PyEval_EvalCodeWithName
[2m[36m(pid=390)[0m     @     0x55fd6ca06643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=390)[0m     @     0x55fd6c97b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=337)[0m     @     0x563dfeccebaf _PyEval_EvalCodeWithName
[2m[36m(pid=337)[0m     @     0x563dfeccf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=337)[0m     @     0x563dfec44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=337)[0m     @     0x563dfeccebaf _PyEval_EvalCodeWithName
[2m[36m(pid=337)[0m     @     0x563dfeccf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=337)[0m     @     0x563dfec44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=337)[0m     @     0x563dfeccebaf _PyEval_EvalCodeWithName
[2m[36m(pid=337)[0m     @     0x563dfeccf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=337)[0m     @     0x563dfec44689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x7f58ed7ce4f5 at::Tensor::copy_()
[2m[36m(pid=385)[0m     @     0x7f58f387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=385)[0m     @     0x55e659006fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=385)[0m     @     0x55e658f61b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x55e658fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=385)[0m     @     0x55e658feda20 method_vectorcall
[2m[36m(pid=385)[0m     @     0x55e658f61bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x55e658fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=385)[0m     @     0x55e658fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=385)[0m     @     0x55e658f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x55e658fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=385)[0m     @     0x55e658fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=385)[0m     @     0x55e658f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x55e658fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=385)[0m     @     0x55e658fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=385)[0m     @     0x55e658f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=385)[0m     @     0x55e658fecbaf _PyEval_EvalCodeWithName
[2m[36m(pid=385)[0m     @     0x55e658fed643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=385)[0m     @     0x55e658f62689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x7eea088a4c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=326)[0m     @     0x7eea07d46a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=326)[0m     @     0x7eea07d44388 at::native::copy_impl()
[2m[36m(pid=326)[0m     @     0x7eea07d465a4 at::native::copy_()
[2m[36m(pid=326)[0m     @     0x7eea084314f5 at::Tensor::copy_()
[2m[36m(pid=378)[0m     @     0x7fa844dbbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=378)[0m     @     0x7fa84425da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=378)[0m     @     0x7fa84425b388 at::native::copy_impl()
[2m[36m(pid=378)[0m     @     0x7fa84425d5a4 at::native::copy_()
[2m[36m(pid=378)[0m     @     0x7fa8449484f5 at::Tensor::copy_()
[2m[36m(pid=378)[0m     @     0x7fa846e1b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=377)[0m     @     0x55909eba1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=377)[0m     @     0x55909ec2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=377)[0m     @     0x55909ec2da20 method_vectorcall
[2m[36m(pid=377)[0m     @     0x55909eba1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=377)[0m     @     0x55909ec2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=377)[0m     @     0x55909ec2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=377)[0m     @     0x55909eba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=377)[0m     @     0x55909ec2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=377)[0m     @     0x55909ec2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=377)[0m     @     0x55909eba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=377)[0m     @     0x55909ec2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=377)[0m     @     0x55909ec2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=377)[0m     @     0x55909eba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=377)[0m     @     0x55909ec2cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=377)[0m     @     0x55909ec2d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=377)[0m     @     0x55909eba2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x7f0f282ffd91 at::TensorIterator::for_each()
[2m[36m(pid=380)[0m     @     0x7f0f28be2b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=380)[0m     @     0x7f0f28c05c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=380)[0m     @     0x7f0f280a7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=380)[0m     @     0x7f0f280a5388 at::native::copy_impl()
[2m[36m(pid=380)[0m     @     0x7f0f280a75a4 at::native::copy_()
[2m[36m(pid=441)[0m     @     0x7f0baf7b84f5 at::Tensor::copy_()
[2m[36m(pid=441)[0m     @     0x7f0bb586379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=441)[0m     @     0x555ae3047fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=441)[0m     @     0x555ae2fa2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=441)[0m     @     0x555ae302dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=441)[0m     @     0x555ae302ea20 method_vectorcall
[2m[36m(pid=441)[0m     @     0x555ae2fa2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=441)[0m     @     0x555ae302dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=441)[0m     @     0x555ae302e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=441)[0m     @     0x555ae2fa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=441)[0m     @     0x555ae302dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=441)[0m     @     0x555ae302e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=441)[0m     @     0x555ae2fa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=441)[0m     @     0x555ae302dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=441)[0m     @     0x555ae302e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=441)[0m     @     0x555ae2fa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=441)[0m     @     0x555ae302dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=441)[0m     @     0x555ae302e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=441)[0m     @     0x555ae2fa3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x7f3bac56ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=446)[0m     @     0x7f3baba0ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=446)[0m     @     0x7f3baba0a388 at::native::copy_impl()
[2m[36m(pid=446)[0m     @     0x7f3baba0c5a4 at::native::copy_()
[2m[36m(pid=446)[0m     @     0x7f3bac0f74f5 at::Tensor::copy_()
[2m[36m(pid=389)[0m     @     0x7f1684112b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=389)[0m     @     0x7f1684135c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=389)[0m     @     0x7f16835d7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=389)[0m     @     0x7f16835d5388 at::native::copy_impl()
[2m[36m(pid=389)[0m     @     0x7f16835d75a4 at::native::copy_()
[2m[36m(pid=389)[0m     @     0x7f1683cc24f5 at::Tensor::copy_()
[2m[36m(pid=389)[0m     @     0x7f16861958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=393)[0m     @     0x7f1b425e24f5 at::Tensor::copy_()
[2m[36m(pid=393)[0m     @     0x7f1b4868d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=393)[0m     @     0x5570985dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=393)[0m     @     0x557098535b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=393)[0m     @     0x5570985c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=393)[0m     @     0x5570985c1a20 method_vectorcall
[2m[36m(pid=393)[0m     @     0x557098535bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=393)[0m     @     0x5570985c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=393)[0m     @     0x5570985c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=393)[0m     @     0x557098536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=393)[0m     @     0x5570985c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=393)[0m     @     0x5570985c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=393)[0m     @     0x557098536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=393)[0m     @     0x5570985c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=393)[0m     @     0x5570985c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=393)[0m     @     0x557098536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=393)[0m     @     0x5570985c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=393)[0m     @     0x5570985c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=393)[0m     @     0x557098536689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x7efe9e0f84f5 at::Tensor::copy_()
[2m[36m(pid=382)[0m     @     0x7efea41a379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=382)[0m     @     0x55c037e6bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=382)[0m     @     0x55c037dc6b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x55c037e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=382)[0m     @     0x55c037e52a20 method_vectorcall
[2m[36m(pid=382)[0m     @     0x55c037dc6bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x55c037e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=382)[0m     @     0x55c037e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=382)[0m     @     0x55c037dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x55c037e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=382)[0m     @     0x55c037e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=382)[0m     @     0x55c037dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x55c037e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=382)[0m     @     0x55c037e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=382)[0m     @     0x55c037dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=382)[0m     @     0x55c037e51baf _PyEval_EvalCodeWithName
[2m[36m(pid=382)[0m     @     0x55c037e52643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=382)[0m     @     0x55c037dc7689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x7f5ea0db58f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=341)[0m     @     0x7f5ea0db5ad3 at::TensorIterator::for_each()
[2m[36m(pid=341)[0m     @     0x7f5ea0db5d91 at::TensorIterator::for_each()
[2m[36m(pid=341)[0m     @     0x7f5ea1698b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=341)[0m     @     0x7f5ea16bbc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=341)[0m     @     0x7f5ea0b5da93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=341)[0m     @     0x7f5ea0b5b388 at::native::copy_impl()
[2m[36m(pid=417)[0m     @     0x7ed7d5552d91 at::TensorIterator::for_each()
[2m[36m(pid=417)[0m     @     0x7ed7d5e35b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=417)[0m     @     0x7ed7d5e58c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=417)[0m     @     0x7ed7d52faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=386)[0m     @     0x7f343408b390 (unknown)
[2m[36m(pid=386)[0m     @     0x7f0534020f90 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=386)[0m     @     0x7f053374b7db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=386)[0m     @     0x7f053374e8f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=386)[0m     @     0x7f053374ead3 at::TensorIterator::for_each()
[2m[36m(pid=383)[0m     @     0x7f1449ee98f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=383)[0m     @     0x7f1449ee9ad3 at::TensorIterator::for_each()
[2m[36m(pid=383)[0m     @     0x7f1449ee9d91 at::TensorIterator::for_each()
[2m[36m(pid=383)[0m     @     0x7f144a7ccb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=383)[0m     @     0x7f144a7efc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=383)[0m     @     0x7f1449c91a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=383)[0m     @     0x7f1449c8f388 at::native::copy_impl()
[2m[36m(pid=422)[0m     @     0x7f96e5474ad3 at::TensorIterator::for_each()
[2m[36m(pid=422)[0m     @     0x7f96e5474d91 at::TensorIterator::for_each()
[2m[36m(pid=422)[0m     @     0x7f96e5d57b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=422)[0m     @     0x7f96e5d7ac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=422)[0m     @     0x7f96e521ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=422)[0m     @     0x7f96e521a388 at::native::copy_impl()
[2m[36m(pid=422)[0m     @     0x7f96e521c5a4 at::native::copy_()
[2m[36m(pid=422)[0m     @     0x7f96e59074f5 at::Tensor::copy_()
[2m[36m(pid=366)[0m     @     0x7f76fbe1cb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=366)[0m     @     0x7f76fbe3fc1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=366)[0m     @     0x7f76fb2e1a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=366)[0m     @     0x7f76fb2df388 at::native::copy_impl()
[2m[36m(pid=366)[0m     @     0x7f76fb2e15a4 at::native::copy_()
[2m[36m(pid=366)[0m     @     0x7f76fb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=366)[0m     @     0x7f76fde9f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=366)[0m     @     0x7f76fb9cc4f5 at::Tensor::copy_()
[2m[36m(pid=327)[0m     @     0x7f6c2ee7fd91 at::TensorIterator::for_each()
[2m[36m(pid=327)[0m     @     0x7f6c2f762b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=327)[0m     @     0x7f6c2f785c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=327)[0m     @     0x7f6c2ec27a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=327)[0m     @     0x7f6c2ec25388 at::native::copy_impl()
[2m[36m(pid=327)[0m     @     0x7f6c2ec275a4 at::native::copy_()
[2m[36m(pid=327)[0m     @     0x7f6c2f3124f5 at::Tensor::copy_()
[2m[36m(pid=317)[0m     @     0x7ef4bbe16a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=317)[0m     @     0x7ef4bbe14388 at::native::copy_impl()
[2m[36m(pid=317)[0m     @     0x7ef4bbe165a4 at::native::copy_()
[2m[36m(pid=317)[0m     @     0x7ef4bc5014f5 at::Tensor::copy_()
[2m[36m(pid=317)[0m     @     0x7ef4be9d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=317)[0m     @     0x7ef4bc5014f5 at::Tensor::copy_()
[2m[36m(pid=317)[0m     @     0x7ef4c21a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=317)[0m     @     0x56378085cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=317)[0m     @     0x5637807b7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=317)[0m     @     0x563780842baf _PyEval_EvalCodeWithName
[2m[36m(pid=317)[0m     @     0x563780843a20 method_vectorcall
[2m[36m(pid=317)[0m     @     0x5637807b7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=317)[0m     @     0x563780842baf _PyEval_EvalCodeWithName
[2m[36m(pid=317)[0m     @     0x563780843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=317)[0m     @     0x5637807b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=317)[0m     @     0x563780842baf _PyEval_EvalCodeWithName
[2m[36m(pid=317)[0m     @     0x563780843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=317)[0m     @     0x5637807b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=317)[0m     @     0x563780842baf _PyEval_EvalCodeWithName
[2m[36m(pid=317)[0m     @     0x563780843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=317)[0m     @     0x5637807b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=317)[0m     @     0x563780842baf _PyEval_EvalCodeWithName
[2m[36m(pid=317)[0m     @     0x563780843643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=317)[0m     @     0x5637807b8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=415)[0m     @     0x5646b6897baf _PyEval_EvalCodeWithName
[2m[36m(pid=415)[0m     @     0x5646b6898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=415)[0m     @     0x5646b680d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=415)[0m     @     0x5646b6897baf _PyEval_EvalCodeWithName
[2m[36m(pid=415)[0m     @     0x5646b6898643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=415)[0m     @     0x5646b680d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x7f53f864c4f5 at::Tensor::copy_()
[2m[36m(pid=409)[0m     @     0x7f53fe6f779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=409)[0m     @     0x55b6f4483fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=409)[0m     @     0x55b6f43deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x55b6f4469baf _PyEval_EvalCodeWithName
[2m[36m(pid=409)[0m     @     0x55b6f446aa20 method_vectorcall
[2m[36m(pid=409)[0m     @     0x55b6f43debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x55b6f4469baf _PyEval_EvalCodeWithName
[2m[36m(pid=409)[0m     @     0x55b6f446a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=409)[0m     @     0x55b6f43df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x55b6f4469baf _PyEval_EvalCodeWithName
[2m[36m(pid=409)[0m     @     0x55b6f446a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=409)[0m     @     0x55b6f43df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x55b6f4469baf _PyEval_EvalCodeWithName
[2m[36m(pid=409)[0m     @     0x55b6f446a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=409)[0m     @     0x55b6f43df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=409)[0m     @     0x55b6f4469baf _PyEval_EvalCodeWithName
[2m[36m(pid=409)[0m     @     0x55b6f446a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=409)[0m     @     0x55b6f43df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x7f22a62cb4f5 at::Tensor::copy_()
[2m[36m(pid=313)[0m     @     0x7f22ac37679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=313)[0m     @     0x55aecf483fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=313)[0m     @     0x55aecf3deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x55aecf469baf _PyEval_EvalCodeWithName
[2m[36m(pid=313)[0m     @     0x55aecf46aa20 method_vectorcall
[2m[36m(pid=313)[0m     @     0x55aecf3debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x55aecf469baf _PyEval_EvalCodeWithName
[2m[36m(pid=313)[0m     @     0x55aecf46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=313)[0m     @     0x55aecf3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x55aecf469baf _PyEval_EvalCodeWithName
[2m[36m(pid=313)[0m     @     0x55aecf46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=313)[0m     @     0x55aecf3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x55aecf469baf _PyEval_EvalCodeWithName
[2m[36m(pid=313)[0m     @     0x55aecf46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=313)[0m     @     0x55aecf3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=313)[0m     @     0x55aecf469baf _PyEval_EvalCodeWithName
[2m[36m(pid=313)[0m     @     0x55aecf46a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=313)[0m     @     0x55aecf3df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x7ee97d821a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=392)[0m     @     0x7ee97d81f388 at::native::copy_impl()
[2m[36m(pid=392)[0m     @     0x7ee97d8215a4 at::native::copy_()
[2m[36m(pid=392)[0m     @     0x7ee97df0c4f5 at::Tensor::copy_()
[2m[36m(pid=392)[0m     @     0x7ee9803df8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=392)[0m     @     0x7ee97df0c4f5 at::Tensor::copy_()
[2m[36m(pid=392)[0m     @     0x7ee983fb779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=392)[0m     @     0x55f48e0dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=392)[0m     @     0x55f48e036b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x55f48e0c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=392)[0m     @     0x55f48e0c2a20 method_vectorcall
[2m[36m(pid=392)[0m     @     0x55f48e036bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x55f48e0c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=392)[0m     @     0x55f48e0c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=392)[0m     @     0x55f48e037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x55f48e0c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=392)[0m     @     0x55f48e0c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=392)[0m     @     0x55f48e037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x55f48e0c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=392)[0m     @     0x55f48e0c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=392)[0m     @     0x55f48e037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=392)[0m     @     0x55f48e0c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=392)[0m     @     0x55f48e0c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=392)[0m     @     0x55f48e037689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x7f9d5d6da4f5 at::Tensor::copy_()
[2m[36m(pid=374)[0m     @     0x7f9d6378579f torch::autograd::THPVariable_copy_()
[2m[36m(pid=374)[0m     @     0x5581be97dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=374)[0m     @     0x5581be8d8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x5581be963baf _PyEval_EvalCodeWithName
[2m[36m(pid=374)[0m     @     0x5581be964a20 method_vectorcall
[2m[36m(pid=374)[0m     @     0x5581be8d8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x5581be963baf _PyEval_EvalCodeWithName
[2m[36m(pid=374)[0m     @     0x5581be964643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=374)[0m     @     0x5581be8d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x5581be963baf _PyEval_EvalCodeWithName
[2m[36m(pid=374)[0m     @     0x5581be964643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=374)[0m     @     0x5581be8d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x5581be963baf _PyEval_EvalCodeWithName
[2m[36m(pid=374)[0m     @     0x5581be964643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=374)[0m     @     0x5581be8d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=374)[0m     @     0x5581be963baf _PyEval_EvalCodeWithName
[2m[36m(pid=374)[0m     @     0x5581be964643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=374)[0m     @     0x5581be8d9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=444)[0m     @     0x5570e0ea0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x7ee5d45ea79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=412)[0m     @     0x559e2c86ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=412)[0m     @     0x559e2c7cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x559e2c855baf _PyEval_EvalCodeWithName
[2m[36m(pid=412)[0m     @     0x559e2c856a20 method_vectorcall
[2m[36m(pid=412)[0m     @     0x559e2c7cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x559e2c855baf _PyEval_EvalCodeWithName
[2m[36m(pid=412)[0m     @     0x559e2c856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=412)[0m     @     0x559e2c7cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x559e2c855baf _PyEval_EvalCodeWithName
[2m[36m(pid=412)[0m     @     0x559e2c856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=412)[0m     @     0x559e2c7cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x559e2c855baf _PyEval_EvalCodeWithName
[2m[36m(pid=412)[0m     @     0x559e2c856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=412)[0m     @     0x559e2c7cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=412)[0m     @     0x559e2c855baf _PyEval_EvalCodeWithName
[2m[36m(pid=412)[0m     @     0x559e2c856643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=412)[0m     @     0x559e2c7cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x7ed903cfba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=398)[0m     @     0x7ed903cf9388 at::native::copy_impl()
[2m[36m(pid=398)[0m     @     0x7ed903cfb5a4 at::native::copy_()
[2m[36m(pid=398)[0m     @     0x7ed9043e64f5 at::Tensor::copy_()
[2m[36m(pid=398)[0m     @     0x7ed9068b98de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=398)[0m     @     0x7ed9043e64f5 at::Tensor::copy_()
[2m[36m(pid=398)[0m     @     0x7ed90a49179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=398)[0m     @     0x5646fb0effd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=398)[0m     @     0x5646fb04ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x5646fb0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=398)[0m     @     0x5646fb0d6a20 method_vectorcall
[2m[36m(pid=398)[0m     @     0x5646fb04abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x5646fb0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=398)[0m     @     0x5646fb0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=398)[0m     @     0x5646fb04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x5646fb0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=398)[0m     @     0x5646fb0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=398)[0m     @     0x5646fb04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x5646fb0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=398)[0m     @     0x5646fb0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=398)[0m     @     0x5646fb04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=398)[0m     @     0x5646fb0d5baf _PyEval_EvalCodeWithName
[2m[36m(pid=398)[0m     @     0x5646fb0d6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=398)[0m     @     0x5646fb04b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x7f9b525faa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=312)[0m     @     0x7f9b525f8388 at::native::copy_impl()
[2m[36m(pid=312)[0m     @     0x7f9b525fa5a4 at::native::copy_()
[2m[36m(pid=312)[0m     @     0x7f9b52ce54f5 at::Tensor::copy_()
[2m[36m(pid=312)[0m     @     0x7f9b551b88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=312)[0m     @     0x7f9b52ce54f5 at::Tensor::copy_()
[2m[36m(pid=312)[0m     @     0x7f9b58d9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=312)[0m     @     0x55821bdcafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=312)[0m     @     0x55821bd25b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bdb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=312)[0m     @     0x55821bdb1a20 method_vectorcall
[2m[36m(pid=312)[0m     @     0x55821bd25bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bdb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=312)[0m     @     0x55821bdb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=312)[0m     @     0x55821bd26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bdb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=312)[0m     @     0x55821bdb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=428)[0m     @     0x558322aae643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=428)[0m     @     0x558322a23689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x7f72f6d87a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=335)[0m     @     0x7f72f6d85388 at::native::copy_impl()
[2m[36m(pid=335)[0m     @     0x7f72f6d875a4 at::native::copy_()
[2m[36m(pid=335)[0m     @     0x7f72f74724f5 at::Tensor::copy_()
[2m[36m(pid=335)[0m     @     0x7f72f99458de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=335)[0m     @     0x7f72f74724f5 at::Tensor::copy_()
[2m[36m(pid=335)[0m     @     0x7f72fd51d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=335)[0m     @     0x557f75579fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=335)[0m     @     0x557f754d4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x557f7555fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x557f75560a20 method_vectorcall
[2m[36m(pid=335)[0m     @     0x557f754d4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x557f7555fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x557f75560643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=335)[0m     @     0x557f754d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x557f7555fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x557f75560643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=335)[0m     @     0x557f754d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x557f7555fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x557f75560643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=335)[0m     @     0x557f754d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=335)[0m     @     0x557f7555fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=335)[0m     @     0x557f75560643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=335)[0m     @     0x557f754d5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x7f4c2de38d91 at::TensorIterator::for_each()
[2m[36m(pid=321)[0m     @     0x7f4c2e71bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=321)[0m     @     0x7f4c2e73ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=321)[0m     @     0x7f4c2dbe0a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=321)[0m     @     0x7f4c2dbde388 at::native::copy_impl()
[2m[36m(pid=321)[0m     @     0x7f4c2dbe05a4 at::native::copy_()
[2m[36m(pid=321)[0m     @     0x7f4c2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=321)[0m     @     0x7f4c3079e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=379)[0m     @     0x7f43fc7e38f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=379)[0m     @     0x7f43fc7e3ad3 at::TensorIterator::for_each()
[2m[36m(pid=379)[0m     @     0x7f43fc7e3d91 at::TensorIterator::for_each()
[2m[36m(pid=379)[0m     @     0x7f43fd0c6b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=379)[0m     @     0x7f43fd0e9c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=379)[0m     @     0x7f43fc58ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=379)[0m     @     0x7f43fc589388 at::native::copy_impl()
[2m[36m(pid=387)[0m     @     0x7ee4c3b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=387)[0m     @     0x7ee4c3b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=387)[0m     @     0x7ee4c2fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=387)[0m     @     0x7ee4c2fc9388 at::native::copy_impl()
[2m[36m(pid=387)[0m     @     0x7ee4c2fcb5a4 at::native::copy_()
[2m[36m(pid=387)[0m     @     0x7ee4c36b64f5 at::Tensor::copy_()
[2m[36m(pid=387)[0m     @     0x7ee4c5b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=387)[0m     @     0x7ee4c36b64f5 at::Tensor::copy_()
[2m[36m(pid=384)[0m     @     0x7efc50574b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=384)[0m     @     0x7efc50597c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=384)[0m     @     0x7efc4fa39a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=384)[0m     @     0x7efc4fa37388 at::native::copy_impl()
[2m[36m(pid=384)[0m     @     0x7efc4fa395a4 at::native::copy_()
[2m[36m(pid=384)[0m     @     0x7efc501244f5 at::Tensor::copy_()
[2m[36m(pid=384)[0m     @     0x7efc525f78de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=384)[0m     @     0x7efc501244f5 at::Tensor::copy_()
[2m[36m(pid=384)[0m     @     0x7efc561cf79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=384)[0m     @     0x562b43984fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=384)[0m     @     0x562b438dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=384)[0m     @     0x562b4396abaf _PyEval_EvalCodeWithName
[2m[36m(pid=384)[0m     @     0x562b4396ba20 method_vectorcall
[2m[36m(pid=384)[0m     @     0x562b438dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=384)[0m     @     0x562b4396abaf _PyEval_EvalCodeWithName
[2m[36m(pid=384)[0m     @     0x562b4396b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=384)[0m     @     0x562b438e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=384)[0m     @     0x562b4396abaf _PyEval_EvalCodeWithName
[2m[36m(pid=384)[0m     @     0x562b4396b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=384)[0m     @     0x562b438e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=384)[0m     @     0x562b4396abaf _PyEval_EvalCodeWithName
[2m[36m(pid=384)[0m     @     0x562b4396b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=384)[0m     @     0x562b438e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=384)[0m     @     0x562b4396abaf _PyEval_EvalCodeWithName
[2m[36m(pid=384)[0m     @     0x562b4396b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=384)[0m     @     0x562b438e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x7f5e879b4d91 at::TensorIterator::for_each()
[2m[36m(pid=339)[0m     @     0x7f5e88297b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=339)[0m     @     0x7f5e882bac1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=339)[0m     @     0x7f5e8775ca93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=339)[0m     @     0x7f5e8775a388 at::native::copy_impl()
[2m[36m(pid=339)[0m     @     0x7f5e8775c5a4 at::native::copy_()
[2m[36m(pid=339)[0m     @     0x7f5e87e474f5 at::Tensor::copy_()
[2m[36m(pid=339)[0m     @     0x7f5e8a31a8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=368)[0m     @     0x7ecd8531aad3 at::TensorIterator::for_each()
[2m[36m(pid=368)[0m     @     0x7ecd8531ad91 at::TensorIterator::for_each()
[2m[36m(pid=368)[0m     @     0x7ecd85bfdb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=368)[0m     @     0x7ecd85c20c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=368)[0m     @     0x7ecd850c2a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=368)[0m     @     0x7ecd850c0388 at::native::copy_impl()
[2m[36m(pid=368)[0m     @     0x7ecd850c25a4 at::native::copy_()
[2m[36m(pid=368)[0m     @     0x7ecd857ad4f5 at::Tensor::copy_()
[2m[36m(pid=372)[0m     @     0x7edd18e22d91 at::TensorIterator::for_each()
[2m[36m(pid=372)[0m     @     0x7edd19705b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=372)[0m     @     0x7edd19728c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=372)[0m     @     0x7edd18bcaa93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=372)[0m     @     0x7edd18bc8388 at::native::copy_impl()
[2m[36m(pid=372)[0m     @     0x7edd18bca5a4 at::native::copy_()
[2m[36m(pid=372)[0m     @     0x7edd192b54f5 at::Tensor::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d02b657db _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=344)[0m     @     0x7f9d02b688f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=344)[0m     @     0x7f9d02b68ad3 at::TensorIterator::for_each()
[2m[36m(pid=344)[0m     @     0x7f9d02b68d91 at::TensorIterator::for_each()
[2m[36m(pid=344)[0m     @     0x7f9d0344bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=344)[0m     @     0x7f9d0346ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=324)[0m     @     0x7f7d782204f5 at::Tensor::copy_()
[2m[36m(pid=324)[0m     @     0x7f7d7e2cb79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=324)[0m     @     0x55905e68afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=324)[0m     @     0x55905e5e5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=324)[0m     @     0x55905e670baf _PyEval_EvalCodeWithName
[2m[36m(pid=324)[0m     @     0x55905e671a20 method_vectorcall
[2m[36m(pid=324)[0m     @     0x55905e5e5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=324)[0m     @     0x55905e670baf _PyEval_EvalCodeWithName
[2m[36m(pid=324)[0m     @     0x55905e671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=324)[0m     @     0x55905e5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=324)[0m     @     0x55905e670baf _PyEval_EvalCodeWithName
[2m[36m(pid=324)[0m     @     0x55905e671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=324)[0m     @     0x55905e5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=324)[0m     @     0x55905e670baf _PyEval_EvalCodeWithName
[2m[36m(pid=324)[0m     @     0x55905e671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=324)[0m     @     0x55905e5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=324)[0m     @     0x55905e670baf _PyEval_EvalCodeWithName
[2m[36m(pid=324)[0m     @     0x55905e671643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=324)[0m     @     0x55905e5e6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x7f935058ba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=322)[0m     @     0x7f9350589388 at::native::copy_impl()
[2m[36m(pid=322)[0m     @     0x7f935058b5a4 at::native::copy_()
[2m[36m(pid=322)[0m     @     0x7f9350c764f5 at::Tensor::copy_()
[2m[36m(pid=322)[0m     @     0x7f93531498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=322)[0m     @     0x7f9350c764f5 at::Tensor::copy_()
[2m[36m(pid=322)[0m     @     0x7f9356d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=322)[0m     @     0x55b76f250fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=322)[0m     @     0x55b76f1abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x55b76f236baf _PyEval_EvalCodeWithName
[2m[36m(pid=322)[0m     @     0x55b76f237a20 method_vectorcall
[2m[36m(pid=322)[0m     @     0x55b76f1abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x55b76f236baf _PyEval_EvalCodeWithName
[2m[36m(pid=322)[0m     @     0x55b76f237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=322)[0m     @     0x55b76f1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x55b76f236baf _PyEval_EvalCodeWithName
[2m[36m(pid=322)[0m     @     0x55b76f237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=322)[0m     @     0x55b76f1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x55b76f236baf _PyEval_EvalCodeWithName
[2m[36m(pid=322)[0m     @     0x55b76f237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=322)[0m     @     0x55b76f1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=322)[0m     @     0x55b76f236baf _PyEval_EvalCodeWithName
[2m[36m(pid=322)[0m     @     0x55b76f237643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=322)[0m     @     0x55b76f1ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x7f776c2cf4f5 at::Tensor::copy_()
[2m[36m(pid=381)[0m     @     0x7f776e7a28de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=381)[0m     @     0x7f776c2cf4f5 at::Tensor::copy_()
[2m[36m(pid=381)[0m     @     0x7f777237a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=381)[0m     @     0x55d512b4ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=381)[0m     @     0x55d512aaab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x55d512b35baf _PyEval_EvalCodeWithName
[2m[36m(pid=381)[0m     @     0x55d512b36a20 method_vectorcall
[2m[36m(pid=381)[0m     @     0x55d512aaabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x55d512b35baf _PyEval_EvalCodeWithName
[2m[36m(pid=381)[0m     @     0x55d512b36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=381)[0m     @     0x55d512aab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x55d512b35baf _PyEval_EvalCodeWithName
[2m[36m(pid=381)[0m     @     0x55d512b36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=381)[0m     @     0x55d512aab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x55d512b35baf _PyEval_EvalCodeWithName
[2m[36m(pid=381)[0m     @     0x55d512b36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=381)[0m     @     0x55d512aab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=381)[0m     @     0x55d512b35baf _PyEval_EvalCodeWithName
[2m[36m(pid=381)[0m     @     0x55d512b36643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=381)[0m     @     0x55d512aab689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x7f42dd1275a4 at::native::copy_()
[2m[36m(pid=320)[0m     @     0x7f42dd8124f5 at::Tensor::copy_()
[2m[36m(pid=320)[0m     @     0x7f42dfce58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=320)[0m     @     0x7f42dd8124f5 at::Tensor::copy_()
[2m[36m(pid=328)[0m     @     0x7fb1d6db4a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=328)[0m     @     0x7fb1d6db2388 at::native::copy_impl()
[2m[36m(pid=328)[0m     @     0x7fb1d6db45a4 at::native::copy_()
[2m[36m(pid=328)[0m     @     0x7fb1d749f4f5 at::Tensor::copy_()
[2m[36m(pid=328)[0m     @     0x7fb1d99728de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=397)[0m     @     0x7f903744bb22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=397)[0m     @     0x7f903746ec1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=397)[0m     @     0x7f9036910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=397)[0m     @     0x7f903690e388 at::native::copy_impl()
[2m[36m(pid=397)[0m     @     0x7f90369105a4 at::native::copy_()
[2m[36m(pid=310)[0m     @     0x7f8fe064e4f5 at::Tensor::copy_()
[2m[36m(pid=310)[0m     @     0x7f8fe2b218de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=310)[0m     @     0x7f8fe064e4f5 at::Tensor::copy_()
[2m[36m(pid=310)[0m     @     0x7f8fe66f979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=310)[0m     @     0x5563e9f39fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=310)[0m     @     0x5563e9e94b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=310)[0m     @     0x5563e9f1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=310)[0m     @     0x5563e9f20a20 method_vectorcall
[2m[36m(pid=310)[0m     @     0x5563e9e94bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=310)[0m     @     0x5563e9f1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=310)[0m     @     0x5563e9f20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=310)[0m     @     0x5563e9e95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=310)[0m     @     0x5563e9f1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=310)[0m     @     0x5563e9f20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=310)[0m     @     0x5563e9e95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=310)[0m     @     0x5563e9f1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=310)[0m     @     0x5563e9f20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=310)[0m     @     0x5563e9e95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=310)[0m     @     0x5563e9f1fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=310)[0m     @     0x5563e9f20643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=310)[0m     @     0x5563e9e95689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x7edb9c820a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=407)[0m     @     0x7edb9c81e388 at::native::copy_impl()
[2m[36m(pid=407)[0m     @     0x7edb9c8205a4 at::native::copy_()
[2m[36m(pid=407)[0m     @     0x7edb9cf0b4f5 at::Tensor::copy_()
[2m[36m(pid=407)[0m     @     0x7edb9f3de8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=407)[0m     @     0x7edb9cf0b4f5 at::Tensor::copy_()
[2m[36m(pid=407)[0m     @     0x7edba2fb679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=407)[0m     @     0x55c616854fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=407)[0m     @     0x55c6167afb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x55c61683abaf _PyEval_EvalCodeWithName
[2m[36m(pid=407)[0m     @     0x55c61683ba20 method_vectorcall
[2m[36m(pid=407)[0m     @     0x55c6167afbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x55c61683abaf _PyEval_EvalCodeWithName
[2m[36m(pid=407)[0m     @     0x55c61683b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=407)[0m     @     0x55c6167b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x55c61683abaf _PyEval_EvalCodeWithName
[2m[36m(pid=407)[0m     @     0x55c61683b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=407)[0m     @     0x55c6167b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x55c61683abaf _PyEval_EvalCodeWithName
[2m[36m(pid=407)[0m     @     0x55c61683b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=407)[0m     @     0x55c6167b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x7f3ef72238f7 at::TensorIterator::serial_for_each()
[2m[36m(pid=426)[0m     @     0x7f03d9ad7a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=426)[0m     @     0x7f03d9ad5388 at::native::copy_impl()
[2m[36m(pid=426)[0m     @     0x7f03d9ad75a4 at::native::copy_()
[2m[36m(pid=426)[0m     @     0x7f03da1c24f5 at::Tensor::copy_()
[2m[36m(pid=426)[0m     @     0x7f03dc6958de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=426)[0m     @     0x7f03da1c24f5 at::Tensor::copy_()
[2m[36m(pid=426)[0m     @     0x7f03e026d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=426)[0m     @     0x56275d308fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=426)[0m     @     0x56275d263b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=426)[0m     @     0x56275d2eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=426)[0m     @     0x56275d2efa20 method_vectorcall
[2m[36m(pid=426)[0m     @     0x56275d263bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=426)[0m     @     0x56275d2eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=426)[0m     @     0x56275d2ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=426)[0m     @     0x56275d264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=426)[0m     @     0x56275d2eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=426)[0m     @     0x56275d2ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=426)[0m     @     0x56275d264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=426)[0m     @     0x56275d2eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=426)[0m     @     0x56275d2ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=426)[0m     @     0x56275d264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x7f5aee0435a4 at::native::copy_()
[2m[36m(pid=375)[0m     @     0x7f5aee72e4f5 at::Tensor::copy_()
[2m[36m(pid=375)[0m     @     0x7f5af0c018de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=375)[0m     @     0x7f5aee72e4f5 at::Tensor::copy_()
[2m[36m(pid=375)[0m     @     0x7f5af47d979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=375)[0m     @     0x56096b6dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=375)[0m     @     0x56096b63ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x56096b6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=375)[0m     @     0x56096b6c6a20 method_vectorcall
[2m[36m(pid=375)[0m     @     0x56096b63abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x56096b6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=375)[0m     @     0x56096b6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=375)[0m     @     0x56096b63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x56096b6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=375)[0m     @     0x56096b6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=375)[0m     @     0x56096b63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x56096b6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=375)[0m     @     0x56096b6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=375)[0m     @     0x56096b63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=375)[0m     @     0x56096b6c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=375)[0m     @     0x56096b6c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=375)[0m     @     0x56096b63b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x7f7f698b04f5 at::Tensor::copy_()
[2m[36m(pid=315)[0m     @     0x7f7f6bd838de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=315)[0m     @     0x7f7f698b04f5 at::Tensor::copy_()
[2m[36m(pid=315)[0m     @     0x7f7f6f95b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=315)[0m     @     0x55c631c72fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=315)[0m     @     0x55c631bcdb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x55c631c58baf _PyEval_EvalCodeWithName
[2m[36m(pid=315)[0m     @     0x55c631c59a20 method_vectorcall
[2m[36m(pid=315)[0m     @     0x55c631bcdbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x55c631c58baf _PyEval_EvalCodeWithName
[2m[36m(pid=315)[0m     @     0x55c631c59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=315)[0m     @     0x55c631bce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x55c631c58baf _PyEval_EvalCodeWithName
[2m[36m(pid=315)[0m     @     0x55c631c59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=315)[0m     @     0x55c631bce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x55c631c58baf _PyEval_EvalCodeWithName
[2m[36m(pid=315)[0m     @     0x55c631c59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=315)[0m     @     0x55c631bce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=315)[0m     @     0x55c631c58baf _PyEval_EvalCodeWithName
[2m[36m(pid=315)[0m     @     0x55c631c59643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=315)[0m     @     0x55c631bce689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x7f228c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=329)[0m     @     0x7f228ebcf8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=329)[0m     @     0x7f228c6fc4f5 at::Tensor::copy_()
[2m[36m(pid=329)[0m     @     0x7f22927a779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=329)[0m     @     0x563c880dffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=329)[0m     @     0x563c8803ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x563c880c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=329)[0m     @     0x563c880c6a20 method_vectorcall
[2m[36m(pid=329)[0m     @     0x563c8803abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x563c880c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=329)[0m     @     0x563c880c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=329)[0m     @     0x563c8803b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x563c880c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=329)[0m     @     0x563c880c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=329)[0m     @     0x563c8803b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x563c880c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=329)[0m     @     0x563c880c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=329)[0m     @     0x563c8803b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=329)[0m     @     0x563c880c5baf _PyEval_EvalCodeWithName
[2m[36m(pid=329)[0m     @     0x563c880c6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=329)[0m     @     0x563c8803b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x7edabd7ce4f5 at::Tensor::copy_()
[2m[36m(pid=346)[0m     @     0x7edabfca18de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=346)[0m     @     0x7edabd7ce4f5 at::Tensor::copy_()
[2m[36m(pid=346)[0m     @     0x7edac387979f torch::autograd::THPVariable_copy_()
[2m[36m(pid=346)[0m     @     0x5578f23e1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=346)[0m     @     0x5578f233cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x5578f23c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=346)[0m     @     0x5578f23c8a20 method_vectorcall
[2m[36m(pid=346)[0m     @     0x5578f233cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x5578f23c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=346)[0m     @     0x5578f23c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=346)[0m     @     0x5578f233d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x5578f23c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=346)[0m     @     0x5578f23c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=346)[0m     @     0x5578f233d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x5578f23c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=346)[0m     @     0x5578f23c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=346)[0m     @     0x5578f233d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=346)[0m     @     0x5578f23c7baf _PyEval_EvalCodeWithName
[2m[36m(pid=346)[0m     @     0x5578f23c8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=346)[0m     @     0x5578f233d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x7fb9f02e04f5 at::Tensor::copy_()
[2m[36m(pid=316)[0m     @     0x7fb9f27b38de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=316)[0m     @     0x7fb9f02e04f5 at::Tensor::copy_()
[2m[36m(pid=316)[0m     @     0x7fb9f638b79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=316)[0m     @     0x55763377afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=316)[0m     @     0x5576336d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x557633760baf _PyEval_EvalCodeWithName
[2m[36m(pid=316)[0m     @     0x557633761a20 method_vectorcall
[2m[36m(pid=316)[0m     @     0x5576336d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x557633760baf _PyEval_EvalCodeWithName
[2m[36m(pid=316)[0m     @     0x557633761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=316)[0m     @     0x5576336d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x557633760baf _PyEval_EvalCodeWithName
[2m[36m(pid=316)[0m     @     0x557633761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=316)[0m     @     0x5576336d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x557633760baf _PyEval_EvalCodeWithName
[2m[36m(pid=316)[0m     @     0x557633761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=316)[0m     @     0x5576336d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=316)[0m     @     0x557633760baf _PyEval_EvalCodeWithName
[2m[36m(pid=316)[0m     @     0x557633761643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=316)[0m     @     0x5576336d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x7efc89e524f5 at::Tensor::copy_()
[2m[36m(pid=309)[0m     @     0x7efc8c3258de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=309)[0m     @     0x7efc89e524f5 at::Tensor::copy_()
[2m[36m(pid=309)[0m     @     0x7efc8fefd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=309)[0m     @     0x56297b46ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=309)[0m     @     0x56297b3cab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x56297b455baf _PyEval_EvalCodeWithName
[2m[36m(pid=309)[0m     @     0x56297b456a20 method_vectorcall
[2m[36m(pid=309)[0m     @     0x56297b3cabfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x56297b455baf _PyEval_EvalCodeWithName
[2m[36m(pid=309)[0m     @     0x56297b456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=309)[0m     @     0x56297b3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x56297b455baf _PyEval_EvalCodeWithName
[2m[36m(pid=309)[0m     @     0x56297b456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=309)[0m     @     0x56297b3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x56297b455baf _PyEval_EvalCodeWithName
[2m[36m(pid=309)[0m     @     0x56297b456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=309)[0m     @     0x56297b3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=309)[0m     @     0x56297b455baf _PyEval_EvalCodeWithName
[2m[36m(pid=309)[0m     @     0x56297b456643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=309)[0m     @     0x56297b3cb689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x7f2ce69d48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=318)[0m     @     0x7f2ce45014f5 at::Tensor::copy_()
[2m[36m(pid=318)[0m     @     0x7f2cea1a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=318)[0m     @     0x55b461b16fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=318)[0m     @     0x55b461a71b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x55b461afcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=318)[0m     @     0x55b461afda20 method_vectorcall
[2m[36m(pid=318)[0m     @     0x55b461a71bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x55b461afcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=318)[0m     @     0x55b461afd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=318)[0m     @     0x55b461a72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x55b461afcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=318)[0m     @     0x55b461afd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=318)[0m     @     0x55b461a72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x55b461afcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=318)[0m     @     0x55b461afd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=318)[0m     @     0x55b461a72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=318)[0m     @     0x55b461afcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=318)[0m     @     0x55b461afd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=318)[0m     @     0x55b461a72689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x7eef6c79e8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=319)[0m     @     0x7eef6a2cb4f5 at::Tensor::copy_()
[2m[36m(pid=319)[0m     @     0x7eef7037679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=319)[0m     @     0x55e4aafadfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=319)[0m     @     0x55e4aaf08b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x55e4aaf93baf _PyEval_EvalCodeWithName
[2m[36m(pid=319)[0m     @     0x55e4aaf94a20 method_vectorcall
[2m[36m(pid=319)[0m     @     0x55e4aaf08bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x55e4aaf93baf _PyEval_EvalCodeWithName
[2m[36m(pid=319)[0m     @     0x55e4aaf94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=319)[0m     @     0x55e4aaf09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x55e4aaf93baf _PyEval_EvalCodeWithName
[2m[36m(pid=319)[0m     @     0x55e4aaf94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=319)[0m     @     0x55e4aaf09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x55e4aaf93baf _PyEval_EvalCodeWithName
[2m[36m(pid=319)[0m     @     0x55e4aaf94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=319)[0m     @     0x55e4aaf09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=319)[0m     @     0x55e4aaf93baf _PyEval_EvalCodeWithName
[2m[36m(pid=319)[0m     @     0x55e4aaf94643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=319)[0m     @     0x55e4aaf09689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x7eea0a9048de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=326)[0m     @     0x7eea084314f5 at::Tensor::copy_()
[2m[36m(pid=326)[0m     @     0x7eea0e4dc79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=326)[0m     @     0x55a02150ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=326)[0m     @     0x55a02146ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x55a0214f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=326)[0m     @     0x55a0214f6a20 method_vectorcall
[2m[36m(pid=326)[0m     @     0x55a02146abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x55a0214f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=326)[0m     @     0x55a0214f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=326)[0m     @     0x55a02146b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x55a0214f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=326)[0m     @     0x55a0214f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=326)[0m     @     0x55a02146b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x55a0214f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=326)[0m     @     0x55a0214f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=326)[0m     @     0x55a02146b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=326)[0m     @     0x55a0214f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=326)[0m     @     0x55a0214f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=326)[0m     @     0x55a02146b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x7fa8449484f5 at::Tensor::copy_()
[2m[36m(pid=378)[0m     @     0x7fa84a9f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=378)[0m     @     0x5653d1b18fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=378)[0m     @     0x5653d1a73b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x5653d1afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=378)[0m     @     0x5653d1affa20 method_vectorcall
[2m[36m(pid=378)[0m     @     0x5653d1a73bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x5653d1afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=378)[0m     @     0x5653d1aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=378)[0m     @     0x5653d1a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x5653d1afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=378)[0m     @     0x5653d1aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=378)[0m     @     0x5653d1a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x5653d1afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=378)[0m     @     0x5653d1aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=378)[0m     @     0x5653d1a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=378)[0m     @     0x5653d1afebaf _PyEval_EvalCodeWithName
[2m[36m(pid=378)[0m     @     0x5653d1aff643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=378)[0m     @     0x5653d1a74689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x7f0f287924f5 at::Tensor::copy_()
[2m[36m(pid=380)[0m     @     0x7f0f2ac658de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=380)[0m     @     0x7f0f287924f5 at::Tensor::copy_()
[2m[36m(pid=380)[0m     @     0x7f0f2e83d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=380)[0m     @     0x564bddc34fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=380)[0m     @     0x564bddb8fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x564bddc1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=380)[0m     @     0x564bddc1ba20 method_vectorcall
[2m[36m(pid=380)[0m     @     0x564bddb8fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x564bddc1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=380)[0m     @     0x564bddc1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=380)[0m     @     0x564bddb90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x564bddc1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=380)[0m     @     0x564bddc1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=380)[0m     @     0x564bddb90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x564bddc1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=380)[0m     @     0x564bddc1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=380)[0m     @     0x564bddb90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=380)[0m     @     0x564bddc1abaf _PyEval_EvalCodeWithName
[2m[36m(pid=380)[0m     @     0x564bddc1b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=380)[0m     @     0x564bddb90689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x7f3bae5ca8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=446)[0m     @     0x7f3bac0f74f5 at::Tensor::copy_()
[2m[36m(pid=446)[0m     @     0x7f3bb21a279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=446)[0m     @     0x5612fb0d0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=446)[0m     @     0x5612fb02bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x5612fb0b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=446)[0m     @     0x5612fb0b7a20 method_vectorcall
[2m[36m(pid=446)[0m     @     0x5612fb02bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x5612fb0b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=446)[0m     @     0x5612fb0b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=446)[0m     @     0x5612fb02c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x5612fb0b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=446)[0m     @     0x5612fb0b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=446)[0m     @     0x5612fb02c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x5612fb0b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=446)[0m     @     0x5612fb0b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=446)[0m     @     0x5612fb02c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=446)[0m     @     0x5612fb0b6baf _PyEval_EvalCodeWithName
[2m[36m(pid=446)[0m     @     0x5612fb0b7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=446)[0m     @     0x5612fb02c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x7f1683cc24f5 at::Tensor::copy_()
[2m[36m(pid=389)[0m     @     0x7f1689d6d79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=389)[0m     @     0x55a252a71fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=389)[0m     @     0x55a2529ccb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x55a252a57baf _PyEval_EvalCodeWithName
[2m[36m(pid=389)[0m     @     0x55a252a58a20 method_vectorcall
[2m[36m(pid=389)[0m     @     0x55a2529ccbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x55a252a57baf _PyEval_EvalCodeWithName
[2m[36m(pid=389)[0m     @     0x55a252a58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=389)[0m     @     0x55a2529cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x55a252a57baf _PyEval_EvalCodeWithName
[2m[36m(pid=389)[0m     @     0x55a252a58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=389)[0m     @     0x55a2529cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x55a252a57baf _PyEval_EvalCodeWithName
[2m[36m(pid=389)[0m     @     0x55a252a58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=389)[0m     @     0x55a2529cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=389)[0m     @     0x55a252a57baf _PyEval_EvalCodeWithName
[2m[36m(pid=389)[0m     @     0x55a252a58643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=389)[0m     @     0x55a2529cd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x7f5ea0b5d5a4 at::native::copy_()
[2m[36m(pid=341)[0m     @     0x7f5ea12484f5 at::Tensor::copy_()
[2m[36m(pid=341)[0m     @     0x7f5ea371b8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=341)[0m     @     0x7f5ea12484f5 at::Tensor::copy_()
[2m[36m(pid=341)[0m     @     0x7f5ea72f379f torch::autograd::THPVariable_copy_()
[2m[36m(pid=341)[0m     @     0x55c40b4ecfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=417)[0m     @     0x7ed7d52f8388 at::native::copy_impl()
[2m[36m(pid=417)[0m     @     0x7ed7d52fa5a4 at::native::copy_()
[2m[36m(pid=417)[0m     @     0x7ed7d59e54f5 at::Tensor::copy_()
[2m[36m(pid=417)[0m     @     0x7ed7d7eb88de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=386)[0m     @     0x7f053374ed91 at::TensorIterator::for_each()
[2m[36m(pid=386)[0m     @     0x7f0534031b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=386)[0m     @     0x7f0534054c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=386)[0m     @     0x7f05334f6a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=386)[0m     @     0x7f05334f4388 at::native::copy_impl()
[2m[36m(pid=383)[0m     @     0x7f1449c915a4 at::native::copy_()
[2m[36m(pid=383)[0m     @     0x7f144a37c4f5 at::Tensor::copy_()
[2m[36m(pid=383)[0m     @     0x7f144c84f8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=422)[0m     @     0x7f96e7dda8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=422)[0m     @     0x7f96e59074f5 at::Tensor::copy_()
[2m[36m(pid=422)[0m     @     0x7f96eb9b279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=422)[0m     @     0x55839c9a0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=422)[0m     @     0x55839c8fbb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=422)[0m     @     0x55839c986baf _PyEval_EvalCodeWithName
[2m[36m(pid=422)[0m     @     0x55839c987a20 method_vectorcall
[2m[36m(pid=422)[0m     @     0x55839c8fbbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=422)[0m     @     0x55839c986baf _PyEval_EvalCodeWithName
[2m[36m(pid=422)[0m     @     0x55839c987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=422)[0m     @     0x55839c8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=422)[0m     @     0x55839c986baf _PyEval_EvalCodeWithName
[2m[36m(pid=422)[0m     @     0x55839c987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=422)[0m     @     0x55839c8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=422)[0m     @     0x55839c986baf _PyEval_EvalCodeWithName
[2m[36m(pid=422)[0m     @     0x55839c987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=422)[0m     @     0x55839c8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=422)[0m     @     0x55839c986baf _PyEval_EvalCodeWithName
[2m[36m(pid=422)[0m     @     0x55839c987643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=422)[0m     @     0x55839c8fc689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x7f7701a7779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=366)[0m     @     0x55b1b4f5dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=366)[0m     @     0x55b1b4eb8b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x55b1b4f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=366)[0m     @     0x55b1b4f44a20 method_vectorcall
[2m[36m(pid=366)[0m     @     0x55b1b4eb8bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x55b1b4f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=366)[0m     @     0x55b1b4f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=366)[0m     @     0x55b1b4eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x55b1b4f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=366)[0m     @     0x55b1b4f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=366)[0m     @     0x55b1b4eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x55b1b4f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=366)[0m     @     0x55b1b4f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=366)[0m     @     0x55b1b4eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=366)[0m     @     0x55b1b4f43baf _PyEval_EvalCodeWithName
[2m[36m(pid=366)[0m     @     0x55b1b4f44643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=366)[0m     @     0x55b1b4eb9689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x7f6c317e58de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=327)[0m     @     0x7f6c2f3124f5 at::Tensor::copy_()
[2m[36m(pid=327)[0m     @     0x7f6c353bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=327)[0m     @     0x562a94a73fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=327)[0m     @     0x562a949ceb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x562a94a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=327)[0m     @     0x562a94a5aa20 method_vectorcall
[2m[36m(pid=327)[0m     @     0x562a949cebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x562a94a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=327)[0m     @     0x562a94a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=327)[0m     @     0x562a949cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x562a94a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=327)[0m     @     0x562a94a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=327)[0m     @     0x562a949cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x562a94a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=327)[0m     @     0x562a94a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=327)[0m     @     0x562a949cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=327)[0m     @     0x562a94a59baf _PyEval_EvalCodeWithName
[2m[36m(pid=327)[0m     @     0x562a94a5a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=327)[0m     @     0x562a949cf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bd26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bdb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=312)[0m     @     0x55821bdb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=312)[0m     @     0x55821bd26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=312)[0m     @     0x55821bdb0baf _PyEval_EvalCodeWithName
[2m[36m(pid=312)[0m     @     0x55821bdb1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=312)[0m     @     0x55821bd26689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x7f4c2e2cb4f5 at::Tensor::copy_()
[2m[36m(pid=321)[0m     @     0x7f4c3437679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=321)[0m     @     0x55f8c6fd4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=321)[0m     @     0x55f8c6f2fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x55f8c6fbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=321)[0m     @     0x55f8c6fbba20 method_vectorcall
[2m[36m(pid=321)[0m     @     0x55f8c6f2fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x55f8c6fbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=321)[0m     @     0x55f8c6fbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=321)[0m     @     0x55f8c6f30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x55f8c6fbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=321)[0m     @     0x55f8c6fbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=321)[0m     @     0x55f8c6f30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x55f8c6fbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=321)[0m     @     0x55f8c6fbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=321)[0m     @     0x55f8c6f30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=321)[0m     @     0x55f8c6fbabaf _PyEval_EvalCodeWithName
[2m[36m(pid=321)[0m     @     0x55f8c6fbb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=321)[0m     @     0x55f8c6f30689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x7f43fc58b5a4 at::native::copy_()
[2m[36m(pid=387)[0m     @     0x7ee4c976179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=387)[0m     @     0x561a12b99fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=387)[0m     @     0x561a12af4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=387)[0m     @     0x561a12b7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=387)[0m     @     0x561a12b80a20 method_vectorcall
[2m[36m(pid=387)[0m     @     0x561a12af4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=387)[0m     @     0x561a12b7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=387)[0m     @     0x561a12b80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=387)[0m     @     0x561a12af5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=387)[0m     @     0x561a12b7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=387)[0m     @     0x561a12b80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=387)[0m     @     0x561a12af5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=387)[0m     @     0x561a12b7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=387)[0m     @     0x561a12b80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=387)[0m     @     0x561a12af5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=387)[0m     @     0x561a12b7fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=387)[0m     @     0x561a12b80643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=387)[0m     @     0x561a12af5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x7f5e87e474f5 at::Tensor::copy_()
[2m[36m(pid=339)[0m     @     0x7f5e8def279f torch::autograd::THPVariable_copy_()
[2m[36m(pid=339)[0m     @     0x55aac2deafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=339)[0m     @     0x55aac2d45b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x55aac2dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=339)[0m     @     0x55aac2dd1a20 method_vectorcall
[2m[36m(pid=339)[0m     @     0x55aac2d45bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x55aac2dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=339)[0m     @     0x55aac2dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=339)[0m     @     0x55aac2d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x55aac2dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=339)[0m     @     0x55aac2dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=339)[0m     @     0x55aac2d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x55aac2dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=339)[0m     @     0x55aac2dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=339)[0m     @     0x55aac2d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=339)[0m     @     0x55aac2dd0baf _PyEval_EvalCodeWithName
[2m[36m(pid=339)[0m     @     0x55aac2dd1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=339)[0m     @     0x55aac2d46689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x7ecd87c808de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=368)[0m     @     0x7ecd857ad4f5 at::Tensor::copy_()
[2m[36m(pid=368)[0m     @     0x7ecd8b85879f torch::autograd::THPVariable_copy_()
[2m[36m(pid=368)[0m     @     0x55cba0794fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=368)[0m     @     0x55cba06efb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x55cba077abaf _PyEval_EvalCodeWithName
[2m[36m(pid=368)[0m     @     0x55cba077ba20 method_vectorcall
[2m[36m(pid=368)[0m     @     0x55cba06efbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x55cba077abaf _PyEval_EvalCodeWithName
[2m[36m(pid=368)[0m     @     0x55cba077b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=368)[0m     @     0x55cba06f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x55cba077abaf _PyEval_EvalCodeWithName
[2m[36m(pid=368)[0m     @     0x55cba077b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=368)[0m     @     0x55cba06f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x55cba077abaf _PyEval_EvalCodeWithName
[2m[36m(pid=368)[0m     @     0x55cba077b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=368)[0m     @     0x55cba06f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=368)[0m     @     0x55cba077abaf _PyEval_EvalCodeWithName
[2m[36m(pid=368)[0m     @     0x55cba077b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=368)[0m     @     0x55cba06f0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x7edd1b7888de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=372)[0m     @     0x7edd192b54f5 at::Tensor::copy_()
[2m[36m(pid=372)[0m     @     0x7edd1f36079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=372)[0m     @     0x55b04a913fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=372)[0m     @     0x55b04a86eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x55b04a8f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=372)[0m     @     0x55b04a8faa20 method_vectorcall
[2m[36m(pid=372)[0m     @     0x55b04a86ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x55b04a8f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=372)[0m     @     0x55b04a8fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=372)[0m     @     0x55b04a86f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x55b04a8f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=372)[0m     @     0x55b04a8fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=372)[0m     @     0x55b04a86f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x55b04a8f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=372)[0m     @     0x55b04a8fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=372)[0m     @     0x55b04a86f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=372)[0m     @     0x55b04a8f9baf _PyEval_EvalCodeWithName
[2m[36m(pid=372)[0m     @     0x55b04a8fa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=372)[0m     @     0x55b04a86f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x7f9d02910a93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=344)[0m     @     0x7f9d0290e388 at::native::copy_impl()
[2m[36m(pid=320)[0m     @     0x7f42e38bd79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=320)[0m     @     0x55b5477a7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=320)[0m     @     0x55b547702b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x55b54778dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=320)[0m     @     0x55b54778ea20 method_vectorcall
[2m[36m(pid=320)[0m     @     0x55b547702bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x55b54778dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=320)[0m     @     0x55b54778e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=320)[0m     @     0x55b547703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x55b54778dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=320)[0m     @     0x55b54778e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=320)[0m     @     0x55b547703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x55b54778dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=320)[0m     @     0x55b54778e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=320)[0m     @     0x55b547703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=320)[0m     @     0x55b54778dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=320)[0m     @     0x55b54778e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=320)[0m     @     0x55b547703689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x7fb1d749f4f5 at::Tensor::copy_()
[2m[36m(pid=328)[0m     @     0x7fb1dd54a79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=328)[0m     @     0x55f135f26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=328)[0m     @     0x55f135e81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x55f135f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=328)[0m     @     0x55f135f0da20 method_vectorcall
[2m[36m(pid=328)[0m     @     0x55f135e81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x55f135f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=328)[0m     @     0x55f135f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=328)[0m     @     0x55f135e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x55f135f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=328)[0m     @     0x55f135f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=328)[0m     @     0x55f135e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x55f135f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=328)[0m     @     0x55f135f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=328)[0m     @     0x55f135e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=328)[0m     @     0x55f135f0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=328)[0m     @     0x55f135f0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=328)[0m     @     0x55f135e82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x7f9036ffb4f5 at::Tensor::copy_()
[2m[36m(pid=397)[0m     @     0x7f90394ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=397)[0m     @     0x7f9036ffb4f5 at::Tensor::copy_()
[2m[36m(pid=397)[0m     @     0x7f903d0a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=397)[0m     @     0x55f681cddfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=397)[0m     @     0x55f681c38b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x55f681cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=397)[0m     @     0x55f681cc4a20 method_vectorcall
[2m[36m(pid=397)[0m     @     0x55f681c38bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x55f681cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=397)[0m     @     0x55f681cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=397)[0m     @     0x55f681c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x55f681cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=397)[0m     @     0x55f681cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=397)[0m     @     0x55f681c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x55f681cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=397)[0m     @     0x55f681cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=397)[0m     @     0x55f681c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=397)[0m     @     0x55f681cc3baf _PyEval_EvalCodeWithName
[2m[36m(pid=397)[0m     @     0x55f681cc4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=397)[0m     @     0x55f681c39689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=407)[0m     @     0x55c61683abaf _PyEval_EvalCodeWithName
[2m[36m(pid=407)[0m     @     0x55c61683b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=407)[0m     @     0x55c6167b0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x7f3ef7223ad3 at::TensorIterator::for_each()
[2m[36m(pid=426)[0m     @     0x56275d2eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=426)[0m     @     0x56275d2ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=426)[0m     @     0x56275d264689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b447b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b4d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=341)[0m     @     0x55c40b4d3a20 method_vectorcall
[2m[36m(pid=341)[0m     @     0x55c40b447bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b4d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=341)[0m     @     0x55c40b4d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=341)[0m     @     0x55c40b448689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b4d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=341)[0m     @     0x55c40b4d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=341)[0m     @     0x55c40b448689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b4d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=341)[0m     @     0x55c40b4d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=341)[0m     @     0x55c40b448689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=341)[0m     @     0x55c40b4d2baf _PyEval_EvalCodeWithName
[2m[36m(pid=341)[0m     @     0x55c40b4d3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=341)[0m     @     0x55c40b448689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x7ed7d59e54f5 at::Tensor::copy_()
[2m[36m(pid=417)[0m     @     0x7ed7dba9079f torch::autograd::THPVariable_copy_()
[2m[36m(pid=417)[0m     @     0x55917cc0dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=417)[0m     @     0x55917cb68b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x55917cbf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=417)[0m     @     0x55917cbf4a20 method_vectorcall
[2m[36m(pid=417)[0m     @     0x55917cb68bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x55917cbf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=417)[0m     @     0x55917cbf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=417)[0m     @     0x55917cb69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x55917cbf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=417)[0m     @     0x55917cbf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=417)[0m     @     0x55917cb69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x55917cbf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=417)[0m     @     0x55917cbf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=417)[0m     @     0x55917cb69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=417)[0m     @     0x55917cbf3baf _PyEval_EvalCodeWithName
[2m[36m(pid=417)[0m     @     0x55917cbf4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=417)[0m     @     0x55917cb69689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x7f05334f65a4 at::native::copy_()
[2m[36m(pid=386)[0m     @     0x7f0533be14f5 at::Tensor::copy_()
[2m[36m(pid=386)[0m     @     0x7f05360b48de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=383)[0m     @     0x7f144a37c4f5 at::Tensor::copy_()
[2m[36m(pid=383)[0m     @     0x7f145042779f torch::autograd::THPVariable_copy_()
[2m[36m(pid=383)[0m     @     0x55e5a750ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=383)[0m     @     0x55e5a746ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a74f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=383)[0m     @     0x55e5a74f6a20 method_vectorcall
[2m[36m(pid=379)[0m     @     0x7f43fcc764f5 at::Tensor::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d029105a4 at::native::copy_()
[2m[36m(pid=345)[0m     @     0x7f3ef7223d91 at::TensorIterator::for_each()
[2m[36m(pid=345)[0m     @     0x7f3ef7b06b22 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=345)[0m     @     0x7f3ef7b29c1d at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=386)[0m     @     0x7f0533be14f5 at::Tensor::copy_()
[2m[36m(pid=386)[0m     @     0x7f0539c8c79f torch::autograd::THPVariable_copy_()
[2m[36m(pid=386)[0m     @     0x5594b52b7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=386)[0m     @     0x5594b5212b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x5594b529dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=386)[0m     @     0x5594b529ea20 method_vectorcall
[2m[36m(pid=386)[0m     @     0x5594b5212bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x5594b529dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=386)[0m     @     0x5594b529e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=386)[0m     @     0x5594b5213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x5594b529dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=386)[0m     @     0x5594b529e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=386)[0m     @     0x5594b5213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x5594b529dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=386)[0m     @     0x5594b529e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=386)[0m     @     0x5594b5213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=386)[0m     @     0x5594b529dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=386)[0m     @     0x5594b529e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=386)[0m     @     0x5594b5213689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a746abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a74f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=383)[0m     @     0x55e5a74f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=383)[0m     @     0x55e5a746b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a74f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=383)[0m     @     0x55e5a74f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=383)[0m     @     0x55e5a746b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a74f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=383)[0m     @     0x55e5a74f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=383)[0m     @     0x55e5a746b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=383)[0m     @     0x55e5a74f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=383)[0m     @     0x55e5a74f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=383)[0m     @     0x55e5a746b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x7f43ff1498de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d02ffb4f5 at::Tensor::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d054ce8de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=345)[0m     @     0x7f3ef6fcba93 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=345)[0m     @     0x7f3ef6fc9388 at::native::copy_impl()
[2m[36m(pid=379)[0m     @     0x7f43fcc764f5 at::Tensor::copy_()
[2m[36m(pid=379)[0m     @     0x7f4402d2179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=379)[0m     @     0x55e754908fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=379)[0m     @     0x55e754863b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x55e7548eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=379)[0m     @     0x55e7548efa20 method_vectorcall
[2m[36m(pid=379)[0m     @     0x55e754863bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x55e7548eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=379)[0m     @     0x55e7548ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=379)[0m     @     0x55e754864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x55e7548eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=379)[0m     @     0x55e7548ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=379)[0m     @     0x55e754864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x55e7548eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=379)[0m     @     0x55e7548ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=379)[0m     @     0x55e754864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=379)[0m     @     0x55e7548eebaf _PyEval_EvalCodeWithName
[2m[36m(pid=379)[0m     @     0x55e7548ef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=379)[0m     @     0x55e754864689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x7f3ef6fcb5a4 at::native::copy_()
[2m[36m(pid=345)[0m     @     0x7f3ef76b64f5 at::Tensor::copy_()
[2m[36m(pid=345)[0m     @     0x7f3ef9b898de torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d02ffb4f5 at::Tensor::copy_()
[2m[36m(pid=344)[0m     @     0x7f9d090a679f torch::autograd::THPVariable_copy_()
[2m[36m(pid=344)[0m     @     0x557265116fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=344)[0m     @     0x557265071b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x5572650fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=344)[0m     @     0x5572650fda20 method_vectorcall
[2m[36m(pid=344)[0m     @     0x557265071bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x5572650fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=344)[0m     @     0x5572650fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=344)[0m     @     0x557265072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x5572650fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=344)[0m     @     0x5572650fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=344)[0m     @     0x557265072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x5572650fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=344)[0m     @     0x5572650fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=344)[0m     @     0x557265072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=344)[0m     @     0x5572650fcbaf _PyEval_EvalCodeWithName
[2m[36m(pid=344)[0m     @     0x5572650fd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=344)[0m     @     0x557265072689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x7f3ef76b64f5 at::Tensor::copy_()
[2m[36m(pid=345)[0m     @     0x7f3efd76179f torch::autograd::THPVariable_copy_()
[2m[36m(pid=345)[0m     @     0x5640c8b79fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=345)[0m     @     0x5640c8ad4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x5640c8b5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=345)[0m     @     0x5640c8b60a20 method_vectorcall
[2m[36m(pid=345)[0m     @     0x5640c8ad4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x5640c8b5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=345)[0m     @     0x5640c8b60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=345)[0m     @     0x5640c8ad5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x5640c8b5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=345)[0m     @     0x5640c8b60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=345)[0m     @     0x5640c8ad5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x5640c8b5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=345)[0m     @     0x5640c8b60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=345)[0m     @     0x5640c8ad5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=345)[0m     @     0x5640c8b5fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=345)[0m     @     0x5640c8b60643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=345)[0m     @     0x5640c8ad5689 _PyEval_EvalFrameDefault.cold.2792
2020-11-05 10:16:18,144	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffffb2413f7201000000.
2020-11-05 10:16:18,151	ERROR trial_runner.py:567 -- Trial PPO_jss_env_ed521_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=435, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
== Status ==
Memory usage on this node: 26.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ed521_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ed521_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ed521_00000_0_2020-11-05_10-16-10/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 26.7/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/3 GPUs, 0.0/558.35 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_ed521_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_ed521_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_ed521_00000_0_2020-11-05_10-16-10/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
  File "train.py", line 56, in train_func
    analysis = tune.run(PPOTrainer, config=config, stop=stop, name="ppo-jss")
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/tune.py", line 427, in run
    raise TuneError("Trials did not complete", incomplete_trials)
ray.tune.error.TuneError: ('Trials did not complete', [PPO_jss_env_ed521_00000])
