diff --git a/JSS/main.py b/JSS/main.py
index 002296e..74262f1 100644
--- a/JSS/main.py
+++ b/JSS/main.py
@@ -16,6 +16,7 @@ from ray.tune import CLIReporter, register_env
 from ray.tune.logger import DEFAULT_LOGGERS
 from ray.tune.integration.wandb import WandbLogger
 
+
 from JSS.models import FCMaskedActionsModel
 
 pio.orca.config.use_xvfb = True
@@ -29,16 +30,16 @@ register_env("jss_env", env_creator)
 
 
 if __name__ == "__main__":
+    os.environ["WANDB_API_KEY"] = '3487a01956bf67cc7882bca2a38f70c8c95f8463'
     ray.init()
     torch, nn = try_import_torch()
     ModelCatalog.register_custom_model("fc_masked_model", FCMaskedActionsModel)
-    os.environ["WANDB_API_KEY"] = '3487a01956bf67cc7882bca2a38f70c8c95f8463'
     config = ppo.DEFAULT_CONFIG.copy()
-    fcnet_architectures = [[512, 512], [1024, 1024], [2048, 2048]]
+    fcnet_architectures = [[1024, 1024], [2048, 2048]]
     config['seed'] = 0
     config['framework'] = 'torch'
     config['env'] = 'jss_env'
-    config['env_config'] = {'instance_path': '/home/local/IWAS/pierre/PycharmProjects/JSS/JSS/env/instances/ta51'}
+    config['env_config'] = {'instance_path': '/home/jovyan/JSS/JSS/env/instances/ta51'}
     config['model'] = {
         "fcnet_activation": tune.grid_search(["relu", "tanh"]),
         "custom_model": "fc_masked_model",
@@ -49,20 +50,19 @@ if __name__ == "__main__":
     # config['train_batch_size'] = tune.grid_search([2048, 4096])
     # config['rollout_fragment_length'] = tune.grid_search([256, 512])
     # config['sgd_minibatch_size'] = tune.grid_search([256, 512])
-    config['lr'] = tune.grid_search([5e-4, 1e-4, 5e-5])
+    config['lr'] = tune.grid_search([5e-4, 1e-4])
     config['evaluation_interval'] = None
     config['metrics_smoothing_episodes'] = 100000
-    config['num_envs_per_worker'] = tune.grid_search([1, 2])
+    config['num_envs_per_worker'] = tune.grid_search([1, 2, 4, 8])
     config['callbacks'] = CustomCallbacks
-    config['num_workers'] = 7
-    '''
-    config["logger_config"] = {
-        'wandb': {
-            'project': 'RLLibJSS',
-            'api_key': '3487a01956bf67cc7882bca2a38f70c8c95f8463',
+    config['num_workers'] = 79
+    wandb_dict = {
+            'project': 'JSSRay',
+            'api_key': '3487a01956bf67cc7882bca2a38f70c8c95f8463'
         }
+    config["logger_config"] = {
+        'wandb': wandb_dict
     }
-    '''
     stop = {
         "time_total_s": 600,
     }
@@ -71,7 +71,8 @@ if __name__ == "__main__":
     reporter.add_metric_column("custom_metric_time_step_min")
     analysis = tune.run(PPOTrainer, config=config, stop=stop, progress_reporter=reporter,
                         fail_fast=True,
-                        checkpoint_at_end=True)
+                        checkpoint_at_end=True,
+                        loggers=[WandbLogger])
     best_trained_config = analysis.get_best_config(metric="episode_reward_max")
     print("Best config: ", best_trained_config)
     save_config = open("{}_{}.json".format(time.time(), config['env_config']['instance_path']), "w+")
