2020-11-05 11:04:13,432	INFO services.py:1164 -- View the Ray dashboard at [1m[32mhttp://127.0.0.1:8265[39m[22m
== Status ==
Memory usage on this node: 12.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 80/80 CPUs, 1/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 RUNNING)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a43d4_00000 | RUNNING  |       |
+-------------------------+----------+-------+


[2m[36m(pid=26722)[0m 2020-11-05 11:04:16,311	INFO trainer.py:616 -- Current log_level is WARN. For more information, set 'log_level': 'INFO' / 'DEBUG' or use the -v and -vv flags.
[2m[36m(pid=26613)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26613)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26613)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26613)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26613)[0m *** SIGSEGV (@0x0) received by PID 26613 (TID 0x7f0beefa5700) from PID 0; stack trace: ***
[2m[36m(pid=26726)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26726)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26726)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26609)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26609)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26609)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26609)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26609)[0m *** SIGSEGV (@0x0) received by PID 26609 (TID 0x7f5616e71700) from PID 0; stack trace: ***
[2m[36m(pid=26691)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26691)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26691)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26616)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26616)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26616)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26656)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26656)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26656)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26624)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26624)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26591)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26591)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26591)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26717)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26717)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26717)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26717)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26717)[0m *** SIGSEGV (@0x0) received by PID 26717 (TID 0x7f01b63f3700) from PID 0; stack trace: ***
[2m[36m(pid=26717)[0m     @     0x7f01b5fcc390 (unknown)
[2m[36m(pid=26717)[0m     @     0x7ed2b809bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26717)[0m     @     0x7ed2b538f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26717)[0m     @     0x7ed2b5392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26717)[0m     @     0x7ed2b5392b53 at::TensorIterator::for_each()
[2m[36m(pid=26717)[0m     @     0x7ed2b5392e11 at::TensorIterator::for_each()
[2m[36m(pid=26717)[0m     @     0x7ed2b80abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26717)[0m     @     0x7ed2b80cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26717)[0m     @     0x7ed2b510c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26717)[0m     @     0x7ed2b510ac3f at::native::copy_impl()
[2m[36m(pid=26679)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26679)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26679)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26679)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26679)[0m *** SIGSEGV (@0x0) received by PID 26679 (TID 0x7f48b91e1700) from PID 0; stack trace: ***
[2m[36m(pid=26679)[0m     @     0x7f48b8dba390 (unknown)
[2m[36m(pid=26679)[0m     @     0x7f19baeebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26679)[0m     @     0x7f19b81df64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26679)[0m     @     0x7f19b81e2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26679)[0m     @     0x7f19b81e2b53 at::TensorIterator::for_each()
[2m[36m(pid=26679)[0m     @     0x7f19b81e2e11 at::TensorIterator::for_each()
[2m[36m(pid=26679)[0m     @     0x7f19baefbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26679)[0m     @     0x7f19baf1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26707)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26707)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26707)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26707)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26707)[0m *** SIGSEGV (@0x0) received by PID 26707 (TID 0x7fea254bf700) from PID 0; stack trace: ***
[2m[36m(pid=26707)[0m     @     0x7fea25098390 (unknown)
[2m[36m(pid=26707)[0m     @     0x7fbb272a8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26707)[0m     @     0x7fbb2459c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26707)[0m     @     0x7fbb2459f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26707)[0m     @     0x7fbb2459fb53 at::TensorIterator::for_each()
[2m[36m(pid=26707)[0m     @     0x7fbb2459fe11 at::TensorIterator::for_each()
[2m[36m(pid=26707)[0m     @     0x7fbb272b8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26707)[0m     @     0x7fbb272dbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26707)[0m     @     0x7fbb24319009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26707)[0m     @     0x7fbb24317c3f at::native::copy_impl()
[2m[36m(pid=26716)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26716)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26716)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26716)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26716)[0m *** SIGSEGV (@0x0) received by PID 26716 (TID 0x7f0eda4e6700) from PID 0; stack trace: ***
[2m[36m(pid=26716)[0m     @     0x7f0eda0bf390 (unknown)
[2m[36m(pid=26716)[0m     @     0x7edfdc2c4fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26716)[0m     @     0x7edfd95b864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26716)[0m     @     0x7edfd95bb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26716)[0m     @     0x7edfd95bbb53 at::TensorIterator::for_each()
[2m[36m(pid=26716)[0m     @     0x7edfd95bbe11 at::TensorIterator::for_each()
[2m[36m(pid=26716)[0m     @     0x7edfdc2d4c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26716)[0m     @     0x7edfdc2f7cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26720)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26720)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26720)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26720)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26720)[0m *** SIGSEGV (@0x0) received by PID 26720 (TID 0x7fe787a11700) from PID 0; stack trace: ***
[2m[36m(pid=26720)[0m     @     0x7fe7875ea390 (unknown)
[2m[36m(pid=26720)[0m     @     0x7fb889804fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26720)[0m     @     0x7fb886af864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26720)[0m     @     0x7fb886afb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26720)[0m     @     0x7fb886afbb53 at::TensorIterator::for_each()
[2m[36m(pid=26720)[0m     @     0x7fb886afbe11 at::TensorIterator::for_each()
[2m[36m(pid=26720)[0m     @     0x7fb889814c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26720)[0m     @     0x7fb889837cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26720)[0m     @     0x7fb886875009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26720)[0m     @     0x7fb886873c3f at::native::copy_impl()
[2m[36m(pid=26669)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26669)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26669)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26669)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26669)[0m *** SIGSEGV (@0x0) received by PID 26669 (TID 0x7fd6534c1700) from PID 0; stack trace: ***
[2m[36m(pid=26669)[0m     @     0x7fd65309a390 (unknown)
[2m[36m(pid=26669)[0m     @     0x7fa75518afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26669)[0m     @     0x7fa75247e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26669)[0m     @     0x7fa752481977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26669)[0m     @     0x7fa752481b53 at::TensorIterator::for_each()
[2m[36m(pid=26687)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26687)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26687)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26687)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26687)[0m *** SIGSEGV (@0x0) received by PID 26687 (TID 0x7fdd98c53700) from PID 0; stack trace: ***
[2m[36m(pid=26687)[0m     @     0x7fdd9882c390 (unknown)
[2m[36m(pid=26687)[0m     @     0x7fae9a885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26687)[0m     @     0x7fae97b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26687)[0m     @     0x7fae97b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26687)[0m     @     0x7fae97b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=26687)[0m     @     0x7fae97b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=26687)[0m     @     0x7fae9a895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26687)[0m     @     0x7fae9a8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26687)[0m     @     0x7fae978f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26687)[0m     @     0x7fae978f4c3f at::native::copy_impl()
[2m[36m(pid=26602)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26602)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26602)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26719)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26719)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26719)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26626)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26626)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26724)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26724)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26593)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26593)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26593)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26702)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26702)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26702)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26702)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26702)[0m *** SIGSEGV (@0x0) received by PID 26702 (TID 0x7f4173fee700) from PID 0; stack trace: ***
[2m[36m(pid=26702)[0m     @     0x7f4173bc7390 (unknown)
[2m[36m(pid=26702)[0m     @     0x7f1275d6cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26702)[0m     @     0x7f127306064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26702)[0m     @     0x7f1273063977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26702)[0m     @     0x7f1273063b53 at::TensorIterator::for_each()
[2m[36m(pid=26702)[0m     @     0x7f1273063e11 at::TensorIterator::for_each()
[2m[36m(pid=26705)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26705)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26705)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26705)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26705)[0m *** SIGSEGV (@0x0) received by PID 26705 (TID 0x7f13dafd2700) from PID 0; stack trace: ***
[2m[36m(pid=26705)[0m     @     0x7f13dabab390 (unknown)
[2m[36m(pid=26705)[0m     @     0x7ee4dcc98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26705)[0m     @     0x7ee4d9f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26705)[0m     @     0x7ee4d9f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26705)[0m     @     0x7ee4d9f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=26705)[0m     @     0x7ee4d9f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=26705)[0m     @     0x7ee4dcca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26705)[0m     @     0x7ee4dcccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26705)[0m     @     0x7ee4d9d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26705)[0m     @     0x7ee4d9d07c3f at::native::copy_impl()
[2m[36m(pid=26682)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26682)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26682)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26682)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26682)[0m *** SIGSEGV (@0x0) received by PID 26682 (TID 0x7fbd0756e700) from PID 0; stack trace: ***
[2m[36m(pid=26682)[0m     @     0x7fbd07147390 (unknown)
[2m[36m(pid=26682)[0m     @     0x7f8e0935bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26682)[0m     @     0x7f8e0664f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26682)[0m     @     0x7f8e06652977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26682)[0m     @     0x7f8e06652b53 at::TensorIterator::for_each()
[2m[36m(pid=26682)[0m     @     0x7f8e06652e11 at::TensorIterator::for_each()
[2m[36m(pid=26682)[0m     @     0x7f8e0936bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26682)[0m     @     0x7f8e0938ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26682)[0m     @     0x7f8e063cc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26666)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26666)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26666)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26666)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26666)[0m *** SIGSEGV (@0x0) received by PID 26666 (TID 0x7faacdd13700) from PID 0; stack trace: ***
[2m[36m(pid=26666)[0m     @     0x7faacd8ec390 (unknown)
[2m[36m(pid=26666)[0m     @     0x7f7bcfa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26666)[0m     @     0x7f7bccd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26666)[0m     @     0x7f7bccd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26666)[0m     @     0x7f7bccd67b53 at::TensorIterator::for_each()
[2m[36m(pid=26666)[0m     @     0x7f7bccd67e11 at::TensorIterator::for_each()
[2m[36m(pid=26666)[0m     @     0x7f7bcfa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26666)[0m     @     0x7f7bcfaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26666)[0m     @     0x7f7bccae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26666)[0m     @     0x7f7bccadfc3f at::native::copy_impl()
[2m[36m(pid=26649)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26649)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26649)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26649)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26649)[0m *** SIGSEGV (@0x0) received by PID 26649 (TID 0x7f71c13a2700) from PID 0; stack trace: ***
[2m[36m(pid=26649)[0m     @     0x7f71c0f7b390 (unknown)
[2m[36m(pid=26649)[0m     @     0x7f42c311bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26649)[0m     @     0x7f42c040f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26649)[0m     @     0x7f42c0412977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26649)[0m     @     0x7f42c0412b53 at::TensorIterator::for_each()
[2m[36m(pid=26690)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26690)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26690)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26690)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26690)[0m *** SIGSEGV (@0x0) received by PID 26690 (TID 0x7fd288d5b700) from PID 0; stack trace: ***
[2m[36m(pid=26690)[0m     @     0x7fd288934390 (unknown)
[2m[36m(pid=26690)[0m     @     0x7fa38a9ebfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26690)[0m     @     0x7fa387cdf64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26690)[0m     @     0x7fa387ce2977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26690)[0m     @     0x7fa387ce2b53 at::TensorIterator::for_each()
[2m[36m(pid=26721)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26721)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26721)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26721)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26721)[0m *** SIGSEGV (@0x0) received by PID 26721 (TID 0x7f4d18b96700) from PID 0; stack trace: ***
[2m[36m(pid=26721)[0m     @     0x7f4d1876f390 (unknown)
[2m[36m(pid=26721)[0m     @     0x7f1e1a86bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26721)[0m     @     0x7f1e17b5f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26721)[0m     @     0x7f1e17b62977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26721)[0m     @     0x7f1e17b62b53 at::TensorIterator::for_each()
[2m[36m(pid=26721)[0m     @     0x7f1e17b62e11 at::TensorIterator::for_each()
[2m[36m(pid=26721)[0m     @     0x7f1e1a87bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26721)[0m     @     0x7f1e1a89ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26685)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26685)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26685)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26685)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26685)[0m *** SIGSEGV (@0x0) received by PID 26685 (TID 0x7f6e719b4700) from PID 0; stack trace: ***
[2m[36m(pid=26685)[0m     @     0x7f6e7158d390 (unknown)
[2m[36m(pid=26685)[0m     @     0x7f3f7375afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26685)[0m     @     0x7f3f70a4e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26685)[0m     @     0x7f3f70a51977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26685)[0m     @     0x7f3f70a51b53 at::TensorIterator::for_each()
[2m[36m(pid=26685)[0m     @     0x7f3f70a51e11 at::TensorIterator::for_each()
[2m[36m(pid=26685)[0m     @     0x7f3f7376ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26685)[0m     @     0x7f3f7378dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26678)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26678)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26678)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26678)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26678)[0m *** SIGSEGV (@0x0) received by PID 26678 (TID 0x7f7f89099700) from PID 0; stack trace: ***
[2m[36m(pid=26678)[0m     @     0x7f7f88c72390 (unknown)
[2m[36m(pid=26678)[0m     @     0x7f508ad02fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26678)[0m     @     0x7f5087ff664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26678)[0m     @     0x7f5087ff9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26678)[0m     @     0x7f5087ff9b53 at::TensorIterator::for_each()
[2m[36m(pid=26678)[0m     @     0x7f5087ff9e11 at::TensorIterator::for_each()
[2m[36m(pid=26678)[0m     @     0x7f508ad12c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26678)[0m     @     0x7f508ad35cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26678)[0m     @     0x7f5087d73009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26678)[0m     @     0x7f5087d71c3f at::native::copy_impl()
[2m[36m(pid=26670)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26670)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26670)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26670)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26670)[0m *** SIGSEGV (@0x0) received by PID 26670 (TID 0x7f6ca8450700) from PID 0; stack trace: ***
[2m[36m(pid=26670)[0m     @     0x7f6ca8029390 (unknown)
[2m[36m(pid=26670)[0m     @     0x7f3daa12dfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26670)[0m     @     0x7f3da742164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26670)[0m     @     0x7f3da7424977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26670)[0m     @     0x7f3da7424b53 at::TensorIterator::for_each()
[2m[36m(pid=26670)[0m     @     0x7f3da7424e11 at::TensorIterator::for_each()
[2m[36m(pid=26670)[0m     @     0x7f3daa13dc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26670)[0m     @     0x7f3daa160cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26670)[0m     @     0x7f3da719e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26695)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26695)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26695)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26695)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26695)[0m *** SIGSEGV (@0x0) received by PID 26695 (TID 0x7f3813a8b700) from PID 0; stack trace: ***
[2m[36m(pid=26695)[0m     @     0x7f3813664390 (unknown)
[2m[36m(pid=26695)[0m     @     0x7f0915893fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26695)[0m     @     0x7f0912b8764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26695)[0m     @     0x7f0912b8a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26695)[0m     @     0x7f0912b8ab53 at::TensorIterator::for_each()
[2m[36m(pid=26695)[0m     @     0x7f0912b8ae11 at::TensorIterator::for_each()
[2m[36m(pid=26695)[0m     @     0x7f09158a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26695)[0m     @     0x7f09158c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26711)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26711)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26711)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26711)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26711)[0m *** SIGSEGV (@0x0) received by PID 26711 (TID 0x7fb93ca74700) from PID 0; stack trace: ***
[2m[36m(pid=26711)[0m     @     0x7fb93c64d390 (unknown)
[2m[36m(pid=26711)[0m     @     0x7f8a3e858fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26711)[0m     @     0x7f8a3bb4c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26711)[0m     @     0x7f8a3bb4f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26711)[0m     @     0x7f8a3bb4fb53 at::TensorIterator::for_each()
[2m[36m(pid=26610)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26610)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26610)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26610)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26610)[0m *** SIGSEGV (@0x0) received by PID 26610 (TID 0x7f87722d9700) from PID 0; stack trace: ***
[2m[36m(pid=26610)[0m     @     0x7f8771eb2390 (unknown)
[2m[36m(pid=26610)[0m     @     0x7f587409bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26610)[0m     @     0x7f587138f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26610)[0m     @     0x7f5871392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26610)[0m     @     0x7f5871392b53 at::TensorIterator::for_each()
[2m[36m(pid=26610)[0m     @     0x7f5871392e11 at::TensorIterator::for_each()
[2m[36m(pid=26610)[0m     @     0x7f58740abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26647)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26647)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26647)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26647)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26647)[0m *** SIGSEGV (@0x0) received by PID 26647 (TID 0x7fcb3127c700) from PID 0; stack trace: ***
[2m[36m(pid=26647)[0m     @     0x7fcb30e55390 (unknown)
[2m[36m(pid=26671)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26671)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26671)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26671)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26671)[0m *** SIGSEGV (@0x0) received by PID 26671 (TID 0x7f0cda38b700) from PID 0; stack trace: ***
[2m[36m(pid=26671)[0m     @     0x7f0cd9f64390 (unknown)
[2m[36m(pid=26671)[0m     @     0x7edddc09bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26671)[0m     @     0x7eddd938f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26671)[0m     @     0x7eddd9392977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26671)[0m     @     0x7eddd9392b53 at::TensorIterator::for_each()
[2m[36m(pid=26671)[0m     @     0x7eddd9392e11 at::TensorIterator::for_each()
[2m[36m(pid=26671)[0m     @     0x7edddc0abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26671)[0m     @     0x7edddc0cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26619)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26619)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26619)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26619)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26619)[0m *** SIGSEGV (@0x0) received by PID 26619 (TID 0x7fcc6f153700) from PID 0; stack trace: ***
[2m[36m(pid=26619)[0m     @     0x7fcc6ed2c390 (unknown)
[2m[36m(pid=26619)[0m     @     0x7f9d70f46fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26619)[0m     @     0x7f9d6e23a64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26619)[0m     @     0x7f9d6e23d977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26619)[0m     @     0x7f9d6e23db53 at::TensorIterator::for_each()
[2m[36m(pid=26590)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26590)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26590)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26590)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26590)[0m *** SIGSEGV (@0x0) received by PID 26590 (TID 0x7fc1ba8ff700) from PID 0; stack trace: ***
[2m[36m(pid=26652)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26652)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26652)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26652)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26652)[0m *** SIGSEGV (@0x0) received by PID 26652 (TID 0x7fa8a89ec700) from PID 0; stack trace: ***
[2m[36m(pid=26652)[0m     @     0x7fa8a85c5390 (unknown)
[2m[36m(pid=26652)[0m     @     0x7f79aa7d8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26652)[0m     @     0x7f79a7acc64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26652)[0m     @     0x7f79a7acf977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26652)[0m     @     0x7f79a7acfb53 at::TensorIterator::for_each()
[2m[36m(pid=26652)[0m     @     0x7f79a7acfe11 at::TensorIterator::for_each()
[2m[36m(pid=26652)[0m     @     0x7f79aa7e8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26652)[0m     @     0x7f79aa80bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26652)[0m     @     0x7f79a7849009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26652)[0m     @     0x7f79a7847c3f at::native::copy_impl()
[2m[36m(pid=26601)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26601)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26601)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26601)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26601)[0m *** SIGSEGV (@0x0) received by PID 26601 (TID 0x7f412cab0700) from PID 0; stack trace: ***
[2m[36m(pid=26601)[0m     @     0x7f412c689390 (unknown)
[2m[36m(pid=26601)[0m     @     0x7f122e7dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26601)[0m     @     0x7f122bace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26601)[0m     @     0x7f122bad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26601)[0m     @     0x7f122bad1b53 at::TensorIterator::for_each()
[2m[36m(pid=26601)[0m     @     0x7f122bad1e11 at::TensorIterator::for_each()
[2m[36m(pid=26601)[0m     @     0x7f122e7eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26657)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26657)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26657)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26657)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26657)[0m *** SIGSEGV (@0x0) received by PID 26657 (TID 0x7f891280d700) from PID 0; stack trace: ***
[2m[36m(pid=26657)[0m     @     0x7f89123e6390 (unknown)
[2m[36m(pid=26657)[0m     @     0x7f5a145c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26657)[0m     @     0x7f5a118b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26657)[0m     @     0x7f5a118b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26657)[0m     @     0x7f5a118b9b53 at::TensorIterator::for_each()
[2m[36m(pid=26657)[0m     @     0x7f5a118b9e11 at::TensorIterator::for_each()
[2m[36m(pid=26657)[0m     @     0x7f5a145d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26657)[0m     @     0x7f5a145f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26657)[0m     @     0x7f5a11633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26696)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26696)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26696)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26696)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26696)[0m *** SIGSEGV (@0x0) received by PID 26696 (TID 0x7f015e995700) from PID 0; stack trace: ***
[2m[36m(pid=26696)[0m     @     0x7f015e56e390 (unknown)
[2m[36m(pid=26696)[0m     @     0x7ed260770fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26696)[0m     @     0x7ed25da6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26696)[0m     @     0x7ed25da67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26696)[0m     @     0x7ed25da67b53 at::TensorIterator::for_each()
[2m[36m(pid=26696)[0m     @     0x7ed25da67e11 at::TensorIterator::for_each()
[2m[36m(pid=26696)[0m     @     0x7ed260780c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26696)[0m     @     0x7ed2607a3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26696)[0m     @     0x7ed25d7e1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26696)[0m     @     0x7ed25d7dfc3f at::native::copy_impl()
[2m[36m(pid=26677)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26677)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26677)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26677)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26677)[0m *** SIGSEGV (@0x0) received by PID 26677 (TID 0x7f2719292700) from PID 0; stack trace: ***
[2m[36m(pid=26677)[0m     @     0x7f2718e6b390 (unknown)
[2m[36m(pid=26677)[0m     @     0x7ef81b051fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26677)[0m     @     0x7ef81834564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26677)[0m     @     0x7ef818348977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26677)[0m     @     0x7ef818348b53 at::TensorIterator::for_each()
[2m[36m(pid=26677)[0m     @     0x7ef818348e11 at::TensorIterator::for_each()
[2m[36m(pid=26677)[0m     @     0x7ef81b061c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26667)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26667)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26667)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26667)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26667)[0m *** SIGSEGV (@0x0) received by PID 26667 (TID 0x7f5cab0ec700) from PID 0; stack trace: ***
[2m[36m(pid=26667)[0m     @     0x7f5caacc5390 (unknown)
[2m[36m(pid=26667)[0m     @     0x7f2dacee1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26667)[0m     @     0x7f2daa1d564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26667)[0m     @     0x7f2daa1d8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26667)[0m     @     0x7f2daa1d8b53 at::TensorIterator::for_each()
[2m[36m(pid=26667)[0m     @     0x7f2daa1d8e11 at::TensorIterator::for_each()
[2m[36m(pid=26667)[0m     @     0x7f2dacef1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26680)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26680)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26680)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26680)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26680)[0m *** SIGSEGV (@0x0) received by PID 26680 (TID 0x7fa2e4b54700) from PID 0; stack trace: ***
[2m[36m(pid=26680)[0m     @     0x7fa2e472d390 (unknown)
[2m[36m(pid=26680)[0m     @     0x7f73e67dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26680)[0m     @     0x7f73e3ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26680)[0m     @     0x7f73e3ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26680)[0m     @     0x7f73e3ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=26680)[0m     @     0x7f73e3ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=26680)[0m     @     0x7f73e67eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26680)[0m     @     0x7f73e680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26597)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26597)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26597)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26597)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26597)[0m *** SIGSEGV (@0x0) received by PID 26597 (TID 0x7fab74156700) from PID 0; stack trace: ***
[2m[36m(pid=26597)[0m     @     0x7fab73d2f390 (unknown)
[2m[36m(pid=26597)[0m     @     0x7f7c75b77fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26597)[0m     @     0x7f7c72e6b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26597)[0m     @     0x7f7c72e6e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26597)[0m     @     0x7f7c72e6eb53 at::TensorIterator::for_each()
[2m[36m(pid=26597)[0m     @     0x7f7c72e6ee11 at::TensorIterator::for_each()
[2m[36m(pid=26597)[0m     @     0x7f7c75b87c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26597)[0m     @     0x7f7c75baacfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26625)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26625)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26625)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26625)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26625)[0m *** SIGSEGV (@0x0) received by PID 26625 (TID 0x7f2b17e1b700) from PID 0; stack trace: ***
[2m[36m(pid=26664)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26664)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26664)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26664)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26664)[0m *** SIGSEGV (@0x0) received by PID 26664 (TID 0x7faf7c942700) from PID 0; stack trace: ***
[2m[36m(pid=26713)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26713)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26713)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26713)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26713)[0m *** SIGSEGV (@0x0) received by PID 26713 (TID 0x7f1e90615700) from PID 0; stack trace: ***
[2m[36m(pid=26713)[0m     @     0x7f1e901ee390 (unknown)
[2m[36m(pid=26713)[0m     @     0x7eef92344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26713)[0m     @     0x7eef8f63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26713)[0m     @     0x7eef8f63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26713)[0m     @     0x7eef8f63bb53 at::TensorIterator::for_each()
[2m[36m(pid=26713)[0m     @     0x7eef8f63be11 at::TensorIterator::for_each()
[2m[36m(pid=26713)[0m     @     0x7eef92354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26686)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26686)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26686)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26686)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26686)[0m *** SIGSEGV (@0x0) received by PID 26686 (TID 0x7f8c13258700) from PID 0; stack trace: ***
[2m[36m(pid=26686)[0m     @     0x7f8c12e31390 (unknown)
[2m[36m(pid=26686)[0m     @     0x7f5d15067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26686)[0m     @     0x7f5d1235b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26686)[0m     @     0x7f5d1235e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26686)[0m     @     0x7f5d1235eb53 at::TensorIterator::for_each()
[2m[36m(pid=26686)[0m     @     0x7f5d1235ee11 at::TensorIterator::for_each()
[2m[36m(pid=26686)[0m     @     0x7f5d15077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26686)[0m     @     0x7f5d1509acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26686)[0m     @     0x7f5d120d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26595)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26595)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26595)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26595)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26595)[0m *** SIGSEGV (@0x0) received by PID 26595 (TID 0x7fbc82efc700) from PID 0; stack trace: ***
[2m[36m(pid=26595)[0m     @     0x7fbc82ad5390 (unknown)
[2m[36m(pid=26595)[0m     @     0x7f8d84c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26595)[0m     @     0x7f8d81f8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26595)[0m     @     0x7f8d81f8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26595)[0m     @     0x7f8d81f8fb53 at::TensorIterator::for_each()
[2m[36m(pid=26595)[0m     @     0x7f8d81f8fe11 at::TensorIterator::for_each()
[2m[36m(pid=26595)[0m     @     0x7f8d84ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26595)[0m     @     0x7f8d84ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26594)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26594)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26594)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26594)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26594)[0m *** SIGSEGV (@0x0) received by PID 26594 (TID 0x7f6fc88c5700) from PID 0; stack trace: ***
[2m[36m(pid=26594)[0m     @     0x7f6fc849e390 (unknown)
[2m[36m(pid=26622)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26622)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26622)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26622)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26622)[0m *** SIGSEGV (@0x0) received by PID 26622 (TID 0x7efcd6811700) from PID 0; stack trace: ***
[2m[36m(pid=26622)[0m     @     0x7efcd63ea390 (unknown)
[2m[36m(pid=26622)[0m     @     0x7ecdd85c2fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26622)[0m     @     0x7ecdd58b664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26621)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26621)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26621)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26621)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26621)[0m *** SIGSEGV (@0x0) received by PID 26621 (TID 0x7f07f054c700) from PID 0; stack trace: ***
[2m[36m(pid=26621)[0m     @     0x7f07f0125390 (unknown)
[2m[36m(pid=26681)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26681)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26681)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26681)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26681)[0m *** SIGSEGV (@0x0) received by PID 26681 (TID 0x7eff572ed700) from PID 0; stack trace: ***
[2m[36m(pid=26681)[0m     @     0x7eff56ec6390 (unknown)
[2m[36m(pid=26681)[0m     @     0x7ed0590ddfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26681)[0m     @     0x7ed0563d164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26598)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26598)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26598)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26598)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26598)[0m *** SIGSEGV (@0x0) received by PID 26598 (TID 0x7f6aa330f700) from PID 0; stack trace: ***
[2m[36m(pid=26598)[0m     @     0x7f6aa2ee8390 (unknown)
[2m[36m(pid=26598)[0m     @     0x7f3ba510afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26598)[0m     @     0x7f3ba23fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26598)[0m     @     0x7f3ba2401977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26611)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26611)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26611)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26611)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26611)[0m *** SIGSEGV (@0x0) received by PID 26611 (TID 0x7feeaf266700) from PID 0; stack trace: ***
[2m[36m(pid=26611)[0m     @     0x7feeaee3f390 (unknown)
[2m[36m(pid=26611)[0m     @     0x7fbfb1067fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26611)[0m     @     0x7fbfae35b64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26614)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26614)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26614)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26614)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26614)[0m *** SIGSEGV (@0x0) received by PID 26614 (TID 0x7ff6dd586700) from PID 0; stack trace: ***
[2m[36m(pid=26614)[0m     @     0x7ff6dd15f390 (unknown)
[2m[36m(pid=26614)[0m     @     0x7fc7df1c6fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26694)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26694)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26694)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26694)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26694)[0m *** SIGSEGV (@0x0) received by PID 26694 (TID 0x7f9815789700) from PID 0; stack trace: ***
[2m[36m(pid=26694)[0m     @     0x7f9815362390 (unknown)
[2m[36m(pid=26694)[0m     @     0x7f691752efb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26694)[0m     @     0x7f691482264b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26665)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26665)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26665)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26665)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26665)[0m *** SIGSEGV (@0x0) received by PID 26665 (TID 0x7fb647a94700) from PID 0; stack trace: ***
[2m[36m(pid=26592)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26592)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26592)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26592)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26592)[0m *** SIGSEGV (@0x0) received by PID 26592 (TID 0x7f0e1c31a700) from PID 0; stack trace: ***
[2m[36m(pid=26592)[0m     @     0x7f0e1bef3390 (unknown)
[2m[36m(pid=26607)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26607)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26607)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26607)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26607)[0m *** SIGSEGV (@0x0) received by PID 26607 (TID 0x7f1994a91700) from PID 0; stack trace: ***
[2m[36m(pid=26607)[0m     @     0x7f199466a390 (unknown)
[2m[36m(pid=26607)[0m     @     0x7eea9665afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26607)[0m     @     0x7eea9394e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26607)[0m     @     0x7eea93951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26607)[0m     @     0x7eea93951b53 at::TensorIterator::for_each()
[2m[36m(pid=26607)[0m     @     0x7eea93951e11 at::TensorIterator::for_each()
[2m[36m(pid=26606)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26606)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26606)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26606)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26606)[0m *** SIGSEGV (@0x0) received by PID 26606 (TID 0x7f62bdcfb700) from PID 0; stack trace: ***
[2m[36m(pid=26606)[0m     @     0x7f62bd8d4390 (unknown)
[2m[36m(pid=26606)[0m     @     0x7f33bfa70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26606)[0m     @     0x7f33bcd6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26663)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26663)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26663)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26663)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26663)[0m *** SIGSEGV (@0x0) received by PID 26663 (TID 0x7fda3b631700) from PID 0; stack trace: ***
[2m[36m(pid=26663)[0m     @     0x7fda3b20a390 (unknown)
[2m[36m(pid=26663)[0m     @     0x7fab3d39bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26613)[0m     @     0x7f0beeb7e390 (unknown)
[2m[36m(pid=26613)[0m     @     0x7edcf0c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26613)[0m     @     0x7edcedf3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26613)[0m     @     0x7edcedf3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26605)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26605)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26605)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26605)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26605)[0m *** SIGSEGV (@0x0) received by PID 26605 (TID 0x7f3ee069e700) from PID 0; stack trace: ***
[2m[36m(pid=26605)[0m     @     0x7f3ee0277390 (unknown)
[2m[36m(pid=26726)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26726)[0m *** SIGSEGV (@0x0) received by PID 26726 (TID 0x7f0996682700) from PID 0; stack trace: ***
[2m[36m(pid=26726)[0m     @     0x7f099625b390 (unknown)
[2m[36m(pid=26726)[0m     @     0x7eda983b1fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26726)[0m     @     0x7eda956a564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26609)[0m     @     0x7f5616a4a390 (unknown)
[2m[36m(pid=26609)[0m     @     0x7f2718981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26609)[0m     @     0x7f2715c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26609)[0m     @     0x7f2715c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26691)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26691)[0m *** SIGSEGV (@0x0) received by PID 26691 (TID 0x7f7e918fd700) from PID 0; stack trace: ***
[2m[36m(pid=26691)[0m     @     0x7f7e914d6390 (unknown)
[2m[36m(pid=26691)[0m     @     0x7f4f936edfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26691)[0m     @     0x7f4f909e164b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26616)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26616)[0m *** SIGSEGV (@0x0) received by PID 26616 (TID 0x7fafb250a700) from PID 0; stack trace: ***
[2m[36m(pid=26616)[0m     @     0x7fafb20e3390 (unknown)
[2m[36m(pid=26616)[0m     @     0x7f80b4304fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26616)[0m     @     0x7f80b15f864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26656)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26656)[0m *** SIGSEGV (@0x0) received by PID 26656 (TID 0x7fe3e6e81700) from PID 0; stack trace: ***
[2m[36m(pid=26656)[0m     @     0x7fe3e6a5a390 (unknown)
[2m[36m(pid=26656)[0m     @     0x7fb4e8981fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26656)[0m     @     0x7fb4e5c7564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26624)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26624)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26624)[0m *** SIGSEGV (@0x0) received by PID 26624 (TID 0x7f67d1862700) from PID 0; stack trace: ***
[2m[36m(pid=26624)[0m     @     0x7f67d143b390 (unknown)
[2m[36m(pid=26591)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26591)[0m *** SIGSEGV (@0x0) received by PID 26591 (TID 0x7f7a66eb2700) from PID 0; stack trace: ***
[2m[36m(pid=26591)[0m     @     0x7f7a66a8b390 (unknown)
[2m[36m(pid=26591)[0m     @     0x7f4b68c43fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26591)[0m     @     0x7f4b65f3764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26717)[0m     @     0x7ed2b510bed4 at::native::copy_()
[2m[36m(pid=26717)[0m     @     0x7ed2b584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26679)[0m     @     0x7f19b7f5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26679)[0m     @     0x7f19b7f5ac3f at::native::copy_impl()
[2m[36m(pid=26679)[0m     @     0x7f19b7f5bed4 at::native::copy_()
[2m[36m(pid=26679)[0m     @     0x7f19b869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26679)[0m     @     0x7f19b87a6148 at::Tensor::copy_()
[2m[36m(pid=26707)[0m     @     0x7fbb24318ed4 at::native::copy_()
[2m[36m(pid=26707)[0m     @     0x7fbb24a5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26707)[0m     @     0x7fbb24b63148 at::Tensor::copy_()
[2m[36m(pid=26716)[0m     @     0x7edfd9335009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26716)[0m     @     0x7edfd9333c3f at::native::copy_impl()
[2m[36m(pid=26716)[0m     @     0x7edfd9334ed4 at::native::copy_()
[2m[36m(pid=26716)[0m     @     0x7edfd9a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26720)[0m     @     0x7fb886874ed4 at::native::copy_()
[2m[36m(pid=26720)[0m     @     0x7fb886fb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26720)[0m     @     0x7fb8870bf148 at::Tensor::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa752481e11 at::TensorIterator::for_each()
[2m[36m(pid=26669)[0m     @     0x7fa75519ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26669)[0m     @     0x7fa7551bdcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26669)[0m     @     0x7fa7521fb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26669)[0m     @     0x7fa7521f9c3f at::native::copy_impl()
[2m[36m(pid=26687)[0m     @     0x7fae978f5ed4 at::native::copy_()
[2m[36m(pid=26687)[0m     @     0x7fae980385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26687)[0m     @     0x7fae98140148 at::Tensor::copy_()
[2m[36m(pid=26602)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26602)[0m *** SIGSEGV (@0x0) received by PID 26602 (TID 0x7f43b5ce3700) from PID 0; stack trace: ***
[2m[36m(pid=26602)[0m     @     0x7f43b58bc390 (unknown)
[2m[36m(pid=26602)[0m     @     0x7f14b7891fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26602)[0m     @     0x7f14b4b8564b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26602)[0m     @     0x7f14b4b88977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26719)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26719)[0m *** SIGSEGV (@0x0) received by PID 26719 (TID 0x7fba3c8c0700) from PID 0; stack trace: ***
[2m[36m(pid=26719)[0m     @     0x7fba3c499390 (unknown)
[2m[36m(pid=26719)[0m     @     0x7f8b3e378fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26719)[0m     @     0x7f8b3b66c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26719)[0m     @     0x7f8b3b66f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26626)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26626)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26626)[0m *** SIGSEGV (@0x0) received by PID 26626 (TID 0x7f9ecf672700) from PID 0; stack trace: ***
[2m[36m(pid=26626)[0m     @     0x7f9ecf24b390 (unknown)
[2m[36m(pid=26626)[0m     @     0x7f6fd139bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26626)[0m     @     0x7f6fce68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26626)[0m     @     0x7f6fce692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26724)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26724)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26724)[0m *** SIGSEGV (@0x0) received by PID 26724 (TID 0x7fe6bc094700) from PID 0; stack trace: ***
[2m[36m(pid=26724)[0m     @     0x7fe6bbc6d390 (unknown)
[2m[36m(pid=26724)[0m     @     0x7fb7bdc3cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26724)[0m     @     0x7fb7baf3064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26651)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26651)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26651)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26651)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26651)[0m *** SIGSEGV (@0x0) received by PID 26651 (TID 0x7fd7f4b85700) from PID 0; stack trace: ***
[2m[36m(pid=26651)[0m     @     0x7fd7f475e390 (unknown)
[2m[36m(pid=26651)[0m     @     0x7fa8f67dafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26651)[0m     @     0x7fa8f3ace64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26651)[0m     @     0x7fa8f3ad1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26593)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26593)[0m *** SIGSEGV (@0x0) received by PID 26593 (TID 0x7fce7fdd5700) from PID 0; stack trace: ***
[2m[36m(pid=26593)[0m     @     0x7fce7f9ae390 (unknown)
[2m[36m(pid=26593)[0m     @     0x7f9f81b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26593)[0m     @     0x7f9f7ee4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26593)[0m     @     0x7f9f7ee4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26600)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26600)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26600)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26612)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26612)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26612)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26612)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26612)[0m *** SIGSEGV (@0x0) received by PID 26612 (TID 0x7f9661c9c700) from PID 0; stack trace: ***
[2m[36m(pid=26644)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26644)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26644)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26644)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26644)[0m *** SIGSEGV (@0x0) received by PID 26644 (TID 0x7f79adb61700) from PID 0; stack trace: ***
[2m[36m(pid=26644)[0m     @     0x7f79ad73a390 (unknown)
[2m[36m(pid=26644)[0m     @     0x7f4aaf92bfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26646)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26646)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26646)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26646)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26646)[0m *** SIGSEGV (@0x0) received by PID 26646 (TID 0x7fccac6a8700) from PID 0; stack trace: ***
[2m[36m(pid=26646)[0m     @     0x7fccac281390 (unknown)
[2m[36m(pid=26646)[0m     @     0x7f9dae14ffb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26646)[0m     @     0x7f9dab44364b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26683)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26683)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26683)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26730)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26730)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26730)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26676)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26676)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26676)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26702)[0m     @     0x7f1275d7cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26702)[0m     @     0x7f1275d9fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26702)[0m     @     0x7f1272ddd009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26702)[0m     @     0x7f1272ddbc3f at::native::copy_impl()
[2m[36m(pid=26702)[0m     @     0x7f1272ddced4 at::native::copy_()
[2m[36m(pid=26705)[0m     @     0x7ee4d9d08ed4 at::native::copy_()
[2m[36m(pid=26705)[0m     @     0x7ee4da44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26705)[0m     @     0x7ee4da553148 at::Tensor::copy_()
[2m[36m(pid=26705)[0m     @     0x7ee4dc14a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26682)[0m     @     0x7f8e063cac3f at::native::copy_impl()
[2m[36m(pid=26682)[0m     @     0x7f8e063cbed4 at::native::copy_()
[2m[36m(pid=26682)[0m     @     0x7f8e06b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26666)[0m     @     0x7f7bccae0ed4 at::native::copy_()
[2m[36m(pid=26666)[0m     @     0x7f7bcd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26649)[0m     @     0x7f42c0412e11 at::TensorIterator::for_each()
[2m[36m(pid=26649)[0m     @     0x7f42c312bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26649)[0m     @     0x7f42c314ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26649)[0m     @     0x7f42c018c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26649)[0m     @     0x7f42c018ac3f at::native::copy_impl()
[2m[36m(pid=26690)[0m     @     0x7fa387ce2e11 at::TensorIterator::for_each()
[2m[36m(pid=26690)[0m     @     0x7fa38a9fbc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26690)[0m     @     0x7fa38aa1ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26690)[0m     @     0x7fa387a5c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26690)[0m     @     0x7fa387a5ac3f at::native::copy_impl()
[2m[36m(pid=26721)[0m     @     0x7f1e178dc009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26721)[0m     @     0x7f1e178dac3f at::native::copy_impl()
[2m[36m(pid=26721)[0m     @     0x7f1e178dbed4 at::native::copy_()
[2m[36m(pid=26721)[0m     @     0x7f1e1801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26685)[0m     @     0x7f3f707cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26685)[0m     @     0x7f3f707c9c3f at::native::copy_impl()
[2m[36m(pid=26685)[0m     @     0x7f3f707caed4 at::native::copy_()
[2m[36m(pid=26685)[0m     @     0x7f3f70f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26678)[0m     @     0x7f5087d72ed4 at::native::copy_()
[2m[36m(pid=26678)[0m     @     0x7f50884b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26678)[0m     @     0x7f50885bd148 at::Tensor::copy_()
[2m[36m(pid=26670)[0m     @     0x7f3da719cc3f at::native::copy_impl()
[2m[36m(pid=26670)[0m     @     0x7f3da719ded4 at::native::copy_()
[2m[36m(pid=26670)[0m     @     0x7f3da78e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26670)[0m     @     0x7f3da79e8148 at::Tensor::copy_()
[2m[36m(pid=26695)[0m     @     0x7f0912904009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26695)[0m     @     0x7f0912902c3f at::native::copy_impl()
[2m[36m(pid=26695)[0m     @     0x7f0912903ed4 at::native::copy_()
[2m[36m(pid=26695)[0m     @     0x7f09130465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26711)[0m     @     0x7f8a3bb4fe11 at::TensorIterator::for_each()
[2m[36m(pid=26711)[0m     @     0x7f8a3e868c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26711)[0m     @     0x7f8a3e88bcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26711)[0m     @     0x7f8a3b8c9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26711)[0m     @     0x7f8a3b8c7c3f at::native::copy_impl()
[2m[36m(pid=26610)[0m     @     0x7f58740cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26610)[0m     @     0x7f587110c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26610)[0m     @     0x7f587110ac3f at::native::copy_impl()
[2m[36m(pid=26610)[0m     @     0x7f587110bed4 at::native::copy_()
[2m[36m(pid=26647)[0m     @     0x7f9c33049fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26647)[0m     @     0x7f9c3033d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26647)[0m     @     0x7f9c30340977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26647)[0m     @     0x7f9c30340b53 at::TensorIterator::for_each()
[2m[36m(pid=26671)[0m     @     0x7eddd910c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26671)[0m     @     0x7eddd910ac3f at::native::copy_impl()
[2m[36m(pid=26671)[0m     @     0x7eddd910bed4 at::native::copy_()
[2m[36m(pid=26671)[0m     @     0x7eddd984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26619)[0m     @     0x7f9d6e23de11 at::TensorIterator::for_each()
[2m[36m(pid=26619)[0m     @     0x7f9d70f56c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26619)[0m     @     0x7f9d70f79cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26619)[0m     @     0x7f9d6dfb7009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26619)[0m     @     0x7f9d6dfb5c3f at::native::copy_impl()
[2m[36m(pid=26590)[0m     @     0x7fc1ba4d8390 (unknown)
[2m[36m(pid=26590)[0m     @     0x7f92bc40afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26590)[0m     @     0x7f92b96fe64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26590)[0m     @     0x7f92b9701977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26590)[0m     @     0x7f92b9701b53 at::TensorIterator::for_each()
[2m[36m(pid=26652)[0m     @     0x7f79a7848ed4 at::native::copy_()
[2m[36m(pid=26652)[0m     @     0x7f79a7f8b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26652)[0m     @     0x7f79a8093148 at::Tensor::copy_()
[2m[36m(pid=26601)[0m     @     0x7f122e80dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26601)[0m     @     0x7f122b84b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26601)[0m     @     0x7f122b849c3f at::native::copy_impl()
[2m[36m(pid=26601)[0m     @     0x7f122b84aed4 at::native::copy_()
[2m[36m(pid=26657)[0m     @     0x7f5a11631c3f at::native::copy_impl()
[2m[36m(pid=26657)[0m     @     0x7f5a11632ed4 at::native::copy_()
[2m[36m(pid=26657)[0m     @     0x7f5a11d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26657)[0m     @     0x7f5a11e7d148 at::Tensor::copy_()
[2m[36m(pid=26657)[0m     @     0x7f5a13a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26696)[0m     @     0x7ed25d7e0ed4 at::native::copy_()
[2m[36m(pid=26696)[0m     @     0x7ed25df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26696)[0m     @     0x7ed25e02b148 at::Tensor::copy_()
[2m[36m(pid=26677)[0m     @     0x7ef81b084cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26677)[0m     @     0x7ef8180c2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26677)[0m     @     0x7ef8180c0c3f at::native::copy_impl()
[2m[36m(pid=26677)[0m     @     0x7ef8180c1ed4 at::native::copy_()
[2m[36m(pid=26667)[0m     @     0x7f2dacf14cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26667)[0m     @     0x7f2da9f52009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26667)[0m     @     0x7f2da9f50c3f at::native::copy_impl()
[2m[36m(pid=26667)[0m     @     0x7f2da9f51ed4 at::native::copy_()
[2m[36m(pid=26680)[0m     @     0x7f73e384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26680)[0m     @     0x7f73e3849c3f at::native::copy_impl()
[2m[36m(pid=26680)[0m     @     0x7f73e384aed4 at::native::copy_()
[2m[36m(pid=26680)[0m     @     0x7f73e3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26597)[0m     @     0x7f7c72be8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26597)[0m     @     0x7f7c72be6c3f at::native::copy_impl()
[2m[36m(pid=26597)[0m     @     0x7f7c72be7ed4 at::native::copy_()
[2m[36m(pid=26597)[0m     @     0x7f7c7332a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26625)[0m     @     0x7f2b179f4390 (unknown)
[2m[36m(pid=26625)[0m     @     0x7efc19b55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26625)[0m     @     0x7efc16e4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26625)[0m     @     0x7efc16e4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26625)[0m     @     0x7efc16e4cb53 at::TensorIterator::for_each()
[2m[36m(pid=26664)[0m     @     0x7faf7c51b390 (unknown)
[2m[36m(pid=26664)[0m     @     0x7f807e65afb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26664)[0m     @     0x7f807b94e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26664)[0m     @     0x7f807b951977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26664)[0m     @     0x7f807b951b53 at::TensorIterator::for_each()
[2m[36m(pid=26713)[0m     @     0x7eef92377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26713)[0m     @     0x7eef8f3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26713)[0m     @     0x7eef8f3b3c3f at::native::copy_impl()
[2m[36m(pid=26713)[0m     @     0x7eef8f3b4ed4 at::native::copy_()
[2m[36m(pid=26686)[0m     @     0x7f5d120d6c3f at::native::copy_impl()
[2m[36m(pid=26686)[0m     @     0x7f5d120d7ed4 at::native::copy_()
[2m[36m(pid=26686)[0m     @     0x7f5d1281a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26595)[0m     @     0x7f8d81d09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26595)[0m     @     0x7f8d81d07c3f at::native::copy_impl()
[2m[36m(pid=26595)[0m     @     0x7f8d81d08ed4 at::native::copy_()
[2m[36m(pid=26595)[0m     @     0x7f8d8244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26608)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26608)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26608)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26594)[0m     @     0x7f40ca5aafb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26594)[0m     @     0x7f40c789e64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26594)[0m     @     0x7f40c78a1977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26684)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26684)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26684)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26684)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26684)[0m *** SIGSEGV (@0x0) received by PID 26684 (TID 0x7f0f632ea700) from PID 0; stack trace: ***
[2m[36m(pid=26622)[0m     @     0x7ecdd58b9977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26622)[0m     @     0x7ecdd58b9b53 at::TensorIterator::for_each()
[2m[36m(pid=26621)[0m     @     0x7ed8f2293fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26621)[0m     @     0x7ed8ef58764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26621)[0m     @     0x7ed8ef58a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26708)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26708)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26708)[0m *** Aborted at 1604574261 (unix time) try "date -d @1604574261" if you are using GNU date ***
[2m[36m(pid=26708)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26708)[0m *** SIGSEGV (@0x0) received by PID 26708 (TID 0x7f4b7cc39700) from PID 0; stack trace: ***
[2m[36m(pid=26708)[0m     @     0x7f4b7c812390 (unknown)
[2m[36m(pid=26708)[0m     @     0x7f1c7e885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26708)[0m     @     0x7f1c7bb7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26681)[0m     @     0x7ed0563d4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26681)[0m     @     0x7ed0563d4b53 at::TensorIterator::for_each()
[2m[36m(pid=26681)[0m     @     0x7ed0563d4e11 at::TensorIterator::for_each()
[2m[36m(pid=26681)[0m     @     0x7ed0590edc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26596)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26596)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26596)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26596)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26596)[0m *** SIGSEGV (@0x0) received by PID 26596 (TID 0x7fd5f4196700) from PID 0; stack trace: ***
[2m[36m(pid=26596)[0m     @     0x7fd5f3d6f390 (unknown)
[2m[36m(pid=26596)[0m     @     0x7fa6f5f78fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26598)[0m     @     0x7f3ba2401b53 at::TensorIterator::for_each()
[2m[36m(pid=26598)[0m     @     0x7f3ba2401e11 at::TensorIterator::for_each()
[2m[36m(pid=26598)[0m     @     0x7f3ba511ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26598)[0m     @     0x7f3ba513dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26598)[0m     @     0x7f3ba217b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26598)[0m     @     0x7f3ba2179c3f at::native::copy_impl()
[2m[36m(pid=26611)[0m     @     0x7fbfae35e977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26611)[0m     @     0x7fbfae35eb53 at::TensorIterator::for_each()
[2m[36m(pid=26611)[0m     @     0x7fbfae35ee11 at::TensorIterator::for_each()
[2m[36m(pid=26611)[0m     @     0x7fbfb1077c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26611)[0m     @     0x7fbfb109acfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26614)[0m     @     0x7fc7dc4ba64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26614)[0m     @     0x7fc7dc4bd977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26614)[0m     @     0x7fc7dc4bdb53 at::TensorIterator::for_each()
[2m[36m(pid=26614)[0m     @     0x7fc7dc4bde11 at::TensorIterator::for_each()
[2m[36m(pid=26728)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26728)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26728)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26728)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26728)[0m *** SIGSEGV (@0x0) received by PID 26728 (TID 0x7faa18db9700) from PID 0; stack trace: ***
[2m[36m(pid=26694)[0m     @     0x7f6914825977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26694)[0m     @     0x7f6914825b53 at::TensorIterator::for_each()
[2m[36m(pid=26694)[0m     @     0x7f6914825e11 at::TensorIterator::for_each()
[2m[36m(pid=26694)[0m     @     0x7f691753ec12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26694)[0m     @     0x7f6917561cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26665)[0m     @     0x7fb64766d390 (unknown)
[2m[36m(pid=26665)[0m     @     0x7f8749869fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26665)[0m     @     0x7f8746b5d64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26665)[0m     @     0x7f8746b60977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26665)[0m     @     0x7f8746b60b53 at::TensorIterator::for_each()
[2m[36m(pid=26592)[0m     @     0x7edf1dfa3fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26592)[0m     @     0x7edf1b29764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26592)[0m     @     0x7edf1b29a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26592)[0m     @     0x7edf1b29ab53 at::TensorIterator::for_each()
[2m[36m(pid=26607)[0m     @     0x7eea9666ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26607)[0m     @     0x7eea9668dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26607)[0m     @     0x7eea936cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26607)[0m     @     0x7eea936c9c3f at::native::copy_impl()
[2m[36m(pid=26607)[0m     @     0x7eea936caed4 at::native::copy_()
[2m[36m(pid=26606)[0m     @     0x7f33bcd67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26606)[0m     @     0x7f33bcd67b53 at::TensorIterator::for_each()
[2m[36m(pid=26606)[0m     @     0x7f33bcd67e11 at::TensorIterator::for_each()
[2m[36m(pid=26606)[0m     @     0x7f33bfa80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26606)[0m     @     0x7f33bfaa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26663)[0m     @     0x7fab3a68f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26663)[0m     @     0x7fab3a692977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26663)[0m     @     0x7fab3a692b53 at::TensorIterator::for_each()
[2m[36m(pid=26663)[0m     @     0x7fab3a692e11 at::TensorIterator::for_each()
[2m[36m(pid=26613)[0m     @     0x7edcedf3ab53 at::TensorIterator::for_each()
[2m[36m(pid=26613)[0m     @     0x7edcedf3ae11 at::TensorIterator::for_each()
[2m[36m(pid=26613)[0m     @     0x7edcf0c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26613)[0m     @     0x7edcf0c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26605)[0m     @     0x7f0fe2344fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26605)[0m     @     0x7f0fdf63864b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26605)[0m     @     0x7f0fdf63b977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26605)[0m     @     0x7f0fdf63bb53 at::TensorIterator::for_each()
[2m[36m(pid=26726)[0m     @     0x7eda956a8977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26726)[0m     @     0x7eda956a8b53 at::TensorIterator::for_each()
[2m[36m(pid=26726)[0m     @     0x7eda956a8e11 at::TensorIterator::for_each()
[2m[36m(pid=26726)[0m     @     0x7eda983c1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26726)[0m     @     0x7eda983e4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26609)[0m     @     0x7f2715c78b53 at::TensorIterator::for_each()
[2m[36m(pid=26609)[0m     @     0x7f2715c78e11 at::TensorIterator::for_each()
[2m[36m(pid=26609)[0m     @     0x7f2718991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26609)[0m     @     0x7f27189b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26609)[0m     @     0x7f27159f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26691)[0m     @     0x7f4f909e4977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26691)[0m     @     0x7f4f909e4b53 at::TensorIterator::for_each()
[2m[36m(pid=26691)[0m     @     0x7f4f909e4e11 at::TensorIterator::for_each()
[2m[36m(pid=26691)[0m     @     0x7f4f936fdc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26691)[0m     @     0x7f4f93720cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26616)[0m     @     0x7f80b15fb977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26616)[0m     @     0x7f80b15fbb53 at::TensorIterator::for_each()
[2m[36m(pid=26616)[0m     @     0x7f80b15fbe11 at::TensorIterator::for_each()
[2m[36m(pid=26616)[0m     @     0x7f80b4314c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26616)[0m     @     0x7f80b4337cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26656)[0m     @     0x7fb4e5c78977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26656)[0m     @     0x7fb4e5c78b53 at::TensorIterator::for_each()
[2m[36m(pid=26656)[0m     @     0x7fb4e5c78e11 at::TensorIterator::for_each()
[2m[36m(pid=26656)[0m     @     0x7fb4e8991c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26624)[0m     @     0x7f38d3643fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26624)[0m     @     0x7f38d093764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26624)[0m     @     0x7f38d093a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26624)[0m     @     0x7f38d093ab53 at::TensorIterator::for_each()
[2m[36m(pid=26591)[0m     @     0x7f4b65f3a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26591)[0m     @     0x7f4b65f3ab53 at::TensorIterator::for_each()
[2m[36m(pid=26591)[0m     @     0x7f4b65f3ae11 at::TensorIterator::for_each()
[2m[36m(pid=26591)[0m     @     0x7f4b68c53c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26591)[0m     @     0x7f4b68c76cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26591)[0m     @     0x7f4b65cb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26717)[0m     @     0x7ed2b5956148 at::Tensor::copy_()
[2m[36m(pid=26717)[0m     @     0x7ed2b754d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26717)[0m     @     0x7ed2b584e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26717)[0m     @     0x7ed2b5956148 at::Tensor::copy_()
[2m[36m(pid=26717)[0m     @     0x7ed2bbc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26717)[0m     @     0x55d2484a8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26717)[0m     @     0x55d248403b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26717)[0m     @     0x55d24848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26717)[0m     @     0x55d24848fa20 method_vectorcall
[2m[36m(pid=26717)[0m     @     0x55d248403bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26717)[0m     @     0x55d24848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26717)[0m     @     0x55d24848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26717)[0m     @     0x55d248404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26717)[0m     @     0x55d24848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26717)[0m     @     0x55d24848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26717)[0m     @     0x55d248404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26717)[0m     @     0x55d24848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26717)[0m     @     0x55d24848f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26717)[0m     @     0x55d248404689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26717)[0m     @     0x55d24848ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26679)[0m     @     0x7f19ba39d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26679)[0m     @     0x7f19b869e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26707)[0m     @     0x7fbb2675a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26707)[0m     @     0x7fbb24a5b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26716)[0m     @     0x7edfd9b7f148 at::Tensor::copy_()
[2m[36m(pid=26716)[0m     @     0x7edfdb776989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26716)[0m     @     0x7edfd9a775cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26720)[0m     @     0x7fb888cb6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26720)[0m     @     0x7fb886fb75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26720)[0m     @     0x7fb8870bf148 at::Tensor::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa7521faed4 at::native::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa75293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26687)[0m     @     0x7fae99d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26687)[0m     @     0x7fae980385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26687)[0m     @     0x7fae98140148 at::Tensor::copy_()
[2m[36m(pid=26687)[0m     @     0x7fae9e3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26602)[0m     @     0x7f14b4b88b53 at::TensorIterator::for_each()
[2m[36m(pid=26602)[0m     @     0x7f14b4b88e11 at::TensorIterator::for_each()
[2m[36m(pid=26602)[0m     @     0x7f14b78a1c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26719)[0m     @     0x7f8b3b66fb53 at::TensorIterator::for_each()
[2m[36m(pid=26719)[0m     @     0x7f8b3b66fe11 at::TensorIterator::for_each()
[2m[36m(pid=26719)[0m     @     0x7f8b3e388c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26626)[0m     @     0x7f6fce692b53 at::TensorIterator::for_each()
[2m[36m(pid=26626)[0m     @     0x7f6fce692e11 at::TensorIterator::for_each()
[2m[36m(pid=26626)[0m     @     0x7f6fd13abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26724)[0m     @     0x7fb7baf33977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26724)[0m     @     0x7fb7baf33b53 at::TensorIterator::for_each()
[2m[36m(pid=26724)[0m     @     0x7fb7baf33e11 at::TensorIterator::for_each()
[2m[36m(pid=26651)[0m     @     0x7fa8f3ad1b53 at::TensorIterator::for_each()
[2m[36m(pid=26651)[0m     @     0x7fa8f3ad1e11 at::TensorIterator::for_each()
[2m[36m(pid=26651)[0m     @     0x7fa8f67eac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26593)[0m     @     0x7f9f7ee4cb53 at::TensorIterator::for_each()
[2m[36m(pid=26593)[0m     @     0x7f9f7ee4ce11 at::TensorIterator::for_each()
[2m[36m(pid=26593)[0m     @     0x7f9f81b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26600)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26600)[0m *** SIGSEGV (@0x0) received by PID 26600 (TID 0x7f2e48c1d700) from PID 0; stack trace: ***
[2m[36m(pid=26612)[0m     @     0x7f9661875390 (unknown)
[2m[36m(pid=26612)[0m     @     0x7f6763a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26612)[0m     @     0x7f6760d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26612)[0m     @     0x7f6760d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26644)[0m     @     0x7f4aacc1f64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26644)[0m     @     0x7f4aacc22977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26644)[0m     @     0x7f4aacc22b53 at::TensorIterator::for_each()
[2m[36m(pid=26646)[0m     @     0x7f9dab446977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26646)[0m     @     0x7f9dab446b53 at::TensorIterator::for_each()
[2m[36m(pid=26683)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26683)[0m *** SIGSEGV (@0x0) received by PID 26683 (TID 0x7f50572e3700) from PID 0; stack trace: ***
[2m[36m(pid=26683)[0m     @     0x7f5056ebc390 (unknown)
[2m[36m(pid=26683)[0m     @     0x7f21590acfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26683)[0m     @     0x7f21563a064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26730)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26730)[0m *** SIGSEGV (@0x0) received by PID 26730 (TID 0x7f3931d78700) from PID 0; stack trace: ***
[2m[36m(pid=26730)[0m     @     0x7f3931951390 (unknown)
[2m[36m(pid=26730)[0m     @     0x7f0a33a70fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26730)[0m     @     0x7f0a30d6464b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26676)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26676)[0m *** SIGSEGV (@0x0) received by PID 26676 (TID 0x7f8a3bdea700) from PID 0; stack trace: ***
[2m[36m(pid=26702)[0m     @     0x7f127351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26702)[0m     @     0x7f1273627148 at::Tensor::copy_()
[2m[36m(pid=26702)[0m     @     0x7f127521e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26603)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26603)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26603)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26603)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26603)[0m *** SIGSEGV (@0x0) received by PID 26603 (TID 0x7f1ecefdd700) from PID 0; stack trace: ***
[2m[36m(pid=26705)[0m     @     0x7ee4da44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26705)[0m     @     0x7ee4da553148 at::Tensor::copy_()
[2m[36m(pid=26705)[0m     @     0x7ee4e0809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26705)[0m     @     0x557994347fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26705)[0m     @     0x5579942a2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26705)[0m     @     0x55799432dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26705)[0m     @     0x55799432ea20 method_vectorcall
[2m[36m(pid=26705)[0m     @     0x5579942a2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26705)[0m     @     0x55799432dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26705)[0m     @     0x55799432e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26705)[0m     @     0x5579942a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26705)[0m     @     0x55799432dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26705)[0m     @     0x55799432e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26705)[0m     @     0x5579942a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26705)[0m     @     0x55799432dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26705)[0m     @     0x55799432e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26682)[0m     @     0x7f8e06c16148 at::Tensor::copy_()
[2m[36m(pid=26682)[0m     @     0x7f8e0880d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26682)[0m     @     0x7f8e06b0e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26666)[0m     @     0x7f7bcd32b148 at::Tensor::copy_()
[2m[36m(pid=26666)[0m     @     0x7f7bcef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26666)[0m     @     0x7f7bcd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26649)[0m     @     0x7f42c018bed4 at::native::copy_()
[2m[36m(pid=26649)[0m     @     0x7f42c08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26649)[0m     @     0x7f42c09d6148 at::Tensor::copy_()
[2m[36m(pid=26690)[0m     @     0x7fa387a5bed4 at::native::copy_()
[2m[36m(pid=26690)[0m     @     0x7fa38819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26690)[0m     @     0x7fa3882a6148 at::Tensor::copy_()
[2m[36m(pid=26721)[0m     @     0x7f1e18126148 at::Tensor::copy_()
[2m[36m(pid=26721)[0m     @     0x7f1e19d1d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26721)[0m     @     0x7f1e1801e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26685)[0m     @     0x7f3f71015148 at::Tensor::copy_()
[2m[36m(pid=26685)[0m     @     0x7f3f72c0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26685)[0m     @     0x7f3f70f0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26678)[0m     @     0x7f508a1b4989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26678)[0m     @     0x7f50884b55cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26678)[0m     @     0x7f50885bd148 at::Tensor::copy_()
[2m[36m(pid=26678)[0m     @     0x7f508e873bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26678)[0m     @     0x55e50d70ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26670)[0m     @     0x7f3da95df989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26670)[0m     @     0x7f3da78e05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26670)[0m     @     0x7f3da79e8148 at::Tensor::copy_()
[2m[36m(pid=26670)[0m     @     0x7f3dadc9ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26670)[0m     @     0x556565bd0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26670)[0m     @     0x556565b2bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26670)[0m     @     0x556565bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26670)[0m     @     0x556565bb7a20 method_vectorcall
[2m[36m(pid=26670)[0m     @     0x556565b2bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26670)[0m     @     0x556565bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26670)[0m     @     0x556565bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26670)[0m     @     0x556565b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26670)[0m     @     0x556565bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26670)[0m     @     0x556565bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26670)[0m     @     0x556565b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26670)[0m     @     0x556565bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26670)[0m     @     0x556565bb7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26670)[0m     @     0x556565b2c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26670)[0m     @     0x556565bb6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x7f091314e148 at::Tensor::copy_()
[2m[36m(pid=26695)[0m     @     0x7f0914d45989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26695)[0m     @     0x7f09130465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26711)[0m     @     0x7f8a3b8c8ed4 at::native::copy_()
[2m[36m(pid=26711)[0m     @     0x7f8a3c00b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26610)[0m     @     0x7f587184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26610)[0m     @     0x7f5871956148 at::Tensor::copy_()
[2m[36m(pid=26610)[0m     @     0x7f587354d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26647)[0m     @     0x7f9c30340e11 at::TensorIterator::for_each()
[2m[36m(pid=26647)[0m     @     0x7f9c33059c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26647)[0m     @     0x7f9c3307ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26647)[0m     @     0x7f9c300ba009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26647)[0m     @     0x7f9c300b8c3f at::native::copy_impl()
[2m[36m(pid=26671)[0m     @     0x7eddd9956148 at::Tensor::copy_()
[2m[36m(pid=26671)[0m     @     0x7edddb54d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26671)[0m     @     0x7eddd984e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26619)[0m     @     0x7f9d6dfb6ed4 at::native::copy_()
[2m[36m(pid=26619)[0m     @     0x7f9d6e6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26590)[0m     @     0x7f92b9701e11 at::TensorIterator::for_each()
[2m[36m(pid=26590)[0m     @     0x7f92bc41ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26590)[0m     @     0x7f92bc43dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26652)[0m     @     0x7f79a9c8a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26652)[0m     @     0x7f79a7f8b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26652)[0m     @     0x7f79a8093148 at::Tensor::copy_()
[2m[36m(pid=26652)[0m     @     0x7f79ae349bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26652)[0m     @     0x5571d8e53fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26652)[0m     @     0x5571d8daeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x7f122bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26601)[0m     @     0x7f122c095148 at::Tensor::copy_()
[2m[36m(pid=26601)[0m     @     0x7f122dc8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26657)[0m     @     0x7f5a11d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26657)[0m     @     0x7f5a11e7d148 at::Tensor::copy_()
[2m[36m(pid=26657)[0m     @     0x7f5a18133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26657)[0m     @     0x55fe9fe37fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26657)[0m     @     0x55fe9fd92b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26657)[0m     @     0x55fe9fe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26657)[0m     @     0x55fe9fe1ea20 method_vectorcall
[2m[36m(pid=26657)[0m     @     0x55fe9fd92bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26657)[0m     @     0x55fe9fe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26657)[0m     @     0x55fe9fe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26657)[0m     @     0x55fe9fd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26657)[0m     @     0x55fe9fe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26657)[0m     @     0x55fe9fe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26657)[0m     @     0x55fe9fd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26657)[0m     @     0x55fe9fe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26657)[0m     @     0x55fe9fe1e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26657)[0m     @     0x55fe9fd93689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26657)[0m     @     0x55fe9fe1dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x7ed25fc22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26696)[0m     @     0x7ed25df235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26696)[0m     @     0x7ed25e02b148 at::Tensor::copy_()
[2m[36m(pid=26696)[0m     @     0x7ed2642e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26696)[0m     @     0x5613adae6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26696)[0m     @     0x5613ada41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x7ef8188045cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26677)[0m     @     0x7ef81890c148 at::Tensor::copy_()
[2m[36m(pid=26677)[0m     @     0x7ef81a503989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26667)[0m     @     0x7f2daa6945cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26667)[0m     @     0x7f2daa79c148 at::Tensor::copy_()
[2m[36m(pid=26667)[0m     @     0x7f2dac393989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26667)[0m     @     0x7f2daa6945cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26680)[0m     @     0x7f73e4095148 at::Tensor::copy_()
[2m[36m(pid=26680)[0m     @     0x7f73e5c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26680)[0m     @     0x7f73e3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26680)[0m     @     0x7f73e4095148 at::Tensor::copy_()
[2m[36m(pid=26597)[0m     @     0x7f7c73432148 at::Tensor::copy_()
[2m[36m(pid=26597)[0m     @     0x7f7c75029989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26597)[0m     @     0x7f7c7332a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26597)[0m     @     0x7f7c73432148 at::Tensor::copy_()
[2m[36m(pid=26625)[0m     @     0x7efc16e4ce11 at::TensorIterator::for_each()
[2m[36m(pid=26625)[0m     @     0x7efc19b65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26625)[0m     @     0x7efc19b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26625)[0m     @     0x7efc16bc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26625)[0m     @     0x7efc16bc4c3f at::native::copy_impl()
[2m[36m(pid=26664)[0m     @     0x7f807b951e11 at::TensorIterator::for_each()
[2m[36m(pid=26664)[0m     @     0x7f807e66ac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26664)[0m     @     0x7f807e68dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26664)[0m     @     0x7f807b6cb009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26664)[0m     @     0x7f807b6c9c3f at::native::copy_impl()
[2m[36m(pid=26713)[0m     @     0x7eef8faf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26713)[0m     @     0x7eef8fbff148 at::Tensor::copy_()
[2m[36m(pid=26713)[0m     @     0x7eef917f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26713)[0m     @     0x7eef8faf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26686)[0m     @     0x7f5d12922148 at::Tensor::copy_()
[2m[36m(pid=26686)[0m     @     0x7f5d14519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26686)[0m     @     0x7f5d1281a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26686)[0m     @     0x7f5d12922148 at::Tensor::copy_()
[2m[36m(pid=26686)[0m     @     0x7f5d18bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26686)[0m     @     0x56213627afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26686)[0m     @     0x5621361d5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26686)[0m     @     0x562136260baf _PyEval_EvalCodeWithName
[2m[36m(pid=26686)[0m     @     0x562136261a20 method_vectorcall
[2m[36m(pid=26686)[0m     @     0x5621361d5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26686)[0m     @     0x562136260baf _PyEval_EvalCodeWithName
[2m[36m(pid=26686)[0m     @     0x562136261643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26686)[0m     @     0x5621361d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26686)[0m     @     0x562136260baf _PyEval_EvalCodeWithName
[2m[36m(pid=26686)[0m     @     0x562136261643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26686)[0m     @     0x5621361d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26686)[0m     @     0x562136260baf _PyEval_EvalCodeWithName
[2m[36m(pid=26686)[0m     @     0x562136261643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26686)[0m     @     0x5621361d6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x7f8d82553148 at::Tensor::copy_()
[2m[36m(pid=26595)[0m     @     0x7f8d8414a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26595)[0m     @     0x7f8d8244b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26595)[0m     @     0x7f8d82553148 at::Tensor::copy_()
[2m[36m(pid=26608)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26608)[0m *** SIGSEGV (@0x0) received by PID 26608 (TID 0x7fe2d3c7a700) from PID 0; stack trace: ***
[2m[36m(pid=26608)[0m     @     0x7fe2d3853390 (unknown)
[2m[36m(pid=26608)[0m     @     0x7fb3d5a72fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26608)[0m     @     0x7fb3d2d6664b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26608)[0m     @     0x7fb3d2d69977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26594)[0m     @     0x7f40c78a1b53 at::TensorIterator::for_each()
[2m[36m(pid=26594)[0m     @     0x7f40c78a1e11 at::TensorIterator::for_each()
[2m[36m(pid=26594)[0m     @     0x7f40ca5bac12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26594)[0m     @     0x7f40ca5ddcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26594)[0m     @     0x7f40c761b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26594)[0m     @     0x7f40c7619c3f at::native::copy_impl()
[2m[36m(pid=26684)[0m     @     0x7f0f62ec3390 (unknown)
[2m[36m(pid=26684)[0m     @     0x7ee0650b8fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26684)[0m     @     0x7ee0623ac64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26684)[0m     @     0x7ee0623af977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26622)[0m     @     0x7ecdd58b9e11 at::TensorIterator::for_each()
[2m[36m(pid=26622)[0m     @     0x7ecdd85d2c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26622)[0m     @     0x7ecdd85f5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26622)[0m     @     0x7ecdd5633009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26622)[0m     @     0x7ecdd5631c3f at::native::copy_impl()
[2m[36m(pid=26622)[0m     @     0x7ecdd5632ed4 at::native::copy_()
[2m[36m(pid=26621)[0m     @     0x7ed8ef58ab53 at::TensorIterator::for_each()
[2m[36m(pid=26621)[0m     @     0x7ed8ef58ae11 at::TensorIterator::for_each()
[2m[36m(pid=26621)[0m     @     0x7ed8f22a3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26621)[0m     @     0x7ed8f22c6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26621)[0m     @     0x7ed8ef304009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26621)[0m     @     0x7ed8ef302c3f at::native::copy_impl()
[2m[36m(pid=26654)[0m /root/miniconda3/lib/python3.8/site-packages/ray/rllib/utils/torch_ops.py:65: UserWarning: The given NumPy array is not writeable, and PyTorch does not support non-writeable tensors. This means you can write to the underlying (supposedly non-writeable) NumPy array using the tensor. You may want to copy the array to protect its data or make it writeable before converting it to a tensor. This type of warning will be suppressed for the rest of this program. (Triggered internally at  /opt/conda/conda-bld/pytorch_1603729061180/work/torch/csrc/utils/tensor_numpy.cpp:141.)
[2m[36m(pid=26654)[0m   tensor = torch.from_numpy(np.asarray(item))
[2m[36m(pid=26654)[0m *** Aborted at 1604574262 (unix time) try "date -d @1604574262" if you are using GNU date ***
[2m[36m(pid=26654)[0m PC: @                0x0 (unknown)
[2m[36m(pid=26654)[0m *** SIGSEGV (@0x0) received by PID 26654 (TID 0x7fb9731c6700) from PID 0; stack trace: ***
[2m[36m(pid=26654)[0m     @     0x7fb972d9f390 (unknown)
[2m[36m(pid=26654)[0m     @     0x7f8a74f73fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26654)[0m     @     0x7f8a7226764b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26654)[0m     @     0x7f8a7226a977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26708)[0m     @     0x7f1c7bb7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26708)[0m     @     0x7f1c7bb7cb53 at::TensorIterator::for_each()
[2m[36m(pid=26708)[0m     @     0x7f1c7bb7ce11 at::TensorIterator::for_each()
[2m[36m(pid=26708)[0m     @     0x7f1c7e895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26708)[0m     @     0x7f1c7e8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26681)[0m     @     0x7ed059110cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26681)[0m     @     0x7ed05614e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26681)[0m     @     0x7ed05614cc3f at::native::copy_impl()
[2m[36m(pid=26681)[0m     @     0x7ed05614ded4 at::native::copy_()
[2m[36m(pid=26596)[0m     @     0x7fa6f326c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26596)[0m     @     0x7fa6f326f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26596)[0m     @     0x7fa6f326fb53 at::TensorIterator::for_each()
[2m[36m(pid=26598)[0m     @     0x7f3ba217aed4 at::native::copy_()
[2m[36m(pid=26598)[0m     @     0x7f3ba28bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26611)[0m     @     0x7fbfae0d8009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26611)[0m     @     0x7fbfae0d6c3f at::native::copy_impl()
[2m[36m(pid=26611)[0m     @     0x7fbfae0d7ed4 at::native::copy_()
[2m[36m(pid=26611)[0m     @     0x7fbfae81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26614)[0m     @     0x7fc7df1d6c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26614)[0m     @     0x7fc7df1f9cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26614)[0m     @     0x7fc7dc237009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26614)[0m     @     0x7fc7dc235c3f at::native::copy_impl()
[2m[36m(pid=26728)[0m     @     0x7faa18992390 (unknown)
[2m[36m(pid=26728)[0m     @     0x7f7b1aa9cfb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26728)[0m     @     0x7f7b17d9064b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26694)[0m     @     0x7f691459f009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26694)[0m     @     0x7f691459dc3f at::native::copy_impl()
[2m[36m(pid=26694)[0m     @     0x7f691459eed4 at::native::copy_()
[2m[36m(pid=26665)[0m     @     0x7f8746b60e11 at::TensorIterator::for_each()
[2m[36m(pid=26665)[0m     @     0x7f8749879c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26665)[0m     @     0x7f874989ccfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26665)[0m     @     0x7f87468da009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26665)[0m     @     0x7f87468d8c3f at::native::copy_impl()
[2m[36m(pid=26592)[0m     @     0x7edf1b29ae11 at::TensorIterator::for_each()
[2m[36m(pid=26592)[0m     @     0x7edf1dfb3c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26592)[0m     @     0x7edf1dfd6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26592)[0m     @     0x7edf1b014009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26592)[0m     @     0x7edf1b012c3f at::native::copy_impl()
[2m[36m(pid=26607)[0m     @     0x7eea93e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26607)[0m     @     0x7eea93f15148 at::Tensor::copy_()
[2m[36m(pid=26607)[0m     @     0x7eea95b0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26606)[0m     @     0x7f33bcae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26606)[0m     @     0x7f33bcadfc3f at::native::copy_impl()
[2m[36m(pid=26606)[0m     @     0x7f33bcae0ed4 at::native::copy_()
[2m[36m(pid=26663)[0m     @     0x7fab3d3abc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26663)[0m     @     0x7fab3d3cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26663)[0m     @     0x7fab3a40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26663)[0m     @     0x7fab3a40ac3f at::native::copy_impl()
[2m[36m(pid=26613)[0m     @     0x7edcedcb4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26613)[0m     @     0x7edcedcb2c3f at::native::copy_impl()
[2m[36m(pid=26613)[0m     @     0x7edcedcb3ed4 at::native::copy_()
[2m[36m(pid=26613)[0m     @     0x7edcee3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26605)[0m     @     0x7f0fdf63be11 at::TensorIterator::for_each()
[2m[36m(pid=26605)[0m     @     0x7f0fe2354c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26605)[0m     @     0x7f0fe2377cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26605)[0m     @     0x7f0fdf3b5009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26605)[0m     @     0x7f0fdf3b3c3f at::native::copy_impl()
[2m[36m(pid=26605)[0m     @     0x7f0fdf3b4ed4 at::native::copy_()
[2m[36m(pid=26726)[0m     @     0x7eda95422009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26726)[0m     @     0x7eda95420c3f at::native::copy_impl()
[2m[36m(pid=26726)[0m     @     0x7eda95421ed4 at::native::copy_()
[2m[36m(pid=26726)[0m     @     0x7eda95b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26726)[0m     @     0x7eda95c6c148 at::Tensor::copy_()
[2m[36m(pid=26609)[0m     @     0x7f27159f0c3f at::native::copy_impl()
[2m[36m(pid=26609)[0m     @     0x7f27159f1ed4 at::native::copy_()
[2m[36m(pid=26609)[0m     @     0x7f27161345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26609)[0m     @     0x7f271623c148 at::Tensor::copy_()
[2m[36m(pid=26691)[0m     @     0x7f4f9075e009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26691)[0m     @     0x7f4f9075cc3f at::native::copy_impl()
[2m[36m(pid=26691)[0m     @     0x7f4f9075ded4 at::native::copy_()
[2m[36m(pid=26691)[0m     @     0x7f4f90ea05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26616)[0m     @     0x7f80b1375009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26616)[0m     @     0x7f80b1373c3f at::native::copy_impl()
[2m[36m(pid=26616)[0m     @     0x7f80b1374ed4 at::native::copy_()
[2m[36m(pid=26616)[0m     @     0x7f80b1ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26656)[0m     @     0x7fb4e89b4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26656)[0m     @     0x7fb4e59f2009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26656)[0m     @     0x7fb4e59f0c3f at::native::copy_impl()
[2m[36m(pid=26656)[0m     @     0x7fb4e59f1ed4 at::native::copy_()
[2m[36m(pid=26656)[0m     @     0x7fb4e61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26624)[0m     @     0x7f38d093ae11 at::TensorIterator::for_each()
[2m[36m(pid=26624)[0m     @     0x7f38d3653c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26624)[0m     @     0x7f38d3676cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26624)[0m     @     0x7f38d06b4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26624)[0m     @     0x7f38d06b2c3f at::native::copy_impl()
[2m[36m(pid=26624)[0m     @     0x7f38d06b3ed4 at::native::copy_()
[2m[36m(pid=26591)[0m     @     0x7f4b65cb2c3f at::native::copy_impl()
[2m[36m(pid=26591)[0m     @     0x7f4b65cb3ed4 at::native::copy_()
[2m[36m(pid=26591)[0m     @     0x7f4b663f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26591)[0m     @     0x7f4b664fe148 at::Tensor::copy_()
[2m[36m(pid=26679)[0m     @     0x7f19b87a6148 at::Tensor::copy_()
[2m[36m(pid=26679)[0m     @     0x7f19bea5cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26679)[0m     @     0x5595151bdfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26679)[0m     @     0x559515118b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26679)[0m     @     0x5595151a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26679)[0m     @     0x5595151a4a20 method_vectorcall
[2m[36m(pid=26679)[0m     @     0x559515118bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26679)[0m     @     0x5595151a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26679)[0m     @     0x5595151a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26679)[0m     @     0x559515119689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26679)[0m     @     0x5595151a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26679)[0m     @     0x5595151a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26679)[0m     @     0x559515119689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26679)[0m     @     0x5595151a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26679)[0m     @     0x5595151a4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26679)[0m     @     0x559515119689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26679)[0m     @     0x5595151a3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26707)[0m     @     0x7fbb24b63148 at::Tensor::copy_()
[2m[36m(pid=26707)[0m     @     0x7fbb2ae19bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26707)[0m     @     0x56097dab8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26707)[0m     @     0x56097da13b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26707)[0m     @     0x56097da9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26707)[0m     @     0x56097da9fa20 method_vectorcall
[2m[36m(pid=26707)[0m     @     0x56097da13bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26707)[0m     @     0x56097da9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26707)[0m     @     0x56097da9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26707)[0m     @     0x56097da14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26707)[0m     @     0x56097da9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26707)[0m     @     0x56097da9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26707)[0m     @     0x56097da14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26707)[0m     @     0x56097da9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26707)[0m     @     0x56097da9f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26707)[0m     @     0x56097da14689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26707)[0m     @     0x56097da9ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26716)[0m     @     0x7edfd9b7f148 at::Tensor::copy_()
[2m[36m(pid=26716)[0m     @     0x7edfdfe35bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26716)[0m     @     0x55a34d48cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26716)[0m     @     0x55a34d3e7b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26716)[0m     @     0x55a34d472baf _PyEval_EvalCodeWithName
[2m[36m(pid=26716)[0m     @     0x55a34d473a20 method_vectorcall
[2m[36m(pid=26716)[0m     @     0x55a34d3e7bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26716)[0m     @     0x55a34d472baf _PyEval_EvalCodeWithName
[2m[36m(pid=26716)[0m     @     0x55a34d473643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26716)[0m     @     0x55a34d3e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26716)[0m     @     0x55a34d472baf _PyEval_EvalCodeWithName
[2m[36m(pid=26716)[0m     @     0x55a34d473643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26716)[0m     @     0x55a34d3e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26716)[0m     @     0x55a34d472baf _PyEval_EvalCodeWithName
[2m[36m(pid=26716)[0m     @     0x55a34d473643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26716)[0m     @     0x55a34d3e8689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26716)[0m     @     0x55a34d472baf _PyEval_EvalCodeWithName
[2m[36m(pid=26720)[0m     @     0x7fb88d375bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26720)[0m     @     0x564f4f641fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26720)[0m     @     0x564f4f59cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26720)[0m     @     0x564f4f627baf _PyEval_EvalCodeWithName
[2m[36m(pid=26720)[0m     @     0x564f4f628a20 method_vectorcall
[2m[36m(pid=26720)[0m     @     0x564f4f59cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26720)[0m     @     0x564f4f627baf _PyEval_EvalCodeWithName
[2m[36m(pid=26720)[0m     @     0x564f4f628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26720)[0m     @     0x564f4f59d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26720)[0m     @     0x564f4f627baf _PyEval_EvalCodeWithName
[2m[36m(pid=26720)[0m     @     0x564f4f628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26720)[0m     @     0x564f4f59d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26720)[0m     @     0x564f4f627baf _PyEval_EvalCodeWithName
[2m[36m(pid=26720)[0m     @     0x564f4f628643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26720)[0m     @     0x564f4f59d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26720)[0m     @     0x564f4f627baf _PyEval_EvalCodeWithName
[2m[36m(pid=26669)[0m     @     0x7fa752a45148 at::Tensor::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa75463c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa75293d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26669)[0m     @     0x7fa752a45148 at::Tensor::copy_()
[2m[36m(pid=26669)[0m     @     0x7fa758cfbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26669)[0m     @     0x5594545fafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26669)[0m     @     0x559454555b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26669)[0m     @     0x5594545e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26669)[0m     @     0x5594545e1a20 method_vectorcall
[2m[36m(pid=26669)[0m     @     0x559454555bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26669)[0m     @     0x5594545e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26669)[0m     @     0x5594545e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26669)[0m     @     0x559454556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26669)[0m     @     0x5594545e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26669)[0m     @     0x5594545e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26669)[0m     @     0x559454556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26669)[0m     @     0x5594545e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26669)[0m     @     0x5594545e1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26669)[0m     @     0x559454556689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26669)[0m     @     0x5594545e0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26687)[0m     @     0x55d11f5f0fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26687)[0m     @     0x55d11f54bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26687)[0m     @     0x55d11f5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26687)[0m     @     0x55d11f5d7a20 method_vectorcall
[2m[36m(pid=26687)[0m     @     0x55d11f54bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26687)[0m     @     0x55d11f5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26687)[0m     @     0x55d11f5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26687)[0m     @     0x55d11f54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26687)[0m     @     0x55d11f5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26687)[0m     @     0x55d11f5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26687)[0m     @     0x55d11f54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26687)[0m     @     0x55d11f5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26687)[0m     @     0x55d11f5d7643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26687)[0m     @     0x55d11f54c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26687)[0m     @     0x55d11f5d6baf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x7f14b78c4cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26602)[0m     @     0x7f14b4902009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26602)[0m     @     0x7f14b4900c3f at::native::copy_impl()
[2m[36m(pid=26602)[0m     @     0x7f14b4901ed4 at::native::copy_()
[2m[36m(pid=26602)[0m     @     0x7f14b50445cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26719)[0m     @     0x7f8b3e3abcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26719)[0m     @     0x7f8b3b3e9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26719)[0m     @     0x7f8b3b3e7c3f at::native::copy_impl()
[2m[36m(pid=26719)[0m     @     0x7f8b3b3e8ed4 at::native::copy_()
[2m[36m(pid=26719)[0m     @     0x7f8b3bb2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26626)[0m     @     0x7f6fd13cecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26626)[0m     @     0x7f6fce40c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26626)[0m     @     0x7f6fce40ac3f at::native::copy_impl()
[2m[36m(pid=26626)[0m     @     0x7f6fce40bed4 at::native::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7bdc4cc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26724)[0m     @     0x7fb7bdc6fcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26724)[0m     @     0x7fb7bacad009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26724)[0m     @     0x7fb7bacabc3f at::native::copy_impl()
[2m[36m(pid=26724)[0m     @     0x7fb7bacaced4 at::native::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7bb3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26651)[0m     @     0x7fa8f680dcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26651)[0m     @     0x7fa8f384b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26651)[0m     @     0x7fa8f3849c3f at::native::copy_impl()
[2m[36m(pid=26651)[0m     @     0x7fa8f384aed4 at::native::copy_()
[2m[36m(pid=26651)[0m     @     0x7fa8f3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26593)[0m     @     0x7f9f81b88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26593)[0m     @     0x7f9f7ebc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26593)[0m     @     0x7f9f7ebc4c3f at::native::copy_impl()
[2m[36m(pid=26593)[0m     @     0x7f9f7ebc5ed4 at::native::copy_()
[2m[36m(pid=26593)[0m     @     0x7f9f7f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26600)[0m     @     0x7f2e487f6390 (unknown)
[2m[36m(pid=26600)[0m     @     0x7eff4a885fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26600)[0m     @     0x7eff47b7964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26612)[0m     @     0x7f6760d67b53 at::TensorIterator::for_each()
[2m[36m(pid=26612)[0m     @     0x7f6760d67e11 at::TensorIterator::for_each()
[2m[36m(pid=26612)[0m     @     0x7f6763a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26612)[0m     @     0x7f6763aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26644)[0m     @     0x7f4aacc22e11 at::TensorIterator::for_each()
[2m[36m(pid=26644)[0m     @     0x7f4aaf93bc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26644)[0m     @     0x7f4aaf95ecfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26644)[0m     @     0x7f4aac99c009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26644)[0m     @     0x7f4aac99ac3f at::native::copy_impl()
[2m[36m(pid=26646)[0m     @     0x7f9dab446e11 at::TensorIterator::for_each()
[2m[36m(pid=26646)[0m     @     0x7f9dae15fc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26646)[0m     @     0x7f9dae182cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26646)[0m     @     0x7f9dab1c0009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26646)[0m     @     0x7f9dab1bec3f at::native::copy_impl()
[2m[36m(pid=26683)[0m     @     0x7f21563a3977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26683)[0m     @     0x7f21563a3b53 at::TensorIterator::for_each()
[2m[36m(pid=26683)[0m     @     0x7f21563a3e11 at::TensorIterator::for_each()
[2m[36m(pid=26683)[0m     @     0x7f21590bcc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26683)[0m     @     0x7f21590dfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26730)[0m     @     0x7f0a30d67977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26730)[0m     @     0x7f0a30d67b53 at::TensorIterator::for_each()
[2m[36m(pid=26730)[0m     @     0x7f0a30d67e11 at::TensorIterator::for_each()
[2m[36m(pid=26730)[0m     @     0x7f0a33a80c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26730)[0m     @     0x7f0a33aa3cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26676)[0m     @     0x7f8a3b9c3390 (unknown)
[2m[36m(pid=26676)[0m     @     0x7f5b3db55fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26676)[0m     @     0x7f5b3ae4964b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26676)[0m     @     0x7f5b3ae4c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26702)[0m     @     0x7f127351f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26702)[0m     @     0x7f1273627148 at::Tensor::copy_()
[2m[36m(pid=26702)[0m     @     0x7f12798ddbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26702)[0m     @     0x55917ab14fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26702)[0m     @     0x55917aa6fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26702)[0m     @     0x55917aafabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26702)[0m     @     0x55917aafba20 method_vectorcall
[2m[36m(pid=26702)[0m     @     0x55917aa6fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26702)[0m     @     0x55917aafabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26702)[0m     @     0x55917aafb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26702)[0m     @     0x55917aa70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26702)[0m     @     0x55917aafabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26702)[0m     @     0x55917aafb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26702)[0m     @     0x55917aa70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26702)[0m     @     0x55917aafabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26702)[0m     @     0x55917aafb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26702)[0m     @     0x55917aa70689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26702)[0m     @     0x55917aafabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26603)[0m     @     0x7f1ecebb6390 (unknown)
[2m[36m(pid=26603)[0m     @     0x7eefd0c98fb0 _ZN3c1012function_refIFvPPcPKllEE11callback_fnIZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNSA_L11copy_kernelERNS8_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNSA_L11copy_kernelESD_bENKSE_clEvENKSF_clEvEUlNS8_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvSD_OT0_OT1_EUlS2_S4_lE0_EEvlS2_S4_l
[2m[36m(pid=26603)[0m     @     0x7eefcdf8c64b _ZN3c1012function_refIFvPPcPKlllEE11callback_fnIZN2at14TensorIterator8for_eachENS0_IFvS2_S4_lEEElEUlS2_S4_llE_EEvlS2_S4_ll
[2m[36m(pid=26603)[0m     @     0x7eefcdf8f977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26603)[0m     @     0x7eefcdf8fb53 at::TensorIterator::for_each()
[2m[36m(pid=26705)[0m     @     0x5579942a3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26705)[0m     @     0x55799432dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26682)[0m     @     0x7f8e06c16148 at::Tensor::copy_()
[2m[36m(pid=26682)[0m     @     0x7f8e0ceccbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26682)[0m     @     0x556eec859fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26682)[0m     @     0x556eec7b4b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26682)[0m     @     0x556eec83fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26682)[0m     @     0x556eec840a20 method_vectorcall
[2m[36m(pid=26682)[0m     @     0x556eec7b4bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26682)[0m     @     0x556eec83fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26682)[0m     @     0x556eec840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26682)[0m     @     0x556eec7b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26682)[0m     @     0x556eec83fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26682)[0m     @     0x556eec840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26682)[0m     @     0x556eec7b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26682)[0m     @     0x556eec83fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26682)[0m     @     0x556eec840643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26682)[0m     @     0x556eec7b5689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26682)[0m     @     0x556eec83fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26666)[0m     @     0x7f7bcd32b148 at::Tensor::copy_()
[2m[36m(pid=26666)[0m     @     0x7f7bd35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26666)[0m     @     0x55c985db2fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26666)[0m     @     0x55c985d0db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26666)[0m     @     0x55c985d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=26666)[0m     @     0x55c985d99a20 method_vectorcall
[2m[36m(pid=26666)[0m     @     0x55c985d0dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26666)[0m     @     0x55c985d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=26666)[0m     @     0x55c985d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26666)[0m     @     0x55c985d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26666)[0m     @     0x55c985d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=26666)[0m     @     0x55c985d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26666)[0m     @     0x55c985d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26666)[0m     @     0x55c985d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=26666)[0m     @     0x55c985d99643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26666)[0m     @     0x55c985d0e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26666)[0m     @     0x55c985d98baf _PyEval_EvalCodeWithName
[2m[36m(pid=26649)[0m     @     0x7f42c25cd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26649)[0m     @     0x7f42c08ce5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26649)[0m     @     0x7f42c09d6148 at::Tensor::copy_()
[2m[36m(pid=26649)[0m     @     0x7f42c6c8cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26649)[0m     @     0x562dc2adcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26649)[0m     @     0x562dc2a37b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26649)[0m     @     0x562dc2ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26649)[0m     @     0x562dc2ac3a20 method_vectorcall
[2m[36m(pid=26649)[0m     @     0x562dc2a37bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26649)[0m     @     0x562dc2ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26649)[0m     @     0x562dc2ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26649)[0m     @     0x562dc2a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26649)[0m     @     0x562dc2ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26649)[0m     @     0x562dc2ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26649)[0m     @     0x562dc2a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26649)[0m     @     0x562dc2ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26649)[0m     @     0x562dc2ac3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26649)[0m     @     0x562dc2a38689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26649)[0m     @     0x562dc2ac2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26690)[0m     @     0x7fa389e9d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26690)[0m     @     0x7fa38819e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26690)[0m     @     0x7fa3882a6148 at::Tensor::copy_()
[2m[36m(pid=26690)[0m     @     0x7fa38e55cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26690)[0m     @     0x56188d9edfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26690)[0m     @     0x56188d948b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26690)[0m     @     0x56188d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26690)[0m     @     0x56188d9d4a20 method_vectorcall
[2m[36m(pid=26690)[0m     @     0x56188d948bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26690)[0m     @     0x56188d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26690)[0m     @     0x56188d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26690)[0m     @     0x56188d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26690)[0m     @     0x56188d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26690)[0m     @     0x56188d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26690)[0m     @     0x56188d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26690)[0m     @     0x56188d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26690)[0m     @     0x56188d9d4643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26690)[0m     @     0x56188d949689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26690)[0m     @     0x56188d9d3baf _PyEval_EvalCodeWithName
[2m[36m(pid=26721)[0m     @     0x7f1e18126148 at::Tensor::copy_()
[2m[36m(pid=26721)[0m     @     0x7f1e1e3dcbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26721)[0m     @     0x556bebbaffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26721)[0m     @     0x556bebb0ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26721)[0m     @     0x556bebb95baf _PyEval_EvalCodeWithName
[2m[36m(pid=26721)[0m     @     0x556bebb96a20 method_vectorcall
[2m[36m(pid=26721)[0m     @     0x556bebb0abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26721)[0m     @     0x556bebb95baf _PyEval_EvalCodeWithName
[2m[36m(pid=26721)[0m     @     0x556bebb96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26721)[0m     @     0x556bebb0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26721)[0m     @     0x556bebb95baf _PyEval_EvalCodeWithName
[2m[36m(pid=26721)[0m     @     0x556bebb96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26721)[0m     @     0x556bebb0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26721)[0m     @     0x556bebb95baf _PyEval_EvalCodeWithName
[2m[36m(pid=26721)[0m     @     0x556bebb96643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26721)[0m     @     0x556bebb0b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26721)[0m     @     0x556bebb95baf _PyEval_EvalCodeWithName
[2m[36m(pid=26685)[0m     @     0x7f3f71015148 at::Tensor::copy_()
[2m[36m(pid=26685)[0m     @     0x7f3f772cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26685)[0m     @     0x556b7bde4fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26685)[0m     @     0x556b7bd3fb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26685)[0m     @     0x556b7bdcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26685)[0m     @     0x556b7bdcba20 method_vectorcall
[2m[36m(pid=26685)[0m     @     0x556b7bd3fbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26685)[0m     @     0x556b7bdcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26685)[0m     @     0x556b7bdcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26685)[0m     @     0x556b7bd40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26685)[0m     @     0x556b7bdcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26685)[0m     @     0x556b7bdcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26685)[0m     @     0x556b7bd40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26685)[0m     @     0x556b7bdcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26685)[0m     @     0x556b7bdcb643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26685)[0m     @     0x556b7bd40689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26685)[0m     @     0x556b7bdcabaf _PyEval_EvalCodeWithName
[2m[36m(pid=26678)[0m     @     0x55e50d66ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26678)[0m     @     0x55e50d6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26678)[0m     @     0x55e50d6f6a20 method_vectorcall
[2m[36m(pid=26678)[0m     @     0x55e50d66abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26678)[0m     @     0x55e50d6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26678)[0m     @     0x55e50d6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26678)[0m     @     0x55e50d66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26678)[0m     @     0x55e50d6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26678)[0m     @     0x55e50d6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26678)[0m     @     0x55e50d66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26678)[0m     @     0x55e50d6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26678)[0m     @     0x55e50d6f6643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26678)[0m     @     0x55e50d66b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26678)[0m     @     0x55e50d6f5baf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x7f091314e148 at::Tensor::copy_()
[2m[36m(pid=26695)[0m     @     0x7f0919404bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26695)[0m     @     0x5622b6617fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26695)[0m     @     0x5622b6572b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26695)[0m     @     0x5622b65fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x5622b65fea20 method_vectorcall
[2m[36m(pid=26695)[0m     @     0x5622b6572bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26695)[0m     @     0x5622b65fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x5622b65fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26695)[0m     @     0x5622b6573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26695)[0m     @     0x5622b65fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x5622b65fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26695)[0m     @     0x5622b6573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26695)[0m     @     0x5622b65fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26695)[0m     @     0x5622b65fe643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26695)[0m     @     0x5622b6573689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26695)[0m     @     0x5622b65fdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26711)[0m     @     0x7f8a3c113148 at::Tensor::copy_()
[2m[36m(pid=26711)[0m     @     0x7f8a3dd0a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26610)[0m     @     0x7f587184e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26610)[0m     @     0x7f5871956148 at::Tensor::copy_()
[2m[36m(pid=26610)[0m     @     0x7f5877c0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26610)[0m     @     0x558d37d26fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26610)[0m     @     0x558d37c81b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26610)[0m     @     0x558d37d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26610)[0m     @     0x558d37d0da20 method_vectorcall
[2m[36m(pid=26610)[0m     @     0x558d37c81bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26610)[0m     @     0x558d37d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26610)[0m     @     0x558d37d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26610)[0m     @     0x558d37c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26610)[0m     @     0x558d37d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26610)[0m     @     0x558d37d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26610)[0m     @     0x558d37c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26610)[0m     @     0x558d37d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26610)[0m     @     0x558d37d0d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26610)[0m     @     0x558d37c82689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26610)[0m     @     0x558d37d0cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x7f9c300b9ed4 at::native::copy_()
[2m[36m(pid=26647)[0m     @     0x7f9c307fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26647)[0m     @     0x7f9c30904148 at::Tensor::copy_()
[2m[36m(pid=26647)[0m     @     0x7f9c324fb989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26671)[0m     @     0x7eddd9956148 at::Tensor::copy_()
[2m[36m(pid=26671)[0m     @     0x7edddfc0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26671)[0m     @     0x557ea49aefd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26671)[0m     @     0x557ea4909b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26671)[0m     @     0x557ea4994baf _PyEval_EvalCodeWithName
[2m[36m(pid=26671)[0m     @     0x557ea4995a20 method_vectorcall
[2m[36m(pid=26671)[0m     @     0x557ea4909bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26671)[0m     @     0x557ea4994baf _PyEval_EvalCodeWithName
[2m[36m(pid=26671)[0m     @     0x557ea4995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26671)[0m     @     0x557ea490a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26671)[0m     @     0x557ea4994baf _PyEval_EvalCodeWithName
[2m[36m(pid=26671)[0m     @     0x557ea4995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26671)[0m     @     0x557ea490a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26671)[0m     @     0x557ea4994baf _PyEval_EvalCodeWithName
[2m[36m(pid=26671)[0m     @     0x557ea4995643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26671)[0m     @     0x557ea490a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26671)[0m     @     0x557ea4994baf _PyEval_EvalCodeWithName
[2m[36m(pid=26619)[0m     @     0x7f9d6e801148 at::Tensor::copy_()
[2m[36m(pid=26619)[0m     @     0x7f9d703f8989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26619)[0m     @     0x7f9d6e6f95cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26619)[0m     @     0x7f9d6e801148 at::Tensor::copy_()
[2m[36m(pid=26619)[0m     @     0x7f9d74ab7bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26619)[0m     @     0x56275d82bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26619)[0m     @     0x56275d786b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26619)[0m     @     0x56275d811baf _PyEval_EvalCodeWithName
[2m[36m(pid=26619)[0m     @     0x56275d812a20 method_vectorcall
[2m[36m(pid=26619)[0m     @     0x56275d786bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26619)[0m     @     0x56275d811baf _PyEval_EvalCodeWithName
[2m[36m(pid=26619)[0m     @     0x56275d812643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26619)[0m     @     0x56275d787689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26619)[0m     @     0x56275d811baf _PyEval_EvalCodeWithName
[2m[36m(pid=26619)[0m     @     0x56275d812643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26619)[0m     @     0x56275d787689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26619)[0m     @     0x56275d811baf _PyEval_EvalCodeWithName
[2m[36m(pid=26619)[0m     @     0x56275d812643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26619)[0m     @     0x56275d787689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26619)[0m     @     0x56275d811baf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x7f92b947b009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26590)[0m     @     0x7f92b9479c3f at::native::copy_impl()
[2m[36m(pid=26590)[0m     @     0x7f92b947aed4 at::native::copy_()
[2m[36m(pid=26590)[0m     @     0x7f92b9bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26590)[0m     @     0x7f92b9cc5148 at::Tensor::copy_()
[2m[36m(pid=26652)[0m     @     0x5571d8e39baf _PyEval_EvalCodeWithName
[2m[36m(pid=26652)[0m     @     0x5571d8e3aa20 method_vectorcall
[2m[36m(pid=26652)[0m     @     0x5571d8daebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26652)[0m     @     0x5571d8e39baf _PyEval_EvalCodeWithName
[2m[36m(pid=26652)[0m     @     0x5571d8e3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26652)[0m     @     0x5571d8daf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26652)[0m     @     0x5571d8e39baf _PyEval_EvalCodeWithName
[2m[36m(pid=26652)[0m     @     0x5571d8e3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26652)[0m     @     0x5571d8daf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26652)[0m     @     0x5571d8e39baf _PyEval_EvalCodeWithName
[2m[36m(pid=26652)[0m     @     0x5571d8e3a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26652)[0m     @     0x5571d8daf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26652)[0m     @     0x5571d8e39baf _PyEval_EvalCodeWithName
[2m[36m(pid=26601)[0m     @     0x7f122bf8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26601)[0m     @     0x7f122c095148 at::Tensor::copy_()
[2m[36m(pid=26601)[0m     @     0x7f123234bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26601)[0m     @     0x558eb1239fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26601)[0m     @     0x558eb1194b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x558eb121fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26601)[0m     @     0x558eb1220a20 method_vectorcall
[2m[36m(pid=26601)[0m     @     0x558eb1194bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x558eb121fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26601)[0m     @     0x558eb1220643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26601)[0m     @     0x558eb1195689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x558eb121fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26601)[0m     @     0x558eb1220643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26601)[0m     @     0x558eb1195689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x558eb121fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26601)[0m     @     0x558eb1220643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26601)[0m     @     0x558eb1195689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26601)[0m     @     0x558eb121fbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x5613adaccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x5613adacda20 method_vectorcall
[2m[36m(pid=26696)[0m     @     0x5613ada41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26696)[0m     @     0x5613adaccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x5613adacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26696)[0m     @     0x5613ada42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26696)[0m     @     0x5613adaccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x5613adacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26696)[0m     @     0x5613ada42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26696)[0m     @     0x5613adaccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26696)[0m     @     0x5613adacd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26696)[0m     @     0x5613ada42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26696)[0m     @     0x5613adaccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26677)[0m     @     0x7ef8188045cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26677)[0m     @     0x7ef81890c148 at::Tensor::copy_()
[2m[36m(pid=26677)[0m     @     0x7ef81ebc2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26677)[0m     @     0x557160e94fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26677)[0m     @     0x557160defb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x557160e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26677)[0m     @     0x557160e7ba20 method_vectorcall
[2m[36m(pid=26677)[0m     @     0x557160defbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x557160e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26677)[0m     @     0x557160e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26677)[0m     @     0x557160df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x557160e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26677)[0m     @     0x557160e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26677)[0m     @     0x557160df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x557160e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26677)[0m     @     0x557160e7b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26677)[0m     @     0x557160df0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26677)[0m     @     0x557160e7abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26667)[0m     @     0x7f2daa79c148 at::Tensor::copy_()
[2m[36m(pid=26667)[0m     @     0x7f2db0a52bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26667)[0m     @     0x55b3cde48fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26667)[0m     @     0x55b3cdda3b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26667)[0m     @     0x55b3cde2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26667)[0m     @     0x55b3cde2fa20 method_vectorcall
[2m[36m(pid=26667)[0m     @     0x55b3cdda3bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26667)[0m     @     0x55b3cde2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26667)[0m     @     0x55b3cde2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26667)[0m     @     0x55b3cdda4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26667)[0m     @     0x55b3cde2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26667)[0m     @     0x55b3cde2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26667)[0m     @     0x55b3cdda4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26667)[0m     @     0x55b3cde2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26667)[0m     @     0x55b3cde2f643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26667)[0m     @     0x55b3cdda4689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26667)[0m     @     0x55b3cde2ebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26680)[0m     @     0x7f73ea34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26680)[0m     @     0x563a99f32fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26680)[0m     @     0x563a99e8db08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26680)[0m     @     0x563a99f18baf _PyEval_EvalCodeWithName
[2m[36m(pid=26680)[0m     @     0x563a99f19a20 method_vectorcall
[2m[36m(pid=26680)[0m     @     0x563a99e8dbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26680)[0m     @     0x563a99f18baf _PyEval_EvalCodeWithName
[2m[36m(pid=26680)[0m     @     0x563a99f19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26680)[0m     @     0x563a99e8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26680)[0m     @     0x563a99f18baf _PyEval_EvalCodeWithName
[2m[36m(pid=26680)[0m     @     0x563a99f19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26680)[0m     @     0x563a99e8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26680)[0m     @     0x563a99f18baf _PyEval_EvalCodeWithName
[2m[36m(pid=26680)[0m     @     0x563a99f19643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26680)[0m     @     0x563a99e8e689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26680)[0m     @     0x563a99f18baf _PyEval_EvalCodeWithName
[2m[36m(pid=26597)[0m     @     0x7f7c796e8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26597)[0m     @     0x55dbd9be6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26597)[0m     @     0x55dbd9b41b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26597)[0m     @     0x55dbd9bccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26597)[0m     @     0x55dbd9bcda20 method_vectorcall
[2m[36m(pid=26597)[0m     @     0x55dbd9b41bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26597)[0m     @     0x55dbd9bccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26597)[0m     @     0x55dbd9bcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26597)[0m     @     0x55dbd9b42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26597)[0m     @     0x55dbd9bccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26597)[0m     @     0x55dbd9bcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26597)[0m     @     0x55dbd9b42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26597)[0m     @     0x55dbd9bccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26597)[0m     @     0x55dbd9bcd643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26597)[0m     @     0x55dbd9b42689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26597)[0m     @     0x55dbd9bccbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x7efc16bc5ed4 at::native::copy_()
[2m[36m(pid=26625)[0m     @     0x7efc173085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26625)[0m     @     0x7efc17410148 at::Tensor::copy_()
[2m[36m(pid=26664)[0m     @     0x7f807b6caed4 at::native::copy_()
[2m[36m(pid=26664)[0m     @     0x7f807be0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26664)[0m     @     0x7f807bf15148 at::Tensor::copy_()
[2m[36m(pid=26664)[0m     @     0x7f807db0c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26713)[0m     @     0x7eef8fbff148 at::Tensor::copy_()
[2m[36m(pid=26713)[0m     @     0x7eef95eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26713)[0m     @     0x55f340be5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26713)[0m     @     0x55f340b40b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26713)[0m     @     0x55f340bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26713)[0m     @     0x55f340bcca20 method_vectorcall
[2m[36m(pid=26713)[0m     @     0x55f340b40bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26713)[0m     @     0x55f340bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26713)[0m     @     0x55f340bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26713)[0m     @     0x55f340b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26713)[0m     @     0x55f340bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26713)[0m     @     0x55f340bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26713)[0m     @     0x55f340b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26713)[0m     @     0x55f340bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26713)[0m     @     0x55f340bcc643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26713)[0m     @     0x55f340b41689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26713)[0m     @     0x55f340bcbbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26686)[0m     @     0x562136260baf _PyEval_EvalCodeWithName
[2m[36m(pid=26595)[0m     @     0x7f8d88809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26595)[0m     @     0x561031cbbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26595)[0m     @     0x561031c16b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x561031ca1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26595)[0m     @     0x561031ca2a20 method_vectorcall
[2m[36m(pid=26595)[0m     @     0x561031c16bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x561031ca1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26595)[0m     @     0x561031ca2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26595)[0m     @     0x561031c17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x561031ca1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26595)[0m     @     0x561031ca2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26595)[0m     @     0x561031c17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x561031ca1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26595)[0m     @     0x561031ca2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26595)[0m     @     0x561031c17689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26595)[0m     @     0x561031ca1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x7fb3d2d69b53 at::TensorIterator::for_each()
[2m[36m(pid=26608)[0m     @     0x7fb3d2d69e11 at::TensorIterator::for_each()
[2m[36m(pid=26608)[0m     @     0x7fb3d5a82c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26608)[0m     @     0x7fb3d5aa5cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26594)[0m     @     0x7f40c761aed4 at::native::copy_()
[2m[36m(pid=26594)[0m     @     0x7f40c7d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26684)[0m     @     0x7ee0623afb53 at::TensorIterator::for_each()
[2m[36m(pid=26684)[0m     @     0x7ee0623afe11 at::TensorIterator::for_each()
[2m[36m(pid=26684)[0m     @     0x7ee0650c8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26684)[0m     @     0x7ee0650ebcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26622)[0m     @     0x7ecdd5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26622)[0m     @     0x7ecdd5e7d148 at::Tensor::copy_()
[2m[36m(pid=26622)[0m     @     0x7ecdd7a74989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26621)[0m     @     0x7ed8ef303ed4 at::native::copy_()
[2m[36m(pid=26621)[0m     @     0x7ed8efa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26621)[0m     @     0x7ed8efb4e148 at::Tensor::copy_()
[2m[36m(pid=26654)[0m     @     0x7f8a7226ab53 at::TensorIterator::for_each()
[2m[36m(pid=26654)[0m     @     0x7f8a7226ae11 at::TensorIterator::for_each()
[2m[36m(pid=26654)[0m     @     0x7f8a74f83c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26654)[0m     @     0x7f8a74fa6cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26708)[0m     @     0x7f1c7b8f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26708)[0m     @     0x7f1c7b8f4c3f at::native::copy_impl()
[2m[36m(pid=26708)[0m     @     0x7f1c7b8f5ed4 at::native::copy_()
[2m[36m(pid=26708)[0m     @     0x7f1c7c0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26681)[0m     @     0x7ed0568905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26681)[0m     @     0x7ed056998148 at::Tensor::copy_()
[2m[36m(pid=26681)[0m     @     0x7ed05858f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26681)[0m     @     0x7ed0568905cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26596)[0m     @     0x7fa6f326fe11 at::TensorIterator::for_each()
[2m[36m(pid=26596)[0m     @     0x7fa6f5f88c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26596)[0m     @     0x7fa6f5fabcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26596)[0m     @     0x7fa6f2fe9009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26596)[0m     @     0x7fa6f2fe7c3f at::native::copy_impl()
[2m[36m(pid=26598)[0m     @     0x7f3ba29c5148 at::Tensor::copy_()
[2m[36m(pid=26598)[0m     @     0x7f3ba45bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26598)[0m     @     0x7f3ba28bd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26598)[0m     @     0x7f3ba29c5148 at::Tensor::copy_()
[2m[36m(pid=26598)[0m     @     0x7f3ba8c7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26598)[0m     @     0x55a68c15afd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26598)[0m     @     0x55a68c0b5b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26598)[0m     @     0x55a68c140baf _PyEval_EvalCodeWithName
[2m[36m(pid=26598)[0m     @     0x55a68c141a20 method_vectorcall
[2m[36m(pid=26598)[0m     @     0x55a68c0b5bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26598)[0m     @     0x55a68c140baf _PyEval_EvalCodeWithName
[2m[36m(pid=26598)[0m     @     0x55a68c141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26598)[0m     @     0x55a68c0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26598)[0m     @     0x55a68c140baf _PyEval_EvalCodeWithName
[2m[36m(pid=26598)[0m     @     0x55a68c141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26598)[0m     @     0x55a68c0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26598)[0m     @     0x55a68c140baf _PyEval_EvalCodeWithName
[2m[36m(pid=26598)[0m     @     0x55a68c141643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26598)[0m     @     0x55a68c0b6689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26598)[0m     @     0x55a68c140baf _PyEval_EvalCodeWithName
[2m[36m(pid=26611)[0m     @     0x7fbfae922148 at::Tensor::copy_()
[2m[36m(pid=26611)[0m     @     0x7fbfb0519989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26611)[0m     @     0x7fbfae81a5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26611)[0m     @     0x7fbfae922148 at::Tensor::copy_()
[2m[36m(pid=26614)[0m     @     0x7fc7dc236ed4 at::native::copy_()
[2m[36m(pid=26614)[0m     @     0x7fc7dc9795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26614)[0m     @     0x7fc7dca81148 at::Tensor::copy_()
[2m[36m(pid=26614)[0m     @     0x7fc7de678989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26728)[0m     @     0x7f7b17d93977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26694)[0m     @     0x7f6914ce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26694)[0m     @     0x7f6914de9148 at::Tensor::copy_()
[2m[36m(pid=26694)[0m     @     0x7f69169e0989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26694)[0m     @     0x7f6914ce15cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26665)[0m     @     0x7f87468d9ed4 at::native::copy_()
[2m[36m(pid=26665)[0m     @     0x7f874701c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26665)[0m     @     0x7f8747124148 at::Tensor::copy_()
[2m[36m(pid=26665)[0m     @     0x7f8748d1b989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26592)[0m     @     0x7edf1b013ed4 at::native::copy_()
[2m[36m(pid=26592)[0m     @     0x7edf1b7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26592)[0m     @     0x7edf1b85e148 at::Tensor::copy_()
[2m[36m(pid=26592)[0m     @     0x7edf1d455989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26607)[0m     @     0x7eea93e0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26607)[0m     @     0x7eea93f15148 at::Tensor::copy_()
[2m[36m(pid=26607)[0m     @     0x7eea9a1cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26607)[0m     @     0x560deb7cbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26607)[0m     @     0x560deb726b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26607)[0m     @     0x560deb7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26607)[0m     @     0x560deb7b2a20 method_vectorcall
[2m[36m(pid=26607)[0m     @     0x560deb726bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26607)[0m     @     0x560deb7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26607)[0m     @     0x560deb7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26607)[0m     @     0x560deb727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26607)[0m     @     0x560deb7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26607)[0m     @     0x560deb7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26607)[0m     @     0x560deb727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26607)[0m     @     0x560deb7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26607)[0m     @     0x560deb7b2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26607)[0m     @     0x560deb727689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26607)[0m     @     0x560deb7b1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x7f33bd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26606)[0m     @     0x7f33bd32b148 at::Tensor::copy_()
[2m[36m(pid=26606)[0m     @     0x7f33bef22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26606)[0m     @     0x7f33bd2235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26606)[0m     @     0x7f33bd32b148 at::Tensor::copy_()
[2m[36m(pid=26663)[0m     @     0x7fab3a40bed4 at::native::copy_()
[2m[36m(pid=26663)[0m     @     0x7fab3ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26663)[0m     @     0x7fab3ac56148 at::Tensor::copy_()
[2m[36m(pid=26663)[0m     @     0x7fab3c84d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26613)[0m     @     0x7edcee4fe148 at::Tensor::copy_()
[2m[36m(pid=26613)[0m     @     0x7edcf00f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26613)[0m     @     0x7edcee3f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26613)[0m     @     0x7edcee4fe148 at::Tensor::copy_()
[2m[36m(pid=26613)[0m     @     0x7edcf47b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26605)[0m     @     0x7f0fdfaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26605)[0m     @     0x7f0fdfbff148 at::Tensor::copy_()
[2m[36m(pid=26605)[0m     @     0x7f0fe17f6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26726)[0m     @     0x7eda97863989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26726)[0m     @     0x7eda95b645cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26609)[0m     @     0x7f2717e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26609)[0m     @     0x7f27161345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26609)[0m     @     0x7f271623c148 at::Tensor::copy_()
[2m[36m(pid=26609)[0m     @     0x7f271c4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26609)[0m     @     0x55b96dcc3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26609)[0m     @     0x55b96dc1eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26609)[0m     @     0x55b96dca9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26609)[0m     @     0x55b96dcaaa20 method_vectorcall
[2m[36m(pid=26609)[0m     @     0x55b96dc1ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26609)[0m     @     0x55b96dca9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26609)[0m     @     0x55b96dcaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26609)[0m     @     0x55b96dc1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26609)[0m     @     0x55b96dca9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26609)[0m     @     0x55b96dcaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26691)[0m     @     0x7f4f90fa8148 at::Tensor::copy_()
[2m[36m(pid=26691)[0m     @     0x7f4f92b9f989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26691)[0m     @     0x7f4f90ea05cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26616)[0m     @     0x7f80b1bbf148 at::Tensor::copy_()
[2m[36m(pid=26616)[0m     @     0x7f80b37b6989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26616)[0m     @     0x7f80b1ab75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26656)[0m     @     0x7fb4e623c148 at::Tensor::copy_()
[2m[36m(pid=26656)[0m     @     0x7fb4e7e33989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26656)[0m     @     0x7fb4e61345cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26656)[0m     @     0x7fb4e623c148 at::Tensor::copy_()
[2m[36m(pid=26624)[0m     @     0x7f38d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26624)[0m     @     0x7f38d0efe148 at::Tensor::copy_()
[2m[36m(pid=26624)[0m     @     0x7f38d2af5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26591)[0m     @     0x7f4b680f5989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26591)[0m     @     0x7f4b663f65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26591)[0m     @     0x7f4b664fe148 at::Tensor::copy_()
[2m[36m(pid=26591)[0m     @     0x7f4b6c7b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26591)[0m     @     0x556f16e47fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26591)[0m     @     0x556f16da2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x7f14b514c148 at::Tensor::copy_()
[2m[36m(pid=26602)[0m     @     0x7f14b6d43989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26602)[0m     @     0x7f14b50445cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26719)[0m     @     0x7f8b3bc33148 at::Tensor::copy_()
[2m[36m(pid=26719)[0m     @     0x7f8b3d82a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26719)[0m     @     0x7f8b3bb2b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26626)[0m     @     0x7f6fceb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26626)[0m     @     0x7f6fcec56148 at::Tensor::copy_()
[2m[36m(pid=26626)[0m     @     0x7f6fd084d989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7bb4f7148 at::Tensor::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7bd0ee989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7bb3ef5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26651)[0m     @     0x7fa8f4095148 at::Tensor::copy_()
[2m[36m(pid=26651)[0m     @     0x7fa8f5c8c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26651)[0m     @     0x7fa8f3f8d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26593)[0m     @     0x7f9f7f410148 at::Tensor::copy_()
[2m[36m(pid=26593)[0m     @     0x7f9f81007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26593)[0m     @     0x7f9f7f3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26600)[0m     @     0x7eff47b7c977 at::TensorIterator::serial_for_each()
[2m[36m(pid=26612)[0m     @     0x7f6760ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26612)[0m     @     0x7f6760adfc3f at::native::copy_impl()
[2m[36m(pid=26612)[0m     @     0x7f6760ae0ed4 at::native::copy_()
[2m[36m(pid=26644)[0m     @     0x7f4aac99bed4 at::native::copy_()
[2m[36m(pid=26644)[0m     @     0x7f4aad0de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26646)[0m     @     0x7f9dab1bfed4 at::native::copy_()
[2m[36m(pid=26646)[0m     @     0x7f9dab9025cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26646)[0m     @     0x7f9daba0a148 at::Tensor::copy_()
[2m[36m(pid=26683)[0m     @     0x7f215611d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26683)[0m     @     0x7f215611bc3f at::native::copy_impl()
[2m[36m(pid=26683)[0m     @     0x7f215611ced4 at::native::copy_()
[2m[36m(pid=26730)[0m     @     0x7f0a30ae1009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26730)[0m     @     0x7f0a30adfc3f at::native::copy_impl()
[2m[36m(pid=26730)[0m     @     0x7f0a30ae0ed4 at::native::copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b3ae4cb53 at::TensorIterator::for_each()
[2m[36m(pid=26676)[0m     @     0x7f5b3ae4ce11 at::TensorIterator::for_each()
[2m[36m(pid=26676)[0m     @     0x7f5b3db65c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26603)[0m     @     0x7eefcdf8fe11 at::TensorIterator::for_each()
[2m[36m(pid=26603)[0m     @     0x7eefd0ca8c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26603)[0m     @     0x7eefd0ccbcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26603)[0m     @     0x7eefcdd09009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26711)[0m     @     0x7f8a3c00b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26711)[0m     @     0x7f8a3c113148 at::Tensor::copy_()
[2m[36m(pid=26711)[0m     @     0x7f8a423c9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26711)[0m     @     0x55922fe56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26711)[0m     @     0x55922fdb1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26711)[0m     @     0x55922fe3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26711)[0m     @     0x55922fe3da20 method_vectorcall
[2m[36m(pid=26711)[0m     @     0x55922fdb1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26711)[0m     @     0x55922fe3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26711)[0m     @     0x55922fe3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26711)[0m     @     0x55922fdb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26711)[0m     @     0x55922fe3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26711)[0m     @     0x55922fe3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26711)[0m     @     0x55922fdb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26711)[0m     @     0x55922fe3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26711)[0m     @     0x55922fe3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26711)[0m     @     0x55922fdb2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26711)[0m     @     0x55922fe3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x7f9c307fc5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26647)[0m     @     0x7f9c30904148 at::Tensor::copy_()
[2m[36m(pid=26647)[0m     @     0x7f9c36bbabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26647)[0m     @     0x5576d9fa7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26647)[0m     @     0x5576d9f02b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26647)[0m     @     0x5576d9f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x5576d9f8ea20 method_vectorcall
[2m[36m(pid=26647)[0m     @     0x5576d9f02bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26647)[0m     @     0x5576d9f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x5576d9f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26647)[0m     @     0x5576d9f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26647)[0m     @     0x5576d9f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x5576d9f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26647)[0m     @     0x5576d9f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26647)[0m     @     0x5576d9f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26647)[0m     @     0x5576d9f8e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26647)[0m     @     0x5576d9f03689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26647)[0m     @     0x5576d9f8dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x7f92bb8bc989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26590)[0m     @     0x7f92b9bbd5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26590)[0m     @     0x7f92b9cc5148 at::Tensor::copy_()
[2m[36m(pid=26590)[0m     @     0x7f92bff7bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26590)[0m     @     0x557db89dafd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26590)[0m     @     0x557db8935b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26590)[0m     @     0x557db89c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x557db89c1a20 method_vectorcall
[2m[36m(pid=26590)[0m     @     0x557db8935bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26590)[0m     @     0x557db89c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x557db89c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26590)[0m     @     0x557db8936689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26590)[0m     @     0x557db89c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x557db89c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26590)[0m     @     0x557db8936689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26590)[0m     @     0x557db89c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26590)[0m     @     0x557db89c1643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26590)[0m     @     0x557db8936689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26590)[0m     @     0x557db89c0baf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x7efc19007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26625)[0m     @     0x7efc173085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26625)[0m     @     0x7efc17410148 at::Tensor::copy_()
[2m[36m(pid=26625)[0m     @     0x7efc1d6c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26625)[0m     @     0x5602fc3bcfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26625)[0m     @     0x5602fc317b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26625)[0m     @     0x5602fc3a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x5602fc3a3a20 method_vectorcall
[2m[36m(pid=26625)[0m     @     0x5602fc317bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26625)[0m     @     0x5602fc3a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x5602fc3a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26625)[0m     @     0x5602fc318689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26625)[0m     @     0x5602fc3a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x5602fc3a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26625)[0m     @     0x5602fc318689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26625)[0m     @     0x5602fc3a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26625)[0m     @     0x5602fc3a3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26625)[0m     @     0x5602fc318689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26625)[0m     @     0x5602fc3a2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26664)[0m     @     0x7f807be0d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26664)[0m     @     0x7f807bf15148 at::Tensor::copy_()
[2m[36m(pid=26664)[0m     @     0x7f80821cbbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26664)[0m     @     0x5639145f1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26664)[0m     @     0x56391454cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26664)[0m     @     0x5639145d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26664)[0m     @     0x5639145d8a20 method_vectorcall
[2m[36m(pid=26664)[0m     @     0x56391454cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26664)[0m     @     0x5639145d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26664)[0m     @     0x5639145d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26664)[0m     @     0x56391454d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26664)[0m     @     0x5639145d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26664)[0m     @     0x5639145d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26664)[0m     @     0x56391454d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26664)[0m     @     0x5639145d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26664)[0m     @     0x5639145d8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26664)[0m     @     0x56391454d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26664)[0m     @     0x5639145d7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x7fb3d2ae3009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26608)[0m     @     0x7fb3d2ae1c3f at::native::copy_impl()
[2m[36m(pid=26608)[0m     @     0x7fb3d2ae2ed4 at::native::copy_()
[2m[36m(pid=26594)[0m     @     0x7f40c7e65148 at::Tensor::copy_()
[2m[36m(pid=26594)[0m     @     0x7f40c9a5c989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26594)[0m     @     0x7f40c7d5d5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26684)[0m     @     0x7ee062129009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26684)[0m     @     0x7ee062127c3f at::native::copy_impl()
[2m[36m(pid=26684)[0m     @     0x7ee062128ed4 at::native::copy_()
[2m[36m(pid=26684)[0m     @     0x7ee06286b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26622)[0m     @     0x7ecdd5d755cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26622)[0m     @     0x7ecdd5e7d148 at::Tensor::copy_()
[2m[36m(pid=26622)[0m     @     0x7ecddc133bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26622)[0m     @     0x5650e33fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26622)[0m     @     0x5650e3356b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26622)[0m     @     0x5650e33e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26622)[0m     @     0x5650e33e2a20 method_vectorcall
[2m[36m(pid=26622)[0m     @     0x5650e3356bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26622)[0m     @     0x5650e33e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26622)[0m     @     0x5650e33e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26622)[0m     @     0x5650e3357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26622)[0m     @     0x5650e33e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26622)[0m     @     0x5650e33e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26622)[0m     @     0x5650e3357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26622)[0m     @     0x5650e33e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26622)[0m     @     0x5650e33e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26622)[0m     @     0x5650e3357689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26622)[0m     @     0x5650e33e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26621)[0m     @     0x7ed8f1745989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26621)[0m     @     0x7ed8efa465cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26621)[0m     @     0x7ed8efb4e148 at::Tensor::copy_()
[2m[36m(pid=26621)[0m     @     0x7ed8f5e04bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26621)[0m     @     0x5570c55dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26621)[0m     @     0x5570c5536b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26621)[0m     @     0x5570c55c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26621)[0m     @     0x5570c55c2a20 method_vectorcall
[2m[36m(pid=26654)[0m     @     0x7f8a71fe4009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26654)[0m     @     0x7f8a71fe2c3f at::native::copy_impl()
[2m[36m(pid=26654)[0m     @     0x7f8a71fe3ed4 at::native::copy_()
[2m[36m(pid=26708)[0m     @     0x7f1c7c140148 at::Tensor::copy_()
[2m[36m(pid=26708)[0m     @     0x7f1c7dd37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26708)[0m     @     0x7f1c7c0385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26681)[0m     @     0x7ed056998148 at::Tensor::copy_()
[2m[36m(pid=26681)[0m     @     0x7ed05cc4ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26681)[0m     @     0x55acdf1dbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26681)[0m     @     0x55acdf136b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26681)[0m     @     0x55acdf1c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26681)[0m     @     0x55acdf1c2a20 method_vectorcall
[2m[36m(pid=26681)[0m     @     0x55acdf136bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26681)[0m     @     0x55acdf1c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26681)[0m     @     0x55acdf1c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26681)[0m     @     0x55acdf137689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26681)[0m     @     0x55acdf1c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26681)[0m     @     0x55acdf1c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26681)[0m     @     0x55acdf137689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26681)[0m     @     0x55acdf1c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26681)[0m     @     0x55acdf1c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26681)[0m     @     0x55acdf137689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26681)[0m     @     0x55acdf1c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x7fa6f2fe8ed4 at::native::copy_()
[2m[36m(pid=26596)[0m     @     0x7fa6f372b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26611)[0m     @     0x7fbfb4bd8bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26611)[0m     @     0x556950383fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26611)[0m     @     0x5569502deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26611)[0m     @     0x556950369baf _PyEval_EvalCodeWithName
[2m[36m(pid=26611)[0m     @     0x55695036aa20 method_vectorcall
[2m[36m(pid=26611)[0m     @     0x5569502debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26611)[0m     @     0x556950369baf _PyEval_EvalCodeWithName
[2m[36m(pid=26611)[0m     @     0x55695036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26611)[0m     @     0x5569502df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26611)[0m     @     0x556950369baf _PyEval_EvalCodeWithName
[2m[36m(pid=26611)[0m     @     0x55695036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26611)[0m     @     0x5569502df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26611)[0m     @     0x556950369baf _PyEval_EvalCodeWithName
[2m[36m(pid=26611)[0m     @     0x55695036a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26611)[0m     @     0x5569502df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26611)[0m     @     0x556950369baf _PyEval_EvalCodeWithName
[2m[36m(pid=26614)[0m     @     0x7fc7dc9795cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26614)[0m     @     0x7fc7dca81148 at::Tensor::copy_()
[2m[36m(pid=26614)[0m     @     0x7fc7e2d37bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26614)[0m     @     0x564da11b5fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26614)[0m     @     0x564da1110b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26614)[0m     @     0x564da119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26614)[0m     @     0x564da119ca20 method_vectorcall
[2m[36m(pid=26614)[0m     @     0x564da1110bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26614)[0m     @     0x564da119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26614)[0m     @     0x564da119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26728)[0m     @     0x7f7b17d93b53 at::TensorIterator::for_each()
[2m[36m(pid=26694)[0m     @     0x7f6914de9148 at::Tensor::copy_()
[2m[36m(pid=26694)[0m     @     0x7f691b09fbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26694)[0m     @     0x55db1990bfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26694)[0m     @     0x55db19866b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26694)[0m     @     0x55db198f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26694)[0m     @     0x55db198f2a20 method_vectorcall
[2m[36m(pid=26694)[0m     @     0x55db19866bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26694)[0m     @     0x55db198f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26694)[0m     @     0x55db198f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26694)[0m     @     0x55db19867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26694)[0m     @     0x55db198f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26694)[0m     @     0x55db198f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26694)[0m     @     0x55db19867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26694)[0m     @     0x55db198f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26694)[0m     @     0x55db198f2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26694)[0m     @     0x55db19867689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26694)[0m     @     0x55db198f1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26665)[0m     @     0x7f874701c5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26665)[0m     @     0x7f8747124148 at::Tensor::copy_()
[2m[36m(pid=26592)[0m     @     0x7edf1b7565cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26592)[0m     @     0x7edf1b85e148 at::Tensor::copy_()
[2m[36m(pid=26592)[0m     @     0x7edf21b14bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26592)[0m     @     0x562153e82fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26592)[0m     @     0x562153dddb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26592)[0m     @     0x562153e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=26592)[0m     @     0x562153e69a20 method_vectorcall
[2m[36m(pid=26592)[0m     @     0x562153dddbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26592)[0m     @     0x562153e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=26592)[0m     @     0x562153e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26592)[0m     @     0x562153dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26592)[0m     @     0x562153e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=26592)[0m     @     0x562153e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26592)[0m     @     0x562153dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26592)[0m     @     0x562153e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=26592)[0m     @     0x562153e69643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26592)[0m     @     0x562153dde689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26592)[0m     @     0x562153e68baf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x7f33c35e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26606)[0m     @     0x56448e1c6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26606)[0m     @     0x56448e121b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26606)[0m     @     0x56448e1acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x56448e1ada20 method_vectorcall
[2m[36m(pid=26606)[0m     @     0x56448e121bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26606)[0m     @     0x56448e1acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x56448e1ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26606)[0m     @     0x56448e122689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26606)[0m     @     0x56448e1acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x56448e1ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26606)[0m     @     0x56448e122689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26606)[0m     @     0x56448e1acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26606)[0m     @     0x56448e1ad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26606)[0m     @     0x56448e122689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26606)[0m     @     0x56448e1acbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26663)[0m     @     0x7fab3ab4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26663)[0m     @     0x7fab3ac56148 at::Tensor::copy_()
[2m[36m(pid=26663)[0m     @     0x7fab40f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26663)[0m     @     0x55be59e01fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26663)[0m     @     0x55be59d5cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26663)[0m     @     0x55be59de7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26663)[0m     @     0x55be59de8a20 method_vectorcall
[2m[36m(pid=26663)[0m     @     0x55be59d5cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26663)[0m     @     0x55be59de7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26663)[0m     @     0x55be59de8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26663)[0m     @     0x55be59d5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26663)[0m     @     0x55be59de7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26663)[0m     @     0x55be59de8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26663)[0m     @     0x55be59d5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26663)[0m     @     0x55be59de7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26663)[0m     @     0x55be59de8643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26663)[0m     @     0x55be59d5d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26663)[0m     @     0x55be59de7baf _PyEval_EvalCodeWithName
[2m[36m(pid=26613)[0m     @     0x556f55094fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26613)[0m     @     0x556f54fefb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26613)[0m     @     0x556f5507abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26613)[0m     @     0x556f5507ba20 method_vectorcall
[2m[36m(pid=26613)[0m     @     0x556f54fefbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26613)[0m     @     0x556f5507abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26613)[0m     @     0x556f5507b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26613)[0m     @     0x556f54ff0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26613)[0m     @     0x556f5507abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26613)[0m     @     0x556f5507b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26613)[0m     @     0x556f54ff0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26613)[0m     @     0x556f5507abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26613)[0m     @     0x556f5507b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26613)[0m     @     0x556f54ff0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26613)[0m     @     0x556f5507abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26605)[0m     @     0x7f0fdfaf75cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26605)[0m     @     0x7f0fdfbff148 at::Tensor::copy_()
[2m[36m(pid=26605)[0m     @     0x7f0fe5eb5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26605)[0m     @     0x556fda3e8fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26605)[0m     @     0x556fda343b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26605)[0m     @     0x556fda3cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26605)[0m     @     0x556fda3cfa20 method_vectorcall
[2m[36m(pid=26605)[0m     @     0x556fda343bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26605)[0m     @     0x556fda3cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26605)[0m     @     0x556fda3cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26605)[0m     @     0x556fda344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26605)[0m     @     0x556fda3cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26605)[0m     @     0x556fda3cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26605)[0m     @     0x556fda344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26605)[0m     @     0x556fda3cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26605)[0m     @     0x556fda3cf643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26605)[0m     @     0x556fda344689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26605)[0m     @     0x556fda3cebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x7eda95c6c148 at::Tensor::copy_()
[2m[36m(pid=26726)[0m     @     0x7eda9bf22bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26609)[0m     @     0x55b96dc1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26609)[0m     @     0x55b96dca9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26609)[0m     @     0x55b96dcaa643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26609)[0m     @     0x55b96dc1f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26609)[0m     @     0x55b96dca9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26691)[0m     @     0x7f4f90fa8148 at::Tensor::copy_()
[2m[36m(pid=26691)[0m     @     0x7f4f9725ebd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26691)[0m     @     0x55ba0f8e7fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26691)[0m     @     0x55ba0f842b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26691)[0m     @     0x55ba0f8cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26691)[0m     @     0x55ba0f8cea20 method_vectorcall
[2m[36m(pid=26691)[0m     @     0x55ba0f842bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26691)[0m     @     0x55ba0f8cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26691)[0m     @     0x55ba0f8ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26691)[0m     @     0x55ba0f843689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26691)[0m     @     0x55ba0f8cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26691)[0m     @     0x55ba0f8ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26691)[0m     @     0x55ba0f843689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26691)[0m     @     0x55ba0f8cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26691)[0m     @     0x55ba0f8ce643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26691)[0m     @     0x55ba0f843689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26691)[0m     @     0x55ba0f8cdbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26616)[0m     @     0x7f80b1bbf148 at::Tensor::copy_()
[2m[36m(pid=26616)[0m     @     0x7f80b7e75bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26616)[0m     @     0x55c25ea84fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26616)[0m     @     0x55c25e9dfb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26616)[0m     @     0x55c25ea6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26616)[0m     @     0x55c25ea6ba20 method_vectorcall
[2m[36m(pid=26616)[0m     @     0x55c25e9dfbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26616)[0m     @     0x55c25ea6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26616)[0m     @     0x55c25ea6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26616)[0m     @     0x55c25e9e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26616)[0m     @     0x55c25ea6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26616)[0m     @     0x55c25ea6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26616)[0m     @     0x55c25e9e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26616)[0m     @     0x55c25ea6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26616)[0m     @     0x55c25ea6b643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26616)[0m     @     0x55c25e9e0689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26616)[0m     @     0x55c25ea6abaf _PyEval_EvalCodeWithName
[2m[36m(pid=26656)[0m     @     0x7fb4ec4f2bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26656)[0m     @     0x55ef17e3ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26656)[0m     @     0x55ef17d9ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26656)[0m     @     0x55ef17e25baf _PyEval_EvalCodeWithName
[2m[36m(pid=26656)[0m     @     0x55ef17e26a20 method_vectorcall
[2m[36m(pid=26656)[0m     @     0x55ef17d9abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26656)[0m     @     0x55ef17e25baf _PyEval_EvalCodeWithName
[2m[36m(pid=26656)[0m     @     0x55ef17e26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26656)[0m     @     0x55ef17d9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26656)[0m     @     0x55ef17e25baf _PyEval_EvalCodeWithName
[2m[36m(pid=26656)[0m     @     0x55ef17e26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26656)[0m     @     0x55ef17d9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26656)[0m     @     0x55ef17e25baf _PyEval_EvalCodeWithName
[2m[36m(pid=26656)[0m     @     0x55ef17e26643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26656)[0m     @     0x55ef17d9b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26656)[0m     @     0x55ef17e25baf _PyEval_EvalCodeWithName
[2m[36m(pid=26624)[0m     @     0x7f38d0df65cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26624)[0m     @     0x7f38d0efe148 at::Tensor::copy_()
[2m[36m(pid=26624)[0m     @     0x7f38d71b4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26624)[0m     @     0x55def7a50fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26624)[0m     @     0x55def79abb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26624)[0m     @     0x55def7a36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26624)[0m     @     0x55def7a37a20 method_vectorcall
[2m[36m(pid=26624)[0m     @     0x55def79abbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26624)[0m     @     0x55def7a36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26624)[0m     @     0x55def7a37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26624)[0m     @     0x55def79ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26624)[0m     @     0x55def7a36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26624)[0m     @     0x55def7a37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26624)[0m     @     0x55def79ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26624)[0m     @     0x55def7a36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26624)[0m     @     0x55def7a37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26624)[0m     @     0x55def79ac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26624)[0m     @     0x55def7a36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26591)[0m     @     0x556f16e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26591)[0m     @     0x556f16e2ea20 method_vectorcall
[2m[36m(pid=26591)[0m     @     0x556f16da2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26591)[0m     @     0x556f16e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26591)[0m     @     0x556f16e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26591)[0m     @     0x556f16da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26591)[0m     @     0x556f16e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26591)[0m     @     0x556f16e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26591)[0m     @     0x556f16da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26591)[0m     @     0x556f16e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26591)[0m     @     0x556f16e2e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26591)[0m     @     0x556f16da3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26591)[0m     @     0x556f16e2dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x7f14b514c148 at::Tensor::copy_()
[2m[36m(pid=26602)[0m     @     0x7f14e04f5bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26602)[0m     @     0x55577220efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26602)[0m     @     0x555772169b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x5557721f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x5557721f5a20 method_vectorcall
[2m[36m(pid=26602)[0m     @     0x555772169bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x5557721f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x5557721f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26602)[0m     @     0x55577216a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x5557721f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x5557721f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26602)[0m     @     0x55577216a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x5557721f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26602)[0m     @     0x5557721f5643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26602)[0m     @     0x55577216a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26602)[0m     @     0x5557721f4baf _PyEval_EvalCodeWithName
[2m[36m(pid=26719)[0m     @     0x7f8b3bc33148 at::Tensor::copy_()
[2m[36m(pid=26719)[0m     @     0x7f8b41ee9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26719)[0m     @     0x55faf9d08fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26719)[0m     @     0x55faf9c63b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26719)[0m     @     0x55faf9ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26719)[0m     @     0x55faf9cefa20 method_vectorcall
[2m[36m(pid=26719)[0m     @     0x55faf9c63bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26719)[0m     @     0x55faf9ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26719)[0m     @     0x55faf9cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26719)[0m     @     0x55faf9c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26719)[0m     @     0x55faf9ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26719)[0m     @     0x55faf9cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26719)[0m     @     0x55faf9c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26719)[0m     @     0x55faf9ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26719)[0m     @     0x55faf9cef643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26719)[0m     @     0x55faf9c64689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26719)[0m     @     0x55faf9ceebaf _PyEval_EvalCodeWithName
[2m[36m(pid=26626)[0m     @     0x7f6fceb4e5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26626)[0m     @     0x7f6fcec56148 at::Tensor::copy_()
[2m[36m(pid=26626)[0m     @     0x7f6fd4f0cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26626)[0m     @     0x55a6a2bf3fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26626)[0m     @     0x55a6a2b4eb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26626)[0m     @     0x55a6a2bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26626)[0m     @     0x55a6a2bdaa20 method_vectorcall
[2m[36m(pid=26626)[0m     @     0x55a6a2b4ebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26626)[0m     @     0x55a6a2bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26626)[0m     @     0x55a6a2bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26626)[0m     @     0x55a6a2b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26626)[0m     @     0x55a6a2bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26626)[0m     @     0x55a6a2bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26626)[0m     @     0x55a6a2b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26626)[0m     @     0x55a6a2bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26626)[0m     @     0x55a6a2bda643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26626)[0m     @     0x55a6a2b4f689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26626)[0m     @     0x55a6a2bd9baf _PyEval_EvalCodeWithName
[2m[36m(pid=26724)[0m     @     0x7fb7bb4f7148 at::Tensor::copy_()
[2m[36m(pid=26724)[0m     @     0x7fb7c17adbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26724)[0m     @     0x55cf1430cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26724)[0m     @     0x55cf14267b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26724)[0m     @     0x55cf142f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26724)[0m     @     0x55cf142f3a20 method_vectorcall
[2m[36m(pid=26724)[0m     @     0x55cf14267bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26724)[0m     @     0x55cf142f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26724)[0m     @     0x55cf142f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26724)[0m     @     0x55cf14268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26724)[0m     @     0x55cf142f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26724)[0m     @     0x55cf142f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26724)[0m     @     0x55cf14268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26724)[0m     @     0x55cf142f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26724)[0m     @     0x55cf142f3643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26724)[0m     @     0x55cf14268689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26724)[0m     @     0x55cf142f2baf _PyEval_EvalCodeWithName
[2m[36m(pid=26651)[0m     @     0x7fa8f4095148 at::Tensor::copy_()
[2m[36m(pid=26651)[0m     @     0x7fa8fa34bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26651)[0m     @     0x55d205520fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26651)[0m     @     0x55d20547bb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26651)[0m     @     0x55d205506baf _PyEval_EvalCodeWithName
[2m[36m(pid=26651)[0m     @     0x55d205507a20 method_vectorcall
[2m[36m(pid=26651)[0m     @     0x55d20547bbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26651)[0m     @     0x55d205506baf _PyEval_EvalCodeWithName
[2m[36m(pid=26651)[0m     @     0x55d205507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26651)[0m     @     0x55d20547c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26651)[0m     @     0x55d205506baf _PyEval_EvalCodeWithName
[2m[36m(pid=26651)[0m     @     0x55d205507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26651)[0m     @     0x55d20547c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26651)[0m     @     0x55d205506baf _PyEval_EvalCodeWithName
[2m[36m(pid=26651)[0m     @     0x55d205507643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26651)[0m     @     0x55d20547c689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26651)[0m     @     0x55d205506baf _PyEval_EvalCodeWithName
[2m[36m(pid=26593)[0m     @     0x7f9f7f410148 at::Tensor::copy_()
[2m[36m(pid=26593)[0m     @     0x7f9f856c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26593)[0m     @     0x55afe6a77fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26593)[0m     @     0x55afe69d2b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26593)[0m     @     0x55afe6a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26593)[0m     @     0x55afe6a5ea20 method_vectorcall
[2m[36m(pid=26593)[0m     @     0x55afe69d2bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26593)[0m     @     0x55afe6a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26593)[0m     @     0x55afe6a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26593)[0m     @     0x55afe69d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26593)[0m     @     0x55afe6a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26593)[0m     @     0x55afe6a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26593)[0m     @     0x55afe69d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26593)[0m     @     0x55afe6a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26593)[0m     @     0x55afe6a5e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26593)[0m     @     0x55afe69d3689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26593)[0m     @     0x55afe6a5dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x7eff47b7cb53 at::TensorIterator::for_each()
[2m[36m(pid=26600)[0m     @     0x7eff47b7ce11 at::TensorIterator::for_each()
[2m[36m(pid=26600)[0m     @     0x7eff4a895c12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26600)[0m     @     0x7eff4a8b8cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26600)[0m     @     0x7eff478f6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26612)[0m     @     0x7f67612235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26612)[0m     @     0x7f676132b148 at::Tensor::copy_()
[2m[36m(pid=26612)[0m     @     0x7f6762f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26644)[0m     @     0x7f4aad1e6148 at::Tensor::copy_()
[2m[36m(pid=26644)[0m     @     0x7f4aaeddd989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26644)[0m     @     0x7f4aad0de5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26644)[0m     @     0x7f4aad1e6148 at::Tensor::copy_()
[2m[36m(pid=26646)[0m     @     0x7f9dad601989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26646)[0m     @     0x7f9dab9025cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26646)[0m     @     0x7f9daba0a148 at::Tensor::copy_()
[2m[36m(pid=26646)[0m     @     0x7f9db1cc0bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26646)[0m     @     0x55f1e9427fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26646)[0m     @     0x55f1e9382b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26646)[0m     @     0x55f1e940dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26646)[0m     @     0x55f1e940ea20 method_vectorcall
[2m[36m(pid=26646)[0m     @     0x55f1e9382bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26646)[0m     @     0x55f1e940dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26646)[0m     @     0x55f1e940e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26646)[0m     @     0x55f1e9383689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26646)[0m     @     0x55f1e940dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26646)[0m     @     0x55f1e940e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26683)[0m     @     0x7f215685f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26683)[0m     @     0x7f2156967148 at::Tensor::copy_()
[2m[36m(pid=26683)[0m     @     0x7f215855e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26683)[0m     @     0x7f215685f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26730)[0m     @     0x7f0a312235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26730)[0m     @     0x7f0a3132b148 at::Tensor::copy_()
[2m[36m(pid=26730)[0m     @     0x7f0a32f22989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b3db88cfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26676)[0m     @     0x7f5b3abc6009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26676)[0m     @     0x7f5b3abc4c3f at::native::copy_impl()
[2m[36m(pid=26676)[0m     @     0x7f5b3abc5ed4 at::native::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefcdd07c3f at::native::copy_impl()
[2m[36m(pid=26603)[0m     @     0x7eefcdd08ed4 at::native::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefce44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26608)[0m     @     0x7fb3d32255cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26608)[0m     @     0x7fb3d332d148 at::Tensor::copy_()
[2m[36m(pid=26608)[0m     @     0x7fb3d4f24989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26608)[0m     @     0x7fb3d32255cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26594)[0m     @     0x7f40c7e65148 at::Tensor::copy_()
[2m[36m(pid=26594)[0m     @     0x7f40ce11bbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26594)[0m     @     0x557866e2dfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26594)[0m     @     0x557866d88b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26594)[0m     @     0x557866e13baf _PyEval_EvalCodeWithName
[2m[36m(pid=26594)[0m     @     0x557866e14a20 method_vectorcall
[2m[36m(pid=26594)[0m     @     0x557866d88bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26594)[0m     @     0x557866e13baf _PyEval_EvalCodeWithName
[2m[36m(pid=26594)[0m     @     0x557866e14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26594)[0m     @     0x557866d89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26594)[0m     @     0x557866e13baf _PyEval_EvalCodeWithName
[2m[36m(pid=26594)[0m     @     0x557866e14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26594)[0m     @     0x557866d89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26594)[0m     @     0x557866e13baf _PyEval_EvalCodeWithName
[2m[36m(pid=26594)[0m     @     0x557866e14643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26594)[0m     @     0x557866d89689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26594)[0m     @     0x557866e13baf _PyEval_EvalCodeWithName
[2m[36m(pid=26684)[0m     @     0x7ee062973148 at::Tensor::copy_()
[2m[36m(pid=26684)[0m     @     0x7ee06456a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26684)[0m     @     0x7ee06286b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26621)[0m     @     0x5570c5536bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26621)[0m     @     0x5570c55c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26621)[0m     @     0x5570c55c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26621)[0m     @     0x5570c5537689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26621)[0m     @     0x5570c55c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26621)[0m     @     0x5570c55c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26621)[0m     @     0x5570c5537689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26621)[0m     @     0x5570c55c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26621)[0m     @     0x5570c55c2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26621)[0m     @     0x5570c5537689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26621)[0m     @     0x5570c55c1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x7f8a727265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26654)[0m     @     0x7f8a7282e148 at::Tensor::copy_()
[2m[36m(pid=26654)[0m     @     0x7f8a74425989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26654)[0m     @     0x7f8a727265cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26708)[0m     @     0x7f1c7c140148 at::Tensor::copy_()
[2m[36m(pid=26708)[0m     @     0x7f1c823f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26708)[0m     @     0x562b942fbfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26708)[0m     @     0x562b94256b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26708)[0m     @     0x562b942e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26708)[0m     @     0x562b942e2a20 method_vectorcall
[2m[36m(pid=26708)[0m     @     0x562b94256bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26708)[0m     @     0x562b942e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26708)[0m     @     0x562b942e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26708)[0m     @     0x562b94257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26708)[0m     @     0x562b942e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26708)[0m     @     0x562b942e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26708)[0m     @     0x562b94257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26708)[0m     @     0x562b942e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26708)[0m     @     0x562b942e2643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26708)[0m     @     0x562b94257689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26708)[0m     @     0x562b942e1baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x7fa6f3833148 at::Tensor::copy_()
[2m[36m(pid=26596)[0m     @     0x7fa6f542a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26596)[0m     @     0x7fa6f372b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26614)[0m     @     0x564da1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26614)[0m     @     0x564da119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26614)[0m     @     0x564da119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26614)[0m     @     0x564da1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26614)[0m     @     0x564da119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26614)[0m     @     0x564da119c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26614)[0m     @     0x564da1111689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26614)[0m     @     0x564da119bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26728)[0m     @     0x7f7b17d93e11 at::TensorIterator::for_each()
[2m[36m(pid=26728)[0m     @     0x7f7b1aaacc12 _ZN2at6native12_GLOBAL__N_114cpu_kernel_vecILb1EZZZNS1_L11copy_kernelERNS_14TensorIteratorEbENKUlvE3_clEvENKUlvE2_clEvEUlfE_ZZZNS1_L11copy_kernelES4_bENKS5_clEvENKS6_clEvEUlNS_6vec25612_GLOBAL__N_16Vec256IfEEE0_EEvS4_OT0_OT1_
[2m[36m(pid=26728)[0m     @     0x7f7b1aacfcfd at::native::(anonymous namespace)::copy_kernel()
[2m[36m(pid=26665)[0m     @     0x7f874d3dabd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26665)[0m     @     0x564561e50fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26665)[0m     @     0x564561dabb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26665)[0m     @     0x564561e36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26665)[0m     @     0x564561e37a20 method_vectorcall
[2m[36m(pid=26665)[0m     @     0x564561dabbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26665)[0m     @     0x564561e36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26665)[0m     @     0x564561e37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26665)[0m     @     0x564561dac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26665)[0m     @     0x564561e36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26665)[0m     @     0x564561e37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26665)[0m     @     0x564561dac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26665)[0m     @     0x564561e36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26665)[0m     @     0x564561e37643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26665)[0m     @     0x564561dac689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26665)[0m     @     0x564561e36baf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x557a80221fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26726)[0m     @     0x557a8017cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26726)[0m     @     0x557a80207baf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x557a80208a20 method_vectorcall
[2m[36m(pid=26726)[0m     @     0x557a8017cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26726)[0m     @     0x557a80207baf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x557a80208643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26726)[0m     @     0x557a8017d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26726)[0m     @     0x557a80207baf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x557a80208643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26726)[0m     @     0x557a8017d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26726)[0m     @     0x557a80207baf _PyEval_EvalCodeWithName
[2m[36m(pid=26726)[0m     @     0x557a80208643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26726)[0m     @     0x557a8017d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26726)[0m     @     0x557a80207baf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x7eff478f4c3f at::native::copy_impl()
[2m[36m(pid=26600)[0m     @     0x7eff478f5ed4 at::native::copy_()
[2m[36m(pid=26600)[0m     @     0x7eff480385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26612)[0m     @     0x7f67612235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26612)[0m     @     0x7f676132b148 at::Tensor::copy_()
[2m[36m(pid=26612)[0m     @     0x7f67675e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26612)[0m     @     0x561be3452fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26612)[0m     @     0x561be33adb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26612)[0m     @     0x561be3438baf _PyEval_EvalCodeWithName
[2m[36m(pid=26612)[0m     @     0x561be3439a20 method_vectorcall
[2m[36m(pid=26612)[0m     @     0x561be33adbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26612)[0m     @     0x561be3438baf _PyEval_EvalCodeWithName
[2m[36m(pid=26612)[0m     @     0x561be3439643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26612)[0m     @     0x561be33ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26612)[0m     @     0x561be3438baf _PyEval_EvalCodeWithName
[2m[36m(pid=26612)[0m     @     0x561be3439643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26612)[0m     @     0x561be33ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26612)[0m     @     0x561be3438baf _PyEval_EvalCodeWithName
[2m[36m(pid=26612)[0m     @     0x561be3439643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26612)[0m     @     0x561be33ae689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26612)[0m     @     0x561be3438baf _PyEval_EvalCodeWithName
[2m[36m(pid=26644)[0m     @     0x7f4ab349cbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26644)[0m     @     0x556daf82cfd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26644)[0m     @     0x556daf787b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26644)[0m     @     0x556daf812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26644)[0m     @     0x556daf813a20 method_vectorcall
[2m[36m(pid=26644)[0m     @     0x556daf787bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26644)[0m     @     0x556daf812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26644)[0m     @     0x556daf813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26644)[0m     @     0x556daf788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26644)[0m     @     0x556daf812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26644)[0m     @     0x556daf813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26644)[0m     @     0x556daf788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26644)[0m     @     0x556daf812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26644)[0m     @     0x556daf813643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26644)[0m     @     0x556daf788689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26644)[0m     @     0x556daf812baf _PyEval_EvalCodeWithName
[2m[36m(pid=26646)[0m     @     0x55f1e9383689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26646)[0m     @     0x55f1e940dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26646)[0m     @     0x55f1e940e643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26646)[0m     @     0x55f1e9383689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26646)[0m     @     0x55f1e940dbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26683)[0m     @     0x7f2156967148 at::Tensor::copy_()
[2m[36m(pid=26683)[0m     @     0x7f215cc1dbd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26683)[0m     @     0x5640e9e56fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26683)[0m     @     0x5640e9db1b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26683)[0m     @     0x5640e9e3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26683)[0m     @     0x5640e9e3da20 method_vectorcall
[2m[36m(pid=26683)[0m     @     0x5640e9db1bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26683)[0m     @     0x5640e9e3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26683)[0m     @     0x5640e9e3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26683)[0m     @     0x5640e9db2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26683)[0m     @     0x5640e9e3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26683)[0m     @     0x5640e9e3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26683)[0m     @     0x5640e9db2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26683)[0m     @     0x5640e9e3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26683)[0m     @     0x5640e9e3d643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26683)[0m     @     0x5640e9db2689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26683)[0m     @     0x5640e9e3cbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26730)[0m     @     0x7f0a312235cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26730)[0m     @     0x7f0a3132b148 at::Tensor::copy_()
[2m[36m(pid=26730)[0m     @     0x7f0a375e1bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26730)[0m     @     0x5615ba183fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26730)[0m     @     0x5615ba0deb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26730)[0m     @     0x5615ba169baf _PyEval_EvalCodeWithName
[2m[36m(pid=26730)[0m     @     0x5615ba16aa20 method_vectorcall
[2m[36m(pid=26730)[0m     @     0x5615ba0debfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26730)[0m     @     0x5615ba169baf _PyEval_EvalCodeWithName
[2m[36m(pid=26730)[0m     @     0x5615ba16a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26730)[0m     @     0x5615ba0df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26730)[0m     @     0x5615ba169baf _PyEval_EvalCodeWithName
[2m[36m(pid=26730)[0m     @     0x5615ba16a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26730)[0m     @     0x5615ba0df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26730)[0m     @     0x5615ba169baf _PyEval_EvalCodeWithName
[2m[36m(pid=26730)[0m     @     0x5615ba16a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26730)[0m     @     0x5615ba0df689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26730)[0m     @     0x5615ba169baf _PyEval_EvalCodeWithName
[2m[36m(pid=26676)[0m     @     0x7f5b3b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26676)[0m     @     0x7f5b3b410148 at::Tensor::copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b3d007989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefce553148 at::Tensor::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefd014a989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefce44b5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26608)[0m     @     0x7fb3d332d148 at::Tensor::copy_()
[2m[36m(pid=26608)[0m     @     0x7fb3d95e3bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26608)[0m     @     0x5604ae085fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26608)[0m     @     0x5604adfe0b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26608)[0m     @     0x5604ae06bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x5604ae06ca20 method_vectorcall
[2m[36m(pid=26608)[0m     @     0x5604adfe0bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26608)[0m     @     0x5604ae06bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x5604ae06c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26608)[0m     @     0x5604adfe1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26608)[0m     @     0x5604ae06bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x5604ae06c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26608)[0m     @     0x5604adfe1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x7ee062973148 at::Tensor::copy_()
[2m[36m(pid=26684)[0m     @     0x7ee068c29bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26684)[0m     @     0x557b33d2efd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26684)[0m     @     0x557b33c89b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x557b33d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=26684)[0m     @     0x557b33d15a20 method_vectorcall
[2m[36m(pid=26684)[0m     @     0x557b33c89bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x557b33d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=26684)[0m     @     0x557b33d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26684)[0m     @     0x557b33c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x557b33d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=26684)[0m     @     0x557b33d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26684)[0m     @     0x557b33c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x557b33d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=26684)[0m     @     0x557b33d15643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26684)[0m     @     0x557b33c8a689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26684)[0m     @     0x557b33d14baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x7f8a7282e148 at::Tensor::copy_()
[2m[36m(pid=26654)[0m     @     0x7f8a78ae4bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26654)[0m     @     0x55f8cd063fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26654)[0m     @     0x55f8ccfbeb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26654)[0m     @     0x55f8cd049baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x55f8cd04aa20 method_vectorcall
[2m[36m(pid=26654)[0m     @     0x55f8ccfbebfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26654)[0m     @     0x55f8cd049baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x55f8cd04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26654)[0m     @     0x55f8ccfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26654)[0m     @     0x55f8cd049baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x55f8cd04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26654)[0m     @     0x55f8ccfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x7fa6f3833148 at::Tensor::copy_()
[2m[36m(pid=26596)[0m     @     0x7fa6f9ae9bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26596)[0m     @     0x5617e4d61fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26596)[0m     @     0x5617e4cbcb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x5617e4d47baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x5617e4d48a20 method_vectorcall
[2m[36m(pid=26596)[0m     @     0x5617e4cbcbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x5617e4d47baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x5617e4d48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26596)[0m     @     0x5617e4cbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x5617e4d47baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x5617e4d48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26596)[0m     @     0x5617e4cbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x5617e4d47baf _PyEval_EvalCodeWithName
[2m[36m(pid=26596)[0m     @     0x5617e4d48643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26596)[0m     @     0x5617e4cbd689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26596)[0m     @     0x5617e4d47baf _PyEval_EvalCodeWithName
[2m[36m(pid=26728)[0m     @     0x7f7b17b0d009 at::native::DispatchStub<>::operator()<>()
[2m[36m(pid=26728)[0m     @     0x7f7b17b0bc3f at::native::copy_impl()
[2m[36m(pid=26728)[0m     @     0x7f7b17b0ced4 at::native::copy_()
[2m[36m(pid=26600)[0m     @     0x7eff48140148 at::Tensor::copy_()
[2m[36m(pid=26600)[0m     @     0x7eff49d37989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b3b3085cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26603)[0m     @     0x7eefce553148 at::Tensor::copy_()
[2m[36m(pid=26603)[0m     @     0x7eefd4809bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26603)[0m     @     0x560acb0b1fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26603)[0m     @     0x560acb00cb08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26603)[0m     @     0x560acb097baf _PyEval_EvalCodeWithName
[2m[36m(pid=26603)[0m     @     0x560acb098a20 method_vectorcall
[2m[36m(pid=26603)[0m     @     0x560acb00cbfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26603)[0m     @     0x560acb097baf _PyEval_EvalCodeWithName
[2m[36m(pid=26603)[0m     @     0x560acb098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26603)[0m     @     0x560acb00d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26603)[0m     @     0x560acb097baf _PyEval_EvalCodeWithName
[2m[36m(pid=26603)[0m     @     0x560acb098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26603)[0m     @     0x560acb00d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26603)[0m     @     0x560acb097baf _PyEval_EvalCodeWithName
[2m[36m(pid=26603)[0m     @     0x560acb098643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26603)[0m     @     0x560acb00d689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26603)[0m     @     0x560acb097baf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x5604ae06bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26608)[0m     @     0x5604ae06c643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26608)[0m     @     0x5604adfe1689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26608)[0m     @     0x5604ae06bbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x55f8cd049baf _PyEval_EvalCodeWithName
[2m[36m(pid=26654)[0m     @     0x55f8cd04a643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26654)[0m     @     0x55f8ccfbf689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26654)[0m     @     0x55f8cd049baf _PyEval_EvalCodeWithName
[2m[36m(pid=26728)[0m     @     0x7f7b1824f5cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26600)[0m     @     0x7eff480385cc c10::Dispatcher::callWithDispatchKey<>()
[2m[36m(pid=26600)[0m     @     0x7eff48140148 at::Tensor::copy_()
[2m[36m(pid=26600)[0m     @     0x7eff4e3f6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b3b410148 at::Tensor::copy_()
[2m[36m(pid=26676)[0m     @     0x7f5b416c6bd4 torch::autograd::THPVariable_copy_()
[2m[36m(pid=26676)[0m     @     0x555dd0dc6fd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26676)[0m     @     0x555dd0d21b08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26676)[0m     @     0x555dd0dacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26676)[0m     @     0x555dd0dada20 method_vectorcall
[2m[36m(pid=26676)[0m     @     0x555dd0d21bfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26676)[0m     @     0x555dd0dacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26676)[0m     @     0x555dd0dad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26676)[0m     @     0x555dd0d22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26676)[0m     @     0x555dd0dacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26676)[0m     @     0x555dd0dad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26676)[0m     @     0x555dd0d22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26676)[0m     @     0x555dd0dacbaf _PyEval_EvalCodeWithName
[2m[36m(pid=26676)[0m     @     0x555dd0dad643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26676)[0m     @     0x555dd0d22689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26676)[0m     @     0x555dd0dacbaf _PyEval_EvalCodeWithName
2020-11-05 11:04:22,256	ERROR trial_runner.py:567 -- Trial PPO_jss_env_a43d4_00000: Error processing event.
Traceback (most recent call last):
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trial_runner.py", line 515, in _process_trial
    result = self.trial_executor.fetch_result(trial)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/ray_trial_executor.py", line 488, in fetch_result
    result = ray.get(trial_future[0], timeout=DEFAULT_GET_TIMEOUT)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/worker.py", line 1428, in get
    raise value.as_instanceof_cause()
ray.exceptions.RayTaskError: [36mray::PPO.train()[39m (pid=26722, ip=172.17.0.4)
  File "python/ray/_raylet.pyx", line 484, in ray._raylet.execute_task
  File "python/ray/_raylet.pyx", line 438, in ray._raylet.execute_task.function_executor
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 516, in train
    raise e
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer.py", line 505, in train
    result = Trainable.train(self)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/tune/trainable.py", line 336, in train
    result = self.step()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/rllib/agents/trainer_template.py", line 134, in step
    res = next(self.train_exec_impl)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 756, in __next__
    return next(self.built_iterator)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 843, in apply_filter
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 876, in apply_flatten
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 828, in add_wait_hooks
    item = next(it)
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 783, in apply_foreach
    for item in it:
  [Previous line repeated 1 more time]
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 466, in base_iterator
    actor_set.init_actors()
  File "/root/miniconda3/lib/python3.8/site-packages/ray/util/iter.py", line 1238, in init_actors
    ray.get([a.par_iter_init.remote(self.transforms) for a in self.actors])
ray.exceptions.RayActorError: The actor died unexpectedly before finishing this task.
[2m[36m(pid=26728)[0m     @     0x7f7b18357148 at::Tensor::copy_()
[2m[36m(pid=26728)[0m     @     0x7f7b19f4e989 torch::autograd::VariableType::(anonymous namespace)::copy_()
[2m[36m(pid=26600)[0m     @     0x55bcacf2ffd7 method_vectorcall_VARARGS_KEYWORDS
[2m[36m(pid=26600)[0m     @     0x55bcace8ab08 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26600)[0m     @     0x55bcacf15baf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x55bcacf16a20 method_vectorcall
[2m[36m(pid=26600)[0m     @     0x55bcace8abfd _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26600)[0m     @     0x55bcacf15baf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x55bcacf16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26600)[0m     @     0x55bcace8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26600)[0m     @     0x55bcacf15baf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x55bcacf16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26600)[0m     @     0x55bcace8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26600)[0m     @     0x55bcacf15baf _PyEval_EvalCodeWithName
[2m[36m(pid=26600)[0m     @     0x55bcacf16643 _PyFunction_Vectorcall.localalias.353
[2m[36m(pid=26600)[0m     @     0x55bcace8b689 _PyEval_EvalFrameDefault.cold.2792
[2m[36m(pid=26600)[0m     @     0x55bcacf15baf _PyEval_EvalCodeWithName
[2m[36m(pid=26728)[0m     @     0x7f7b1824f5cc c10::Dispatcher::callWithDispatchKey<>()
== Status ==
Memory usage on this node: 26.2/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a43d4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a43d4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a43d4_00000_0_2020-11-05_11-04-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

== Status ==
Memory usage on this node: 25.9/754.6 GiB
Using FIFO scheduling algorithm.
Resources requested: 0/80 CPUs, 0/1 GPUs, 0.0/555.42 GiB heap, 0.0/128.52 GiB objects (0/1.0 accelerator_type:RTX)
Result logdir: /root/ray_results/ppo-jss
Number of trials: 1 (1 ERROR)
+-------------------------+----------+-------+
| Trial name              | status   | loc   |
|-------------------------+----------+-------|
| PPO_jss_env_a43d4_00000 | ERROR    |       |
+-------------------------+----------+-------+
Number of errored trials: 1
+-------------------------+--------------+-----------------------------------------------------------------------------------+
| Trial name              |   # failures | error file                                                                        |
|-------------------------+--------------+-----------------------------------------------------------------------------------|
| PPO_jss_env_a43d4_00000 |            1 | /root/ray_results/ppo-jss/PPO_jss_env_a43d4_00000_0_2020-11-05_11-04-14/error.txt |
+-------------------------+--------------+-----------------------------------------------------------------------------------+

2020-11-05 11:04:22,268	WARNING worker.py:1072 -- A worker died or was killed while executing task ffffffffffffffff31c3fed901000000.
[2m[36m(pid=26722)[0m E1105 11:04:22.249678 26722 27886 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=set_weights, function_hash=}, task_id=7dd3b2683d323ffd31c3fed901000000, task_name=RolloutWorker.set_weights(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=0}
[2m[36m(pid=26722)[0m E1105 11:04:22.249882 26722 27886 task_manager.cc:323] Task failed: IOError: 14: Socket closed: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=par_iter_init, function_hash=}, task_id=0a51bbe8b791810831c3fed901000000, task_name=RolloutWorker.par_iter_init(), job_id=01000000, num_args=2, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=1}
[2m[36m(pid=26722)[0m E1105 11:04:22.270450 26722 27886 task_manager.cc:323] Task failed: IOError: cancelling all pending tasks of dead actor: Type=ACTOR_TASK, Language=PYTHON, Resources: {}, function_descriptor={type=PythonFunctionDescriptor, module_name=ray.rllib.evaluation.rollout_worker, class_name=RolloutWorker, function_name=stop, function_hash=}, task_id=d7b1ed864d13e17f31c3fed901000000, task_name=RolloutWorker.stop(), job_id=01000000, num_args=0, num_returns=2, actor_task_spec={actor_id=31c3fed901000000, actor_caller_id=ffffffffffffffffdf5a1a8201000000, actor_counter=2}
Traceback (most recent call last):
  File "train.py", line 74, in <module>
    train_func()
